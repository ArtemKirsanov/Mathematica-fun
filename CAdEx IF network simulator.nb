(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    345318,       7219]
NotebookOptionsPosition[    339363,       7116]
NotebookOutlinePosition[    339853,       7135]
CellTagsIndexPosition[    339810,       7132]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SetSystemOptions", "[", 
   RowBox[{"\"\<CheckMachineUnderflow\>\"", "\[Rule]", "False"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bsearchMax", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"list", ",", "_Complex", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"elem", ",", "_Real"}], "}"}]}], "}"}], ",", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n0", "=", "1"}], ",", 
         RowBox[{"n1", "=", 
          RowBox[{"Length", "[", "list", "]"}]}], ",", 
         RowBox[{"m", "=", "0"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"n0", "\[LessEqual]", "n1"}], ",", 
          RowBox[{
           RowBox[{"m", "=", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"n0", "+", "n1"}], ")"}], "/", "2"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"list", "[", 
               RowBox[{"[", "m", "]"}], "]"}], "\[Equal]", "elem"}], ",", 
             RowBox[{
              RowBox[{"While", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"m", "\[GreaterEqual]", "n0"}], "&&", 
                 RowBox[{
                  RowBox[{"list", "[", 
                   RowBox[{"[", "m", "]"}], "]"}], "\[Equal]", "elem"}]}], 
                ",", 
                RowBox[{"m", "--"}]}], "]"}], ";", 
              RowBox[{"Return", "[", 
               RowBox[{"m", "+", "1"}], "]"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"list", "[", 
               RowBox[{"[", "m", "]"}], "]"}], "<", "elem"}], ",", 
             RowBox[{"n0", "=", 
              RowBox[{"m", "+", "1"}]}], ",", 
             RowBox[{"n1", "=", 
              RowBox[{"m", "-", "1"}]}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"list", "[", 
            RowBox[{"[", "m", "]"}], "]"}], ">", "elem"}], ",", "m", ",", 
          RowBox[{"m", "+", "1"}]}], "]"}]}]}], "]"}], ",", 
     RowBox[{"RuntimeAttributes", "\[Rule]", 
      RowBox[{"{", "Listable", "}"}]}], ",", 
     RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.820025361022595*^9, 3.8200253664217997`*^9}, {
  3.820027039205885*^9, 3.820027043448135*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"ef810b2a-82e0-48fc-b104-f7c531fbc20e"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Spiking neural net simulator",
 FontSize->70,
 FontWeight->"Regular"]], "Title",
 CellChangeTimes->{{3.819900446696637*^9, 3.8199004468508673`*^9}, 
   3.819900509642579*^9, {3.8199006145870333`*^9, 3.819900634337435*^9}},
 TextAlignment->Center,ExpressionUUID->"8bc44782-d938-4f31-9860-4aca125fcec8"],

Cell[CellGroupData[{

Cell["Model equations", "Chapter",
 CellChangeTimes->{{3.8199006629254313`*^9, 3.819900708255167*^9}, {
  3.8199007410579042`*^9, 
  3.8199007575784693`*^9}},ExpressionUUID->"ed5cdab5-28ff-4806-ae64-\
c5e150b8b158"],

Cell[CellGroupData[{

Cell[TextData[{
 "Single neurons - Conductance based adaptive Integrate-and-fire ",
 StyleBox["(CAdEx)",
  FontSize->29,
  FontWeight->"SemiBold"]
}], "Section",
 CellChangeTimes->{{3.819900768908288*^9, 
  3.8199008201687107`*^9}},ExpressionUUID->"97dfadf9-f2cd-47ee-9875-\
e3209dcf0337"],

Cell[TextData[StyleBox["https://doi.org/10.1101/842823",
 FontFamily->".AppleSystemUIFont",
 FontSize->16,
 FontWeight->"Regular",
 FontSlant->"Italic"]], "Author",
 CellChangeTimes->{{3.819900884356008*^9, 3.819900889127996*^9}, {
  3.819900921663512*^9, 
  3.819900923472693*^9}},ExpressionUUID->"cceea9b6-bc9a-4e66-9215-\
00273ef9e303"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["V", "i"], "'"}], "[", "t", "]"}], "\[Equal]", 
   RowBox[{
    FractionBox["1", 
     SubscriptBox["Cm", "i"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["gl", "i"], "*", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["El", "i"], "-", 
         RowBox[{
          SubscriptBox["V", "i"], "[", "t", "]"}]}], ")"}]}], " ", "+", 
      RowBox[{
       SubscriptBox["gl", "i"], "*", 
       SubscriptBox["\[CapitalDelta]T", "i"], "*", 
       SuperscriptBox["E", 
        FractionBox[
         RowBox[{
          RowBox[{
           SubscriptBox["V", "i"], "[", "t", "]"}], "-", 
          SubscriptBox["VT", "i"]}], 
         SubscriptBox["\[CapitalDelta]T", "i"]]]}], "+", 
      RowBox[{
       RowBox[{
        SubscriptBox["gA", "i"], "[", "t", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["Ea", "i"], "-", 
         RowBox[{
          SubscriptBox["V", "i"], "[", "t", "]"}]}], ")"}], "e"}], "+", " ", 
      SubscriptBox["Isyn", "i"], "+", 
      SubscriptBox["Iapp", "i"]}], ")"}]}]}], ",", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["gA", "i"], "'"}], "[", "t", "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       SubscriptBox["Ga", "i"], 
       RowBox[{"1", "+", 
        SuperscriptBox["E", 
         FractionBox[
          RowBox[{
           SubscriptBox["Va", "i"], "-", 
           RowBox[{
            SubscriptBox["V", "i"], "[", "t", "]"}]}], 
          SubscriptBox["\[CapitalDelta]a", "i"]]]}]], "-", 
      RowBox[{
       SubscriptBox["gA", "i"], "[", "t", "]"}]}], ")"}], "/", 
    SubscriptBox["\[Tau]a", "i"]}]}], ","}]], "DisplayFormula",
 CellChangeTimes->{{3.819900849777239*^9, 3.819900856823453*^9}, 
   3.820034355904801*^9},ExpressionUUID->"299c1745-397f-467e-94da-\
9647caaf6563"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialization", "Chapter",
 CellChangeTimes->{{3.819900971945341*^9, 
  3.8199009752324467`*^9}},ExpressionUUID->"994986a8-ac87-4f02-b78a-\
f166998cd872"],

Cell[TextData[{
 StyleBox["Main 2 global variables include",
  FontSize->14,
  FontWeight->"Regular"],
 " ",
 StyleBox["NeuronTypes ",
  FontFamily->"Source Code Pro",
  FontSize->14,
  FontWeight->"SemiBold"],
 StyleBox["and",
  FontSize->14,
  FontWeight->"Regular"],
 "  ",
 StyleBox["SynapticParameterDistribution.\n",
  FontFamily->"Source Code Pro",
  FontWeight->"SemiBold"],
 StyleBox["NeuronTypes ",
  FontFamily->"Source Code Pro",
  FontSize->14,
  FontWeight->"SemiBold"],
 StyleBox["is a list of ",
  FontSize->14,
  FontWeight->"Regular"],
 StyleBox["Associations ",
  FontFamily->"Source Code Pro",
  FontSize->14,
  FontWeight->"SemiBold"],
 StyleBox["describing the properties for each distinct cell type in the \
network. Properties include the number of neurons of each type, their \
parameter distributions and some text description",
  FontSize->14,
  FontWeight->"Regular"]
}], "SideNote",
 CellChangeTimes->{{3.819901101571176*^9, 3.819901150240739*^9}, {
  3.819901209010004*^9, 
  3.819901376178183*^9}},ExpressionUUID->"6dd47a1a-7649-4282-985e-\
2d9565993e7c"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NeuronTypes", "=", 
     RowBox[{"Flatten", "@", 
      RowBox[{"(", GridBox[{
         {
          RowBox[{
           RowBox[{
           "Association", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"\"\<Number\>\"", "\[Rule]", "10"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
             "\"\<Name\>\"", "\[Rule]", " ", "\"\<Pyramidal Neuron\>\""}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"\"\<Cm\>\"", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"500", ",", "50"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<gl\>\"", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"3", ",", "0.5"}], "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"\"\<El\>\"", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"-", "60"}], ",", "3"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<\[CapitalDelta]T\>\"", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"3", ",", "0.5"}], "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"\"\<VT\>\"", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"-", "50"}], ",", "2"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Ea\>\"", " ", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"-", "70"}], ",", "3"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Ga\>\"", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"15", ",", "2"}], "]"}]}], ",", "\[IndentingNewLine]", 
             
             RowBox[{"\"\<Va\>\"", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"-", "50"}], ",", "3"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<\[CapitalDelta]a\>\"", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"5", ",", "0.5"}], "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"\"\<\[Tau]a\>\"", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"200", ",", "20"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<\[Delta]ga\>\"", "\[Rule]", "  ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"1.2", ",", "0.1"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Vreset\>\"", "\[Rule]", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"-", "55"}], ",", "2"}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}], 
          RowBox[{
           RowBox[{
           "Association", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"\"\<Number\>\"", "\[Rule]", " ", "3"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Name\>\"", "\[Rule]", " ", "\"\<Basket Cell\>\""}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"\"\<Cm\>\"", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"90", ",", "10"}], "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"\"\<gl\>\"", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"3", ",", "0.5"}], "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"\"\<El\>\"", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"-", "60.5"}], ",", "3"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<\[CapitalDelta]T\>\"", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"3", ",", "0.5"}], "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"\"\<VT\>\"", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"-", "50"}], ",", "2"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Ea\>\"", " ", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"-", "70"}], ",", "3"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Ga\>\"", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"15", ",", "2"}], "]"}]}], ",", "\[IndentingNewLine]", 
             
             RowBox[{"\"\<Va\>\"", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"-", "50"}], ",", "3"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<\[CapitalDelta]a\>\"", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"0.5", ",", "0.05"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<\[Tau]a\>\"", "\[Rule]", " ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"400", ",", "20"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<\[Delta]ga\>\"", "\[Rule]", "  ", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"0.07", ",", "0.01"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"\"\<Vreset\>\"", "\[Rule]", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"-", "55"}], ",", "2"}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}]}
        }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SynapticParameterDistribution", "=", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{
          "Association", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\"\<probability\>\"", "\[Rule]", "0.3"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<gsyn\>\"", "\[Rule]", " ", 
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"2", ",", "0.5"}], "]"}]}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"\"\<Esyn\>\"", "\[Rule]", " ", 
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"30", ",", "5"}], "]"}]}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<\[Alpha]\>\"", "\[Rule]", " ", 
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"10", ",", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"\"\<\[Beta]\>\"", "\[Rule]", " ", 
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"3", ",", "0.5"}], "]"}]}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"\"\<\[Tau]x\>\"", " ", "\[Rule]", " ", 
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"10", ",", "2"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"\"\<\[Delta]X\>\"", "\[Rule]", " ", 
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"1", ",", "0.1"}], "]"}]}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"\"\<Source\>\"", "\[Rule]", " ", "\"\<Pyramidal\>\""}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"\"\<Target\>\"", "\[Rule]", " ", "\"\<Pyramidal\>\""}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
            "\"\<Description\>\"", "\[Rule]", " ", 
             "\"\<Fast excitatory AMPA synapse\>\""}]}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}], 
         RowBox[{
         "Association", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\"\<probability\>\"", "\[Rule]", " ", "0.3"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<gsyn\>\"", "\[Rule]", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"2", ",", "0.5"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<Esyn\>\"", "\[Rule]", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"30", ",", "5"}], "]"}]}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<\[Alpha]\>\"", "\[Rule]", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"10", ",", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<\[Beta]\>\"", "\[Rule]", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"3", ",", "0.5"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<\[Tau]x\>\"", " ", "\[Rule]", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"10", ",", "2"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<\[Delta]X\>\"", "\[Rule]", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"1", ",", "0.1"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<Source\>\"", "\[Rule]", " ", "\"\<Pyramidal\>\""}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<Target\>\"", "\[Rule]", " ", "\"\<Basket\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
           "\"\<Description\>\"", "\[Rule]", " ", 
            "\"\<Fast excitatory AMPA synapse\>\""}]}], "\[IndentingNewLine]",
           "]"}]},
        {
         RowBox[{
         "Association", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\"\<probability\>\"", "\[Rule]", " ", "0.1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<gsyn\>\"", "\[Rule]", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"10", ",", "3"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<Esyn\>\"", "\[Rule]", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{
              RowBox[{"-", "90"}], ",", "5"}], "]"}]}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"\"\<\[Alpha]\>\"", "\[Rule]", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"10", ",", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<\[Beta]\>\"", "\[Rule]", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"3", ",", "0.5"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<\[Tau]x\>\"", " ", "\[Rule]", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"10", ",", "2"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<\[Delta]X\>\"", "\[Rule]", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"1", ",", "0.1"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<Source\>\"", "\[Rule]", " ", "\"\<Basket\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<Target\>\"", "\[Rule]", " ", "\"\<Pyramidal\>\""}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
           "\"\<Description\>\"", "\[Rule]", " ", 
            "\"\<Fast inhibitory GABAa synapse\>\""}]}], 
          "\[IndentingNewLine]", "]"}], 
         RowBox[{
         "Association", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\"\<probability\>\"", "\[Rule]", " ", "0.4"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<gsyn\>\"", "\[Rule]", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"10", ",", "3"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<Esyn\>\"", "\[Rule]", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{
              RowBox[{"-", "90"}], ",", "5"}], "]"}]}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"\"\<\[Alpha]\>\"", "\[Rule]", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"10", ",", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<\[Beta]\>\"", "\[Rule]", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"3", ",", "0.5"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<\[Tau]x\>\"", " ", "\[Rule]", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"10", ",", "2"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<\[Delta]X\>\"", "\[Rule]", " ", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"1", ",", "0.1"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<Source\>\"", "\[Rule]", " ", "\"\<Basket\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<Target\>\"", "\[Rule]", " ", "\"\<Basket\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
           "\"\<Description\>\"", "\[Rule]", " ", 
            "\"\<Fast inhibitory GABAa synapse\>\""}]}], 
          "\[IndentingNewLine]", "]"}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SimulationTime", " ", "=", " ", "1000"}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.819897526315035*^9, {3.819897634281966*^9, 3.8198978198670387`*^9}, {
   3.819897891998912*^9, 3.819897914349503*^9}, {3.819898025320897*^9, 
   3.81989805400871*^9}, {3.819898106637207*^9, 3.8198981840617*^9}, {
   3.819898234586219*^9, 3.8198983435170193`*^9}, {3.819898399764861*^9, 
   3.819898423625615*^9}, {3.8198985239623947`*^9, 3.819898549161978*^9}, {
   3.819898604570204*^9, 3.8198987153776007`*^9}, {3.819899115880753*^9, 
   3.8198991234175863`*^9}, {3.819900067581472*^9, 3.8199000880399942`*^9}, {
   3.819900126539919*^9, 3.819900290826044*^9}, {3.819901538702076*^9, 
   3.819901539315102*^9}, {3.819902102895239*^9, 3.8199021155463533`*^9}, {
   3.819902153199173*^9, 3.819902194398342*^9}, {3.819902668191844*^9, 
   3.8199026941024323`*^9}, {3.819903469259103*^9, 3.819903473573485*^9}, {
   3.81993428605226*^9, 3.819934299748165*^9}, {3.8199347461008043`*^9, 
   3.819934746683132*^9}, {3.819935081644664*^9, 3.819935081799864*^9}, {
   3.819953734413354*^9, 3.819953736610732*^9}, {3.819954281851095*^9, 
   3.81995430818956*^9}, {3.8199558226317997`*^9, 3.8199558243577003`*^9}, {
   3.8199591777585697`*^9, 3.819959180206153*^9}, {3.81995921080359*^9, 
   3.819959311759218*^9}, {3.81995940040486*^9, 3.819959403517416*^9}, {
   3.819962539067149*^9, 3.819962542128193*^9}, {3.819964748424086*^9, 
   3.819964753150991*^9}, {3.8199707497461653`*^9, 3.8199707521424294`*^9}, {
   3.81997088962537*^9, 3.819970904104233*^9}, {3.8199729295906363`*^9, 
   3.81997294824557*^9}, {3.819973188372367*^9, 3.819973195315002*^9}, {
   3.819982278144957*^9, 3.81998227849998*^9}, {3.819983440718216*^9, 
   3.819983442711266*^9}, {3.820025372532332*^9, 3.820025372664341*^9}, {
   3.82003874350869*^9, 3.8200387492834797`*^9}, {3.820040184347543*^9, 
   3.820040210128394*^9}, {3.820044474880332*^9, 3.8200444767622337`*^9}, {
   3.820045805101222*^9, 3.820045892238653*^9}, {3.820045958990756*^9, 
   3.82004596279357*^9}, {3.82004603296873*^9, 3.8200460541980667`*^9}, {
   3.8200460877351627`*^9, 3.8200461442601357`*^9}, {3.8200462353933268`*^9, 
   3.820046245993629*^9}, {3.820046281094305*^9, 3.820046286164727*^9}, {
   3.820046480816144*^9, 3.820046496132162*^9}, {3.820156970934698*^9, 
   3.820156999125669*^9}, {3.8201604647294273`*^9, 3.820160534833921*^9}, {
   3.8206505674296637`*^9, 3.820650567853896*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"ca724389-9eac-4dde-8e08-359e77c07a54"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating network topology", "Chapter",
 CellChangeTimes->{{3.819901548290166*^9, 
  3.819901566766897*^9}},ExpressionUUID->"08145c2f-bcf1-4c27-8694-\
4dce89e50161"],

Cell[TextData[{
 StyleBox["GetConnectionMatrix ",
  FontFamily->"Source Code Pro",
  FontSize->14,
  FontWeight->"SemiBold"],
 StyleBox["creates a random Boolean matrix with dimensions {",
  FontSize->14,
  FontWeight->"Regular"],
 StyleBox["N,N",
  FontFamily->"Source Code Pro",
  FontSize->14,
  FontWeight->"SemiBold"],
 StyleBox["}, where ",
  FontSize->14,
  FontWeight->"Regular"],
 StyleBox["N",
  FontFamily->"Source Code Pro",
  FontSize->14,
  FontWeight->"SemiBold"],
 StyleBox[" - total number of neurons in the network \n",
  FontSize->14,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", 
    RowBox[{"i", ",", "j"}]], TraditionalForm]], "Text",ExpressionUUID->
  "7d4bd111-bf2c-44c5-84cb-d936c4dd1290"],
 " = = 1 means that neuron ",
 StyleBox["i",
  FontFamily->"Source Code Pro",
  FontWeight->"SemiBold"],
 " synapses onto neuron ",
 StyleBox["j",
  FontFamily->"Source Code Pro",
  FontWeight->"SemiBold"]
}], "SideNote",
 CellChangeTimes->{
  3.819902808018022*^9, {3.8199029311946707`*^9, 3.819902933029504*^9}, {
   3.8199547435857143`*^9, 
   3.8199547475206413`*^9}},ExpressionUUID->"c2361805-c572-41ed-af1a-\
3a62e2d2361c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetConnectionMatrix", "[", 
    RowBox[{"NeuronTypeNumbers_", ",", "probabilityMatrix_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ArrayFlatten", "[", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"BernoulliDistribution", "[", 
            RowBox[{"probabilityMatrix", "[", 
             RowBox[{"[", 
              RowBox[{"col", ",", "row"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"NeuronTypeNumbers", "[", 
              RowBox[{"[", "col", "]"}], "]"}], ",", 
             RowBox[{"NeuronTypeNumbers", "[", 
              RowBox[{"[", "row", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"row", ",", "1", ",", 
           RowBox[{"Length", "@", "NeuronTypeNumbers"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"col", ",", "1", ",", 
           RowBox[{"Length", "@", "NeuronTypeNumbers"}]}], "}"}]}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"1", "\[TwoWayRule]", "2"}]}], "]"}], "]"}], "*", 
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{"1", "+", 
       RowBox[{"IdentityMatrix", "[", 
        RowBox[{"Total", "@", "NeuronTypeNumbers"}], "]"}]}], ",", "2"}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.819880480365995*^9, 3.81988063389502*^9}, {
   3.819880695943787*^9, 3.819880766138736*^9}, {3.819881082202271*^9, 
   3.819881119227572*^9}, {3.8198811734875097`*^9, 3.81988123775132*^9}, {
   3.819881276370235*^9, 3.819881283813455*^9}, {3.819881338179597*^9, 
   3.819881347181273*^9}, {3.8198815361034317`*^9, 3.8198815430454893`*^9}, {
   3.819881680187162*^9, 3.819881708174829*^9}, {3.819881794256093*^9, 
   3.8198818451318827`*^9}, {3.819882006475397*^9, 3.819882272374372*^9}, {
   3.81988234390307*^9, 3.819882358640333*^9}, {3.819883871993381*^9, 
   3.819883898922174*^9}, {3.81988401462638*^9, 3.819884085809683*^9}, {
   3.819884129946555*^9, 3.8198842359022408`*^9}, {3.8198842805202723`*^9, 
   3.81988428391536*^9}, {3.8198843422955112`*^9, 3.819884397545783*^9}, {
   3.819884488843741*^9, 3.8198845003365602`*^9}, {3.8198847087051277`*^9, 
   3.819884760143507*^9}, {3.819885307338183*^9, 3.819885350933227*^9}, {
   3.819885442647253*^9, 3.819885479028428*^9}, {3.819885549909995*^9, 
   3.819885638709186*^9}, {3.819885685073608*^9, 3.819885688957368*^9}, {
   3.819885726966968*^9, 3.819885846309432*^9}, {3.819885908364419*^9, 
   3.8198859254792843`*^9}, {3.819886009186583*^9, 3.8198860149766073`*^9}, {
   3.819886047787208*^9, 3.8198861475350657`*^9}, {3.819886212716003*^9, 
   3.8198862195949793`*^9}, {3.81988626496737*^9, 3.8198863269494143`*^9}, {
   3.819886404540861*^9, 3.8198864048622913`*^9}, {3.8198864384404993`*^9, 
   3.819886492129259*^9}, {3.819886523424594*^9, 3.8198865655084743`*^9}, {
   3.819886720215391*^9, 3.819886765224943*^9}, {3.819886864625208*^9, 
   3.81988697444345*^9}, {3.8198870126109447`*^9, 3.819887018621402*^9}, {
   3.819887078150833*^9, 3.8198870808620653`*^9}, 3.819888311521619*^9, {
   3.819888810824606*^9, 3.819888812073941*^9}, {3.819889002137031*^9, 
   3.819889005424842*^9}, 3.819890165497211*^9, {3.8198903175482283`*^9, 
   3.819890317896455*^9}, {3.819890961374983*^9, 3.819890969713529*^9}, {
   3.81989392885709*^9, 3.819893934798925*^9}, {3.819894038005525*^9, 
   3.8198940484997387`*^9}, {3.819897280036023*^9, 3.8198974299895153`*^9}, {
   3.819898929878894*^9, 3.819898935302134*^9}, {3.8198992274933147`*^9, 
   3.819899229546014*^9}, {3.8198992707243433`*^9, 3.819899338848814*^9}, {
   3.819899725170108*^9, 3.819899807733243*^9}, {3.819899856232361*^9, 
   3.819899888786456*^9}, {3.81989992676507*^9, 3.8199000448401957`*^9}, {
   3.8199001061630898`*^9, 3.8199001185092773`*^9}, {3.8199019587189493`*^9, 
   3.819901959080255*^9}, {3.819902596404014*^9, 3.8199026598528423`*^9}, {
   3.819902868254225*^9, 3.819902883871203*^9}, 3.8199029472434196`*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"56f26081-3395-4b15-8081-3868e2c70a80"],

Cell[TextData[{
 StyleBox["PlotConnections ",
  FontFamily->"Source Code Pro",
  FontSize->14,
  FontWeight->"SemiBold"],
 StyleBox["plots creates a graph plot based on the adjacency matrix and the \
neuronal types distribution",
  FontSize->14,
  FontWeight->"Regular"]
}], "SideNote",
 CellChangeTimes->{{3.819902949184722*^9, 
  3.819903024801866*^9}},ExpressionUUID->"f35f8c17-5414-44ae-8b58-\
63c621ec8249"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotConnections", "[", 
   RowBox[{"NeuronTypeNumbers_", ",", "adjacencyMatrix_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "colors", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SeedRandom", "[", "70", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"colors", "=", 
      RowBox[{"{", 
       RowBox[{
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[0.8200000000000001, 0.19, 0.5], 
              RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            
            FrameStyle->RGBColor[
             0.5466666666666667, 0.12666666666666668`, 0.33333333333333337`],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"RGBColor", "[", 
              RowBox[{"0.8200000000000001`", ",", "0.19`", ",", "0.5`"}], 
              "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = 
              RGBColor[0.8200000000000001, 0.19, 0.5]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[0.8200000000000001, 0.19, 0.5],
         Editable->False,
         Selectable->False], ",", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[0.74, 1, 0.58], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            
            FrameStyle->RGBColor[
             0.49333333333333335`, 0.6666666666666666, 0.38666666666666666`],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"RGBColor", "[", 
              RowBox[{"0.74`", ",", "1", ",", "0.58`"}], "]"}], NumberMarks -> 
            False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = 
              RGBColor[0.74, 1, 0.58]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[0.74, 1, 0.58],
         Editable->False,
         Selectable->False], ",", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[0, 0.51, 1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->RGBColor[0., 0.34, 0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", "0.51`", ",", "1"}], "]"}], NumberMarks -> 
            False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = 
              RGBColor[0, 0.51, 1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[0, 0.51, 1],
         Editable->False,
         Selectable->False]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"SeedRandom", "[", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Legended", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"GraphPlot", "[", 
        RowBox[{
         RowBox[{"AdjacencyGraph", "@", "adjacencyMatrix"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"VertexStyle", "\[Rule]", 
          RowBox[{"Thread", "[", 
           RowBox[{"Rule", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"Total", "@", "NeuronTypeNumbers"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Flatten", "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"colors", "[", 
                   RowBox[{"[", "type", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", 
                    RowBox[{"NeuronTypeNumbers", "[", 
                    RowBox[{"[", "type", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
                
                RowBox[{"{", 
                 RowBox[{"type", ",", "1", ",", 
                  RowBox[{"Length", "@", "NeuronTypeNumbers"}]}], "}"}]}], 
               "]"}]}]}], "]"}], "]"}]}], ",", 
         RowBox[{"VertexLabels", "->", "\"\<Name\>\""}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PointLegend", "[", 
        RowBox[{"colors", ",", 
         RowBox[{"StringReplace", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"ToString", ",", 
             RowBox[{"Reverse", "[", 
              RowBox[{
               RowBox[{"Values", "@", 
                RowBox[{"NeuronTypes", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\<Number\>\"", ",", "\"\<Name\>\""}], "}"}]}], 
                  "]"}], "]"}]}], ",", "2"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<{\>\"", "\[Rule]", "\"\< \>\""}], ",", 
             RowBox[{"\"\<}\>\"", "\[Rule]", "\"\< \>\""}]}], "}"}]}], 
          "]"}]}], "]"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819880480365995*^9, 3.81988063389502*^9}, {
   3.819880695943787*^9, 3.819880766138736*^9}, {3.819881082202271*^9, 
   3.819881119227572*^9}, {3.8198811734875097`*^9, 3.81988123775132*^9}, {
   3.819881276370235*^9, 3.819881283813455*^9}, {3.819881338179597*^9, 
   3.819881347181273*^9}, {3.8198815361034317`*^9, 3.8198815430454893`*^9}, {
   3.819881680187162*^9, 3.819881708174829*^9}, {3.819881794256093*^9, 
   3.8198818451318827`*^9}, {3.819882006475397*^9, 3.819882272374372*^9}, {
   3.81988234390307*^9, 3.819882358640333*^9}, {3.819883871993381*^9, 
   3.819883898922174*^9}, {3.81988401462638*^9, 3.819884085809683*^9}, {
   3.819884129946555*^9, 3.8198842359022408`*^9}, {3.8198842805202723`*^9, 
   3.81988428391536*^9}, {3.8198843422955112`*^9, 3.819884397545783*^9}, {
   3.819884488843741*^9, 3.8198845003365602`*^9}, {3.8198847087051277`*^9, 
   3.819884760143507*^9}, {3.819885307338183*^9, 3.819885350933227*^9}, {
   3.819885442647253*^9, 3.819885479028428*^9}, {3.819885549909995*^9, 
   3.819885638709186*^9}, {3.819885685073608*^9, 3.819885688957368*^9}, {
   3.819885726966968*^9, 3.819885846309432*^9}, {3.819885908364419*^9, 
   3.8198859254792843`*^9}, {3.819886009186583*^9, 3.8198860149766073`*^9}, {
   3.819886047787208*^9, 3.8198861475350657`*^9}, {3.819886212716003*^9, 
   3.8198862195949793`*^9}, {3.81988626496737*^9, 3.8198863269494143`*^9}, {
   3.819886404540861*^9, 3.8198864048622913`*^9}, {3.8198864384404993`*^9, 
   3.819886492129259*^9}, {3.819886523424594*^9, 3.8198865655084743`*^9}, {
   3.819886720215391*^9, 3.819886765224943*^9}, {3.819886864625208*^9, 
   3.81988697444345*^9}, {3.8198870126109447`*^9, 3.819887018621402*^9}, {
   3.819887078150833*^9, 3.8198870808620653`*^9}, 3.819888311521619*^9, {
   3.819888810824606*^9, 3.819888812073941*^9}, {3.819889002137031*^9, 
   3.819889005424842*^9}, 3.819890165497211*^9, {3.8198903175482283`*^9, 
   3.819890317896455*^9}, {3.819890961374983*^9, 3.819890969713529*^9}, {
   3.81989392885709*^9, 3.819893934798925*^9}, {3.819894038005525*^9, 
   3.8198940484997387`*^9}, {3.819897280036023*^9, 3.8198974299895153`*^9}, {
   3.819898929878894*^9, 3.819898935302134*^9}, {3.8198992274933147`*^9, 
   3.819899229546014*^9}, {3.8198992707243433`*^9, 3.819899338848814*^9}, {
   3.819899725170108*^9, 3.819899807733243*^9}, {3.819899856232361*^9, 
   3.819899888786456*^9}, {3.81989992676507*^9, 3.8199000448401957`*^9}, {
   3.8199001061630898`*^9, 3.8199001185092773`*^9}, {3.8199019587189493`*^9, 
   3.819901959080255*^9}, {3.819902596404014*^9, 3.8199026598528423`*^9}, {
   3.819902868254225*^9, 3.819902883871203*^9}, 3.8199029472434196`*^9, {
   3.819934534423482*^9, 3.8199345357257338`*^9}, {3.819934751693697*^9, 
   3.819934752893105*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"8addf692-000a-47d6-a4a2-b670dd27ac5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Network Visualization", "Chapter",
 CellChangeTimes->{{3.8199028928379908`*^9, 
  3.819902901815192*^9}},ExpressionUUID->"441a0f87-7bbc-423d-90f9-\
156f6096122e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NetworkAdjacencyMatrix", " ", "=", " ", 
    RowBox[{"GetConnectionMatrix", "[", 
     RowBox[{
      RowBox[{"NeuronTypes", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}], ",", 
      RowBox[{"SynapticParameterDistribution", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "All", ",", "\"\<probability\>\""}], "]"}], 
       "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"networkGraph", " ", "=", 
   RowBox[{"PlotConnections", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"NeuronTypes", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", "NetworkAdjacencyMatrix"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.819880480365995*^9, 3.81988063389502*^9}, {
   3.819880695943787*^9, 3.819880766138736*^9}, {3.819881082202271*^9, 
   3.819881119227572*^9}, {3.8198811734875097`*^9, 3.81988123775132*^9}, {
   3.819881276370235*^9, 3.819881283813455*^9}, {3.819881338179597*^9, 
   3.819881347181273*^9}, {3.8198815361034317`*^9, 3.8198815430454893`*^9}, {
   3.819881680187162*^9, 3.819881708174829*^9}, {3.819881794256093*^9, 
   3.8198818451318827`*^9}, {3.819882006475397*^9, 3.819882272374372*^9}, {
   3.81988234390307*^9, 3.819882358640333*^9}, {3.819883871993381*^9, 
   3.819883898922174*^9}, {3.81988401462638*^9, 3.819884085809683*^9}, {
   3.819884129946555*^9, 3.8198842359022408`*^9}, {3.8198842805202723`*^9, 
   3.81988428391536*^9}, {3.8198843422955112`*^9, 3.819884397545783*^9}, {
   3.819884488843741*^9, 3.8198845003365602`*^9}, {3.8198847087051277`*^9, 
   3.819884760143507*^9}, {3.819885307338183*^9, 3.819885350933227*^9}, {
   3.819885442647253*^9, 3.819885479028428*^9}, {3.819885549909995*^9, 
   3.819885638709186*^9}, {3.819885685073608*^9, 3.819885688957368*^9}, {
   3.819885726966968*^9, 3.819885846309432*^9}, {3.819885908364419*^9, 
   3.8198859254792843`*^9}, {3.819886009186583*^9, 3.8198860149766073`*^9}, {
   3.819886047787208*^9, 3.8198861475350657`*^9}, {3.819886212716003*^9, 
   3.8198862195949793`*^9}, {3.81988626496737*^9, 3.8198863269494143`*^9}, {
   3.819886404540861*^9, 3.8198864048622913`*^9}, {3.8198864384404993`*^9, 
   3.819886492129259*^9}, {3.819886523424594*^9, 3.8198865655084743`*^9}, {
   3.819886720215391*^9, 3.819886765224943*^9}, {3.819886864625208*^9, 
   3.81988697444345*^9}, {3.8198870126109447`*^9, 3.819887018621402*^9}, {
   3.819887078150833*^9, 3.8198870808620653`*^9}, 3.819888311521619*^9, {
   3.819888810824606*^9, 3.819888812073941*^9}, {3.819889002137031*^9, 
   3.819889005424842*^9}, 3.819890165497211*^9, {3.8198903175482283`*^9, 
   3.819890317896455*^9}, {3.819890961374983*^9, 3.819890969713529*^9}, {
   3.81989392885709*^9, 3.819893934798925*^9}, {3.819894038005525*^9, 
   3.8198940484997387`*^9}, {3.819897280036023*^9, 3.8198974299895153`*^9}, {
   3.819898929878894*^9, 3.819898935302134*^9}, {3.8198992274933147`*^9, 
   3.819899229546014*^9}, {3.8198992707243433`*^9, 3.819899338848814*^9}, {
   3.819899725170108*^9, 3.819899807733243*^9}, {3.819899856232361*^9, 
   3.819899888786456*^9}, {3.81989992676507*^9, 3.8199000448401957`*^9}, {
   3.8199001061630898`*^9, 3.8199001185092773`*^9}, {3.8199019587189493`*^9, 
   3.819901959080255*^9}, {3.819902596404014*^9, 3.8199026598528423`*^9}, {
   3.819902868254225*^9, 3.819902883871203*^9}, {3.819903363257819*^9, 
   3.819903384706888*^9}, {3.819903426165934*^9, 3.8199034266311007`*^9}, 
   3.819959416024213*^9, {3.81998288982452*^9, 3.819982895887299*^9}, {
   3.820045940435121*^9, 3.8200459448499928`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"e405567a-4a05-4662-895c-4443213812a9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Arrowheads[Medium], 
      Directive[
       Opacity[0.7], 
       Hue[0.6, 0.7, 0.5]], 
      ArrowBox[{{0.40575231125096356`, 0.7960496909078711}, {
       1.094270728988272, 0.29384514736062695`}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{0.40575231125096356`, 0.7960496909078711}, {
        1.0811539290408545`, 0.7098104941805233}, {1.5735211685346324`, 
        0.23951373059537562`}}], 0.030727928214327224`], 
      ArrowBox[{{0.40575231125096356`, 0.7960496909078711}, {
       0.2999244521811044, 1.9123470574969528`}}, 0.030727928214327224`], 
      ArrowBox[{{2.0293055883867313`, 0.7928242809067906}, {1.094270728988272,
        0.29384514736062695`}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{2.0293055883867313`, 0.7928242809067906}, {
        1.4412359647396937`, 0.7438458183762089}, {0.9388925115384313, 
        1.0534840380359767`}}], 0.030727928214327224`], 
      ArrowBox[{{2.0293055883867313`, 0.7928242809067906}, {
       1.4767476364864298`, 1.883102226733518}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{2.0293055883867313`, 0.7928242809067906}, {
        2.532332020012373, 1.0139014095045995`}, {3.0683848369291473`, 
        0.8932446020768352}}], 0.030727928214327224`], 
      ArrowBox[{{2.0293055883867313`, 0.7928242809067906}, {2.344686949904422,
        0.17099830516545433`}}, 0.030727928214327224`], 
      ArrowBox[{{2.450635091300803, 1.06318866671744}, {2.0293055883867313`, 
       0.7928242809067906}}, 0.030727928214327224`], 
      ArrowBox[{{2.450635091300803, 1.06318866671744}, {1.5160257604172076`, 
       0.8121084702530543}}, 0.030727928214327224`], 
      ArrowBox[{{2.450635091300803, 1.06318866671744}, {1.4767476364864298`, 
       1.883102226733518}}, 0.030727928214327224`], 
      ArrowBox[{{2.450635091300803, 1.06318866671744}, {3.0683848369291473`, 
       0.8932446020768352}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{2.450635091300803, 1.06318866671744}, {
        2.1475238518496154`, 0.5071179298320121}, {1.5735211685346324`, 
        0.23951373059537562`}}], 0.030727928214327224`], 
      ArrowBox[{{1.5160257604172076`, 0.8121084702530543}, {
       0.40575231125096356`, 0.7960496909078711}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.5160257604172076`, 0.8121084702530543}, {
        1.1877671572598314`, 0.8378920314746799}, {0.9388925115384313, 
        1.0534840380359767`}}], 0.030727928214327224`], 
      ArrowBox[{{1.5160257604172076`, 0.8121084702530543}, {2.344686949904422,
        0.17099830516545433`}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.094270728988272, 0.29384514736062695`}, {
        0.8916660334913417, 0.6481140825248691}, {0.9388925115384313, 
        1.0534840380359767`}}], 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.094270728988272, 0.29384514736062695`}, {
        1.3428302475298441`, 0.34548773934484056`}, {1.5735211685346324`, 
        0.23951373059537562`}}], 0.030727928214327224`], 
      ArrowBox[{{1.094270728988272, 0.29384514736062695`}, {0., 0.}}, 
       0.030727928214327224`], 
      ArrowBox[{{1.094270728988272, 0.29384514736062695`}, {2.344686949904422,
        0.17099830516545433`}}, 0.030727928214327224`], 
      ArrowBox[{{1.897238198307463, 1.4131337881388748`}, {
       1.5160257604172076`, 0.8121084702530543}}, 0.030727928214327224`], 
      ArrowBox[{{1.897238198307463, 1.4131337881388748`}, {1.094270728988272, 
       0.29384514736062695`}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.897238198307463, 1.4131337881388748`}, {
        1.6097109562019543`, 1.5789722252668859`}, {1.4767476364864298`, 
        1.883102226733518}}], 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{0.9388925115384313, 1.0534840380359767`}, {
        1.5269621351854867`, 1.1024625005665538`}, {2.0293055883867313`, 
        0.7928242809067906}}], 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{0.9388925115384313, 1.0534840380359767`}, {
        1.2671511146957837`, 1.027700476814366}, {1.5160257604172076`, 
        0.8121084702530543}}], 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{0.9388925115384313, 1.0534840380359767`}, {
        1.1414972070353624`, 0.6992151028717357}, {1.094270728988272, 
        0.29384514736062695`}}], 0.030727928214327224`], 
      ArrowBox[{{0.9388925115384313, 1.0534840380359767`}, {1.897238198307463,
        1.4131337881388748`}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{0.9388925115384313, 1.0534840380359767`}, {
        1.071397039186302, 1.5567384310074657`}, {1.4767476364864298`, 
        1.883102226733518}}], 0.030727928214327224`], 
      ArrowBox[{{0.9388925115384313, 1.0534840380359767`}, {
       1.5735211685346324`, 0.23951373059537562`}}, 0.030727928214327224`], 
      ArrowBox[{{0.9388925115384313, 1.0534840380359767`}, {0., 0.}}, 
       0.030727928214327224`], 
      ArrowBox[{{0.9388925115384313, 1.0534840380359767`}, {
       0.2999244521811044, 1.9123470574969528`}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.4767476364864298`, 1.883102226733518}, {
        1.7642748785919495`, 1.7172637896054934`}, {1.897238198307463, 
        1.4131337881388748`}}], 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.4767476364864298`, 1.883102226733518}, {
        1.3442431088385525`, 1.3798478337620148`}, {0.9388925115384313, 
        1.0534840380359767`}}], 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.4767476364864298`, 1.883102226733518}, {
        0.8835270025117778, 1.7042069583856492`}, {0.2999244521811044, 
        1.9123470574969528`}}], 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{3.0683848369291473`, 0.8932446020768352}, {
        2.565358405303508, 0.6721674734790315}, {2.0293055883867313`, 
        0.7928242809067906}}], 0.030727928214327224`], 
      ArrowBox[{{3.0683848369291473`, 0.8932446020768352}, {1.897238198307463,
        1.4131337881388748`}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.5735211685346324`, 0.23951373059537562`}, {
        0.898119550744737, 0.3257529273227222}, {0.40575231125096356`, 
        0.7960496909078711}}], 0.030727928214327224`], 
      ArrowBox[{{1.5735211685346324`, 0.23951373059537562`}, {
       2.0293055883867313`, 0.7928242809067906}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.5735211685346324`, 0.23951373059537562`}, {
        1.8766324079857937`, 0.7955844674807898}, {2.450635091300803, 
        1.06318866671744}}], 0.030727928214327224`], 
      ArrowBox[{{1.5735211685346324`, 0.23951373059537562`}, {
       1.5160257604172076`, 0.8121084702530543}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.5735211685346324`, 0.23951373059537562`}, {
        1.3249616499930543`, 0.18787113861116064`}, {1.094270728988272, 
        0.29384514736062695`}}], 0.030727928214327224`], 
      ArrowBox[{{1.5735211685346324`, 0.23951373059537562`}, {
       2.344686949904422, 0.17099830516545433`}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{0.2999244521811044, 1.9123470574969528`}, {
        0.8931450861557513, 2.091242325844815}, {1.4767476364864298`, 
        1.883102226733518}}], 0.030727928214327224`], 
      ArrowBox[{{2.344686949904422, 0.17099830516545433`}, {2.450635091300803,
        1.06318866671744}}, 0.030727928214327224`], 
      ArrowBox[{{2.344686949904422, 0.17099830516545433`}, {
       3.0683848369291473`, 0.8932446020768352}}, 0.030727928214327224`]}, {
      Directive[
       Hue[0.6, 0.2, 0.8], 
       EdgeForm[
        Directive[
         GrayLevel[0], 
         Opacity[0.7]]]], {
       StyleBox[
        DiskBox[{0.40575231125096356`, 0.7960496909078711}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["1", TraditionalForm], 
        Offset[{2, 2}, {0.4364802394652908, 0.8267776191221984}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{2.0293055883867313`, 0.7928242809067906}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["2", TraditionalForm], 
        Offset[{2, 2}, {2.0600335166010586`, 0.8235522091211178}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{2.450635091300803, 1.06318866671744}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["3", TraditionalForm], 
        Offset[{2, 2}, {2.4813630195151304`, 1.093916594931767}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{1.5160257604172076`, 0.8121084702530543}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["4", TraditionalForm], 
        Offset[{2, 2}, {1.5467536886315347`, 0.8428363984673816}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{1.094270728988272, 0.29384514736062695`}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["5", TraditionalForm], 
        Offset[{2, 2}, {1.1249986572025992`, 0.3245730755749542}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{1.897238198307463, 1.4131337881388748`}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["6", TraditionalForm], 
        Offset[{2, 2}, {1.9279661265217902`, 1.443861716353202}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{0.9388925115384313, 1.0534840380359767`}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["7", TraditionalForm], 
        Offset[{2, 2}, {0.9696204397527586, 1.0842119662503038`}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{1.4767476364864298`, 1.883102226733518}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["8", TraditionalForm], 
        Offset[{2, 2}, {1.507475564700757, 1.9138301549478451`}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{3.0683848369291473`, 0.8932446020768352}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["9", TraditionalForm], 
        Offset[{2, 2}, {3.0991127651434747`, 0.9239725302911624}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{1.5735211685346324`, 0.23951373059537562`}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["10", TraditionalForm], 
        Offset[{2, 2}, {1.6042490967489595`, 0.27024165880970286`}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{0., 0.}, 0.030727928214327224`], {
         RGBColor[0.74, 1, 0.58]}, StripOnInput -> False], 
       InsetBox[
        FormBox["11", TraditionalForm], 
        Offset[{2, 2}, {0.030727928214327224`, 0.030727928214327224`}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{0.2999244521811044, 1.9123470574969528`}, 
         0.030727928214327224`], {
         RGBColor[0.74, 1, 0.58]}, StripOnInput -> False], 
       InsetBox[
        FormBox["12", TraditionalForm], 
        Offset[{2, 2}, {0.33065238039543166`, 1.94307498571128}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{2.344686949904422, 0.17099830516545433`}, 
         0.030727928214327224`], {
         RGBColor[0.74, 1, 0.58]}, StripOnInput -> False], 
       InsetBox[
        FormBox["13", TraditionalForm], 
        Offset[{2, 2}, {2.3754148781187494`, 0.20172623337978157`}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}, {
    FormatType -> TraditionalForm, FrameTicks -> None}], 
   FormBox[
    FormBox[
     TemplateBox[{"\" Pyramidal Neuron, 10 \"", "\" Basket Cell, 3 \""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8200000000000001, 0.19, 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8200000000000001, 0.19, 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.74, 1, 0.58]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.74, 1, 0.58]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8200000000000001, 0.19, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.5466666666666667, 0.12666666666666668`, 
                    0.33333333333333337`], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8200000000000001`", ",", "0.19`", ",", "0.5`"}], "]"}],
                    NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8200000000000001, 0.19, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.8200000000000001, 0.19, 0.5], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.74, 1, 0.58], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.49333333333333335`, 0.6666666666666666, 
                    0.38666666666666666`], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.74`", ",", "1", ",", "0.58`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.74, 1, 0.58]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.74, 1, 0.58], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.51, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0.34, 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.51`", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.51, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0.51, 1], Editable -> False, Selectable -> 
                False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.819900004955127*^9, 3.819900045724832*^9, 3.819900118876318*^9, {
   3.819900240077025*^9, 3.819900293891425*^9}, 3.819901959984523*^9, {
   3.819902597776566*^9, 3.819902627612665*^9}, {3.819902660742585*^9, 
   3.819902697240911*^9}, 3.81990338662556*^9, 3.81990347762195*^9, 
   3.819934308360643*^9, 3.8199347558370543`*^9, 3.819935085857045*^9, 
   3.8199537407169733`*^9, {3.819954300007875*^9, 3.8199543120278597`*^9}, 
   3.819955828367025*^9, 3.819959186881274*^9, 3.819959281916421*^9, 
   3.819959318729066*^9, {3.8199594071737013`*^9, 3.819959416808989*^9}, 
   3.819961405488556*^9, 3.819962546579363*^9, {3.819964736168479*^9, 
   3.8199647576827927`*^9}, 3.819970639881728*^9, 3.819970912214884*^9, {
   3.8199729227641697`*^9, 3.819972950826377*^9}, {3.8199731981817617`*^9, 
   3.819973208418248*^9}, 3.819973396315488*^9, 3.81998228668965*^9, 
   3.81998290142691*^9, 3.8199834490725*^9, 3.819985069591902*^9, 
   3.820025376264288*^9, 3.8200387596926622`*^9, 3.820040219049185*^9, 
   3.820044481989127*^9, 3.820045900730238*^9, {3.820045940886477*^9, 
   3.8200459834495983`*^9}, 3.820046158987033*^9, 3.820046252227601*^9, 
   3.820046320090708*^9, 3.820046440148769*^9, 3.820046502760869*^9, 
   3.820157007999733*^9, {3.8201605425950212`*^9, 3.820160559900036*^9}, 
   3.820650579714521*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"498e7bbc-de93-4689-926f-e7eaf6e90645"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modelling neurons", "Chapter",
 CellChangeTimes->{{3.8199020031232557`*^9, 3.81990202516607*^9}, {
  3.8199020551980867`*^9, 3.819902142545147*^9}, {3.8199021988135433`*^9, 
  3.819902262444006*^9}, {3.8199022997224817`*^9, 3.819902342463319*^9}, {
  3.81990241410384*^9, 3.819902426493462*^9}, {3.8199024757425013`*^9, 
  3.819902592210888*^9}, {3.819903126166088*^9, 3.819903154494754*^9}, {
  3.819958886018856*^9, 
  3.819958889359087*^9}},ExpressionUUID->"0b08caf5-80c4-4b13-82b4-\
b0e204aa17e6"],

Cell[TextData[StyleBox["General equation for a single neuron and a list of \
parameters need for each neuron",
 FontSize->14,
 FontWeight->"Regular"]], "SideNote",
 CellChangeTimes->{{3.819903649667961*^9, 3.819903659212543*^9}, {
  3.819958824699362*^9, 
  3.819958837377302*^9}},ExpressionUUID->"95338c21-a0ce-4a79-802e-\
eccbecc43787"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NeuronParameterList", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "Cm", ",", "gl", ",", "El", ",", "\[CapitalDelta]T", ",", "VT", ",", 
       "Ea", ",", "Ga", ",", "Va", ",", "\[CapitalDelta]a", ",", "\[Tau]a", 
       ",", "\[Delta]ga", ",", "Vreset"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GenericNeuronEquation", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["V", "i"], "'"}], "[", "t", "]"}], "\[Equal]", 
        FractionBox[
         RowBox[{
          RowBox[{
           SubscriptBox["gl", "i"], "*", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["El", "i"], "-", 
             RowBox[{
              SubscriptBox["V", "i"], "[", "t", "]"}]}], ")"}]}], " ", "+", 
          RowBox[{
           SubscriptBox["gl", "i"], "*", 
           SubscriptBox["\[CapitalDelta]T", "i"], "*", 
           SuperscriptBox["E", 
            FractionBox[
             RowBox[{
              RowBox[{
               SubscriptBox["V", "i"], "[", "t", "]"}], "-", 
              SubscriptBox["VT", "i"]}], 
             SubscriptBox["\[CapitalDelta]T", "i"]]]}], "+", 
          RowBox[{
           RowBox[{
            SubscriptBox["gA", "i"], "[", "t", "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["Ea", "i"], "-", 
             RowBox[{
              SubscriptBox["V", "i"], "[", "t", "]"}]}], ")"}]}], "+", " ", 
          SubscriptBox["Isyn", "i"], "+", 
          SubscriptBox["Iapp", "i"]}], 
         SubscriptBox["Cm", "i"]]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["gA", "i"], "'"}], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            SubscriptBox["Ga", "i"], 
            RowBox[{"1", "+", 
             SuperscriptBox["E", 
              FractionBox[
               RowBox[{
                SubscriptBox["Va", "i"], "-", 
                RowBox[{
                 SubscriptBox["V", "i"], "[", "t", "]"}]}], 
               SubscriptBox["\[CapitalDelta]a", "i"]]]}]], "-", 
           RowBox[{
            SubscriptBox["gA", "i"], "[", "t", "]"}]}], ")"}], "/", 
         SubscriptBox["\[Tau]a", "i"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         SubscriptBox["V", "i"], "[", "0", "]"}], "\[Equal]", 
        SubscriptBox["El", "i"]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         SubscriptBox["gA", "i"], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       SubscriptBox["event", "i"]}], "\[IndentingNewLine]", "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.819903156958659*^9, 3.819903206729982*^9}, 
   3.819903893366493*^9, {3.81993498759729*^9, 3.819935041346401*^9}, {
   3.8199620273837757`*^9, 3.81996215795965*^9}, {3.8199621902058363`*^9, 
   3.819962218197872*^9}, {3.819962253945299*^9, 3.819962254985243*^9}, {
   3.8199655518471937`*^9, 3.819965561881996*^9}, {3.81997097965441*^9, 
   3.81997099855667*^9}, {3.819971758531753*^9, 3.819971767456942*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"e0d6aef7-e5e5-47bb-a7ee-f6fc09f110b7"],

Cell[TextData[{
 StyleBox["NeuronParameterValues",
  FontFamily->"Source Code Pro",
  FontSize->14,
  FontWeight->"SemiBold"],
 StyleBox[" is a set of rules for generating parameters for individual \
neurons, based on the distribution ",
  FontSize->14,
  FontWeight->"Regular"]
}], "SideNote",
 CellChangeTimes->{{3.819954048569706*^9, 3.819954095597376*^9}, {
  3.819958440570113*^9, 
  3.819958444975163*^9}},ExpressionUUID->"335f6107-820f-45c7-872e-\
06e665347abf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NeuronParameterValues", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Thread", ",", "\[IndentingNewLine]", 
     RowBox[{"Thread", "[", 
      RowBox[{"Rule", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["parameter", "j"], ",", 
          RowBox[{"{", 
           RowBox[{"parameter", ",", "NeuronParameterList"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Total", "@", 
             RowBox[{"NeuronTypes", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], 
           "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Flatten", "@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"RandomVariate", "@", 
                RowBox[{"NeuronTypes", "[", 
                 RowBox[{"[", 
                  RowBox[{"type", ",", 
                   RowBox[{"ToString", "@", "parameter"}]}], "]"}], "]"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{
                  RowBox[{"NeuronTypes", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}], "[", 
                  RowBox[{"[", "type", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"type", ",", "1", ",", 
               RowBox[{"Length", "@", 
                RowBox[{"NeuronTypes", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], 
              "}"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"parameter", ",", "NeuronParameterList"}], "}"}]}], 
         "]"}]}], "\[IndentingNewLine]", "]"}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"NeuronParameterValues", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.99, 1, 0.89], Opacity[0.78], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.66, 0.6666666666666666, 0.5933333333333334, 0.78],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0.99`", ",", "1", ",", "0.89`", ",", "0.78`"}], "]"}], 
        NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 0.78; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.99, 1, 0.89]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.99, 1, 0.89, 0.78],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"ItemStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "15", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.81995410588144*^9, 3.819954160724285*^9}, {
   3.819954690487411*^9, 3.81995470280195*^9}, {3.819956096915175*^9, 
   3.819956100445244*^9}, {3.819958482320498*^9, 3.819958628433353*^9}, 
   3.819958856274253*^9, {3.819959425983789*^9, 3.819959437799899*^9}, 
   3.819964783918499*^9, {3.8199713422022552`*^9, 3.819971364938795*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"3158e1b1-1cc5-4f99-a085-687d5cf3f7e2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      SubscriptBox["Cm", "1"], "\[Rule]", "504.5165704975831`"}], 
     RowBox[{
      SubscriptBox["Cm", "2"], "\[Rule]", "483.91677820384916`"}], 
     RowBox[{
      SubscriptBox["Cm", "3"], "\[Rule]", "487.76647222598825`"}]},
    {
     RowBox[{
      SubscriptBox["gl", "1"], "\[Rule]", "3.3190834652924184`"}], 
     RowBox[{
      SubscriptBox["gl", "2"], "\[Rule]", "2.856385286489649`"}], 
     RowBox[{
      SubscriptBox["gl", "3"], "\[Rule]", "2.767345535857321`"}]},
    {
     RowBox[{
      SubscriptBox["El", "1"], "\[Rule]", 
      RowBox[{"-", "55.363101117957775`"}]}], 
     RowBox[{
      SubscriptBox["El", "2"], "\[Rule]", 
      RowBox[{"-", "59.843263951686694`"}]}], 
     RowBox[{
      SubscriptBox["El", "3"], "\[Rule]", 
      RowBox[{"-", "56.19592927390256`"}]}]},
    {
     RowBox[{
      SubscriptBox["\[CapitalDelta]T", "1"], "\[Rule]", 
      "2.611607153853332`"}], 
     RowBox[{
      SubscriptBox["\[CapitalDelta]T", "2"], "\[Rule]", 
      "3.6571690338111966`"}], 
     RowBox[{
      SubscriptBox["\[CapitalDelta]T", "3"], "\[Rule]", 
      "3.1041998869092455`"}]},
    {
     RowBox[{
      SubscriptBox["VT", "1"], "\[Rule]", 
      RowBox[{"-", "49.712704320287195`"}]}], 
     RowBox[{
      SubscriptBox["VT", "2"], "\[Rule]", 
      RowBox[{"-", "43.193211404196305`"}]}], 
     RowBox[{
      SubscriptBox["VT", "3"], "\[Rule]", 
      RowBox[{"-", "52.72563461487494`"}]}]},
    {
     RowBox[{
      SubscriptBox["Ea", "1"], "\[Rule]", 
      RowBox[{"-", "70.76761352231048`"}]}], 
     RowBox[{
      SubscriptBox["Ea", "2"], "\[Rule]", 
      RowBox[{"-", "72.82963618316543`"}]}], 
     RowBox[{
      SubscriptBox["Ea", "3"], "\[Rule]", 
      RowBox[{"-", "70.68038336139313`"}]}]},
    {
     RowBox[{
      SubscriptBox["Ga", "1"], "\[Rule]", "12.321629432637563`"}], 
     RowBox[{
      SubscriptBox["Ga", "2"], "\[Rule]", "11.53828712519878`"}], 
     RowBox[{
      SubscriptBox["Ga", "3"], "\[Rule]", "15.742146609636052`"}]},
    {
     RowBox[{
      SubscriptBox["Va", "1"], "\[Rule]", 
      RowBox[{"-", "50.47136256604923`"}]}], 
     RowBox[{
      SubscriptBox["Va", "2"], "\[Rule]", 
      RowBox[{"-", "54.88968934763597`"}]}], 
     RowBox[{
      SubscriptBox["Va", "3"], "\[Rule]", 
      RowBox[{"-", "53.19298582068389`"}]}]},
    {
     RowBox[{
      SubscriptBox["\[CapitalDelta]a", "1"], "\[Rule]", 
      "5.330019771198457`"}], 
     RowBox[{
      SubscriptBox["\[CapitalDelta]a", "2"], "\[Rule]", 
      "5.697413936069899`"}], 
     RowBox[{
      SubscriptBox["\[CapitalDelta]a", "3"], "\[Rule]", 
      "4.973319213087262`"}]},
    {
     RowBox[{
      SubscriptBox["\[Tau]a", "1"], "\[Rule]", "179.8418389370945`"}], 
     RowBox[{
      SubscriptBox["\[Tau]a", "2"], "\[Rule]", "182.6082445496038`"}], 
     RowBox[{
      SubscriptBox["\[Tau]a", "3"], "\[Rule]", "205.53752800446898`"}]},
    {
     RowBox[{
      SubscriptBox["\[Delta]ga", "1"], "\[Rule]", "1.2981942195294642`"}], 
     RowBox[{
      SubscriptBox["\[Delta]ga", "2"], "\[Rule]", "1.2962774631592076`"}], 
     RowBox[{
      SubscriptBox["\[Delta]ga", "3"], "\[Rule]", "1.1468537818425584`"}]},
    {
     RowBox[{
      SubscriptBox["Vreset", "1"], "\[Rule]", 
      RowBox[{"-", "55.49862403724505`"}]}], 
     RowBox[{
      SubscriptBox["Vreset", "2"], "\[Rule]", 
      RowBox[{"-", "56.621548232615545`"}]}], 
     RowBox[{
      SubscriptBox["Vreset", "3"], "\[Rule]", 
      RowBox[{"-", "56.81005107616651`"}]}]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{
        RGBColor[0.99, 1, 0.89, 0.78]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{"Columns" -> {{
        Directive[15]}}, "Rows" -> {{
        Directive[15]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8199713652212763`*^9, 3.819971783380953*^9, 3.819972954750885*^9, 
   3.8199732084560833`*^9, 3.819973396360734*^9, 3.819982286729994*^9, 
   3.819983449135971*^9, 3.819985069659192*^9, 3.820025376329411*^9, 
   3.820038759732402*^9, 3.820040219108612*^9, 3.820044482034141*^9, 
   3.8200461649635477`*^9, 3.8200462522674103`*^9, 3.820046320128696*^9, 
   3.820046440191166*^9, 3.820046502803216*^9, 3.820157008060916*^9, {
   3.8201605487251797`*^9, 3.820160559934926*^9}, 3.820650579767878*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"79e1ffb1-72d1-46d9-82d9-54301322ac12"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modelling synapses", "Chapter",
 CellChangeTimes->{{3.819958898285194*^9, 
  3.819958913192729*^9}},ExpressionUUID->"8bbcbaa5-5562-4d64-a919-\
28f60d08177a"],

Cell[CellGroupData[{

Cell["Synaptic current equations ", "Section",
 CellChangeTimes->{{3.8199589802478228`*^9, 
  3.819958987170422*^9}},ExpressionUUID->"dadf6088-4f96-4ca6-a1d8-\
2a99efdf9841"],

Cell[TextData[{
 StyleBox["SymbolicSynapticCurrentRules",
  FontFamily->"Source Code Pro",
  FontSize->14,
  FontWeight->"SemiBold"],
 StyleBox[" is a set of symbolic rules to replace ",
  FontSize->14,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "syn"], TraditionalForm]],
  FontSize->14,
  FontWeight->"Regular",ExpressionUUID->
  "f916b197-a368-4107-b773-37aa338df17d"],
 StyleBox[" in the neuron equation. Generated based on the network \
connectivity",
  FontSize->14,
  FontWeight->"Regular"]
}], "SideNote",
 CellChangeTimes->{{3.819903665953527*^9, 3.819903701439891*^9}, {
  3.8199589304075212`*^9, 
  3.8199589329372587`*^9}},ExpressionUUID->"d3fde073-ab9d-45a0-a49b-\
00662f3ae77d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SynapseParameterList", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "Esyn", ",", "gsyn", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Tau]x", 
      ",", "\[Delta]X"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SymbolicSynapticCurrentRules", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["Isyn", "i"], "\[Rule]", " ", 
       RowBox[{
        RowBox[{"NetworkAdjacencyMatrix", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "i"}], "]"}], "]"}], ".", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["gsyn", 
            RowBox[{"j", ",", "i"}]], "*", 
           RowBox[{
            SubscriptBox["S", 
             RowBox[{"j", ",", "i"}]], "[", "t", "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["Esyn", 
              RowBox[{"j", ",", "i"}]], "-", 
             RowBox[{
              SubscriptBox["V", "i"], "[", "t", "]"}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Total", "@", 
             RowBox[{"NeuronTypes", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], 
           "}"}]}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Total", "@", 
         RowBox[{"NeuronTypes", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"SymbolicSynapticCurrentRules", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.99, 0.96, 1], Opacity[0.81], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.66, 0.64, 0.6666666666666666, 0.81],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None,
        ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwiAOxmAIDiP0fyIQS
4v+BACgJoZhAFOf/P9/+c/0/c+w8E5IoAzNI+P+qpWv/b9+0i4ENRHL9X7dy
AyNIjBFTJVAeRANVwoxj/L9jy65RlXCVQGFQAIJoBgFiFLGDSHD0jKqknUpm
qEpQUgeKgjADP0QekdIZGAFV5z2A\
\>"]],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0.99`", ",", "0.96`", ",", "1", ",", "0.81`"}], "]"}], 
        NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 0.81; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.99, 0.96, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.99, 0.96, 1, 0.81],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"ItemStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "15", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.819903604465478*^9, 3.8199036321734257`*^9}, {
   3.819953752471677*^9, 3.8199537660648527`*^9}, {3.819954054606031*^9, 
   3.819954059960985*^9}, {3.819954339255574*^9, 3.81995435467768*^9}, {
   3.81995720359132*^9, 3.8199572219493523`*^9}, 3.819957732685628*^9, {
   3.819958637051906*^9, 3.819958725095282*^9}, {3.8199587595348597`*^9, 
   3.819958760128146*^9}, {3.819959452380125*^9, 3.8199594530032*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"7b9a3cfe-2b22-4783-876a-5bc58466aa3e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      SubscriptBox["Isyn", "1"], "\[Rule]", 
      RowBox[{
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"4", ",", "1"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["Esyn", 
           RowBox[{"4", ",", "1"}]], "-", 
          RowBox[{
           SubscriptBox["V", "1"], "[", "t", "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"4", ",", "1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"10", ",", "1"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["Esyn", 
           RowBox[{"10", ",", "1"}]], "-", 
          RowBox[{
           SubscriptBox["V", "1"], "[", "t", "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"10", ",", "1"}]], "[", "t", "]"}]}]}]}]},
    {
     RowBox[{
      SubscriptBox["Isyn", "2"], "\[Rule]", 
      RowBox[{
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"3", ",", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["Esyn", 
           RowBox[{"3", ",", "2"}]], "-", 
          RowBox[{
           SubscriptBox["V", "2"], "[", "t", "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"3", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"7", ",", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["Esyn", 
           RowBox[{"7", ",", "2"}]], "-", 
          RowBox[{
           SubscriptBox["V", "2"], "[", "t", "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"7", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"9", ",", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["Esyn", 
           RowBox[{"9", ",", "2"}]], "-", 
          RowBox[{
           SubscriptBox["V", "2"], "[", "t", "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"9", ",", "2"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"10", ",", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["Esyn", 
           RowBox[{"10", ",", "2"}]], "-", 
          RowBox[{
           SubscriptBox["V", "2"], "[", "t", "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"10", ",", "2"}]], "[", "t", "]"}]}]}]}]},
    {
     RowBox[{
      SubscriptBox["Isyn", "3"], "\[Rule]", 
      RowBox[{
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"10", ",", "3"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["Esyn", 
           RowBox[{"10", ",", "3"}]], "-", 
          RowBox[{
           SubscriptBox["V", "3"], "[", "t", "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"10", ",", "3"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"13", ",", "3"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["Esyn", 
           RowBox[{"13", ",", "3"}]], "-", 
          RowBox[{
           SubscriptBox["V", "3"], "[", "t", "]"}]}], ")"}], " ", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"13", ",", "3"}]], "[", "t", "]"}]}]}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[0.99, 0.96, 1, 0.81]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{"Columns" -> {{
        Directive[15]}}, "Rows" -> {{
        Directive[15]}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.819953759229897*^9, 3.819953766394348*^9}, {
   3.8199543315297213`*^9, 3.819954355429216*^9}, 3.819957699710259*^9, {
   3.819958651035862*^9, 3.819958726623413*^9}, 3.819958760477243*^9, 
   3.819959330699057*^9, {3.819959443018405*^9, 3.819959453293194*^9}, 
   3.819961423585164*^9, 3.819961464879871*^9, 3.819962559367741*^9, 
   3.8199648013755283`*^9, 3.819970649537862*^9, 3.81997093942173*^9, 
   3.819971789856456*^9, 3.8199729565615597`*^9, 3.819973208488612*^9, 
   3.8199733963953323`*^9, 3.819982286743197*^9, 3.819983449163527*^9, 
   3.819985069705784*^9, 3.82002537637444*^9, 3.820038759766654*^9, 
   3.820040219151346*^9, 3.820044482072419*^9, 3.8200461673795147`*^9, 
   3.820046252283429*^9, 3.82004632016221*^9, 3.8200464402301083`*^9, 
   3.820046502839651*^9, 3.820157008092434*^9, {3.820160548774547*^9, 
   3.820160559971199*^9}, 3.8206505798078814`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"d49d44fd-4326-4034-82f7-4124fd27082d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parameters for each individual synapse", "Section",
 CellChangeTimes->{{3.819958994464953*^9, 
  3.819959016111157*^9}},ExpressionUUID->"c6e6870c-55c6-4698-b6a2-\
ff478683f613"],

Cell[TextData[{
 StyleBox["SynapticParameterValues",
  FontFamily->"Source Code Pro",
  FontSize->14,
  FontWeight->"SemiBold"],
 StyleBox[" - a ",
  FontSize->14,
  FontWeight->"Regular"],
 StyleBox["NxN",
  FontFamily->"Source Code Pro",
  FontSize->14,
  FontWeight->"SemiBold"],
 StyleBox[" matrix of associations for parameters of each individual synapse.\
\nParameters are based on the distributions described in the global variable ",
  FontSize->14,
  FontWeight->"Regular"],
 StyleBox["SynapticParameterDistribution",
  FontFamily->"Source Code Pro",
  FontSize->14,
  FontWeight->"SemiBold"]
}], "SideNote",
 CellChangeTimes->{{3.819958174357149*^9, 3.8199581952658367`*^9}, {
  3.819958276647736*^9, 3.819958350677636*^9}, {3.8199583955427723`*^9, 
  3.819958430800605*^9}},ExpressionUUID->"eb49201a-7680-4567-8f3e-\
edacd1b393ce"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SynapticParameterValues", "=", "\[IndentingNewLine]", 
    RowBox[{"Map", "[", 
     RowBox[{"Thread", ",", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{"Thread", ",", "\[IndentingNewLine]", 
        RowBox[{"Thread", "[", 
         RowBox[{"Rule", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               SubscriptBox["parameter", 
                RowBox[{"j", ",", "i"}]], ",", 
               RowBox[{"{", 
                RowBox[{"parameter", ",", "SynapseParameterList"}], "}"}]}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Total", "@", 
                RowBox[{"NeuronTypes", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Total", "@", 
                RowBox[{"NeuronTypes", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], 
              "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"ArrayFlatten", "@", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Table", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"RandomVariate", "[", 
                   RowBox[{
                    RowBox[{"SynapticParameterDistribution", "[", 
                    RowBox[{"[", 
                    RowBox[{"col", ",", "row"}], "]"}], "]"}], "[", 
                    RowBox[{"ToString", "@", "parameter"}], "]"}], "]"}], ",",
                   "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"parameter", ",", "SynapseParameterList"}], 
                   "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", 
                  RowBox[{"NeuronTypes", "[", 
                   RowBox[{"[", 
                    RowBox[{"col", ",", "\"\<Number\>\""}], "]"}], "]"}]}], 
                 "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"NeuronTypes", "[", 
                   RowBox[{"[", 
                    RowBox[{"row", ",", "\"\<Number\>\""}], "]"}], "]"}]}], 
                 "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"col", ",", "1", ",", 
                RowBox[{"Length", "@", "NeuronTypes"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"row", ",", "1", ",", 
                RowBox[{"Length", "@", "NeuronTypes"}]}], "}"}]}], 
             "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
         "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"SynapticParameterValues", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"1", ";;", "4"}], ",", 
       RowBox[{"1", ";;", "4"}]}], "]"}], "]"}], ",", 
    RowBox[{"Frame", "\[Rule]", "All"}], ",", 
    RowBox[{"Background", "\[Rule]", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1., 0.9, 0.93], Opacity[0.74], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666667, 0.6000000000000001, 0.6200000000000001, 0.74],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1.`", ",", "0.9`", ",", "0.93`", ",", "0.74`"}], "]"}], 
         NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 0.74; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1., 0.9, 0.93]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1., 0.9, 0.93, 0.74],
      Editable->False,
      Selectable->False]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8199542383271217`*^9, 3.819954263480487*^9}, {
   3.819958381004096*^9, 3.819958383977195*^9}, {3.819959137316327*^9, 
   3.8199591379657717`*^9}, {3.819961550319706*^9, 3.819961570162999*^9}, {
   3.81996484942822*^9, 3.8199648510316887`*^9}, 3.819971546799765*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"c82f1e38-9746-43ac-8e3d-5238f85189c4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Esyn", 
         RowBox[{"1", ",", "1"}]], "\[Rule]", "24.725773699654045`"}], ",", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"1", ",", "1"}]], "\[Rule]", "1.6257547601960944`"}], ",", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"1", ",", "1"}]], "\[Rule]", "9.782768189123217`"}], ",", 
       RowBox[{
        SubscriptBox["\[Beta]", 
         RowBox[{"1", ",", "1"}]], "\[Rule]", "2.920673016066535`"}], ",", 
       RowBox[{
        SubscriptBox["\[Tau]x", 
         RowBox[{"1", ",", "1"}]], "\[Rule]", "8.10440345213566`"}], ",", 
       RowBox[{
        SubscriptBox["\[Delta]X", 
         RowBox[{"1", ",", "1"}]], "\[Rule]", "0.9832664342795296`"}]}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Esyn", 
         RowBox[{"1", ",", "2"}]], "\[Rule]", "26.81530703936665`"}], ",", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"1", ",", "2"}]], "\[Rule]", "1.8663833812767718`"}], ",", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"1", ",", "2"}]], "\[Rule]", "8.587937589608112`"}], ",", 
       RowBox[{
        SubscriptBox["\[Beta]", 
         RowBox[{"1", ",", "2"}]], "\[Rule]", "3.114820894268007`"}], ",", 
       RowBox[{
        SubscriptBox["\[Tau]x", 
         RowBox[{"1", ",", "2"}]], "\[Rule]", "11.449555534584851`"}], ",", 
       RowBox[{
        SubscriptBox["\[Delta]X", 
         RowBox[{"1", ",", "2"}]], "\[Rule]", "0.917440933962688`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Esyn", 
         RowBox[{"1", ",", "3"}]], "\[Rule]", "31.089122433576676`"}], ",", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"1", ",", "3"}]], "\[Rule]", "1.2392762937810269`"}], ",", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"1", ",", "3"}]], "\[Rule]", "10.127682156060551`"}], ",", 
       RowBox[{
        SubscriptBox["\[Beta]", 
         RowBox[{"1", ",", "3"}]], "\[Rule]", "2.8697269971393453`"}], ",", 
       RowBox[{
        SubscriptBox["\[Tau]x", 
         RowBox[{"1", ",", "3"}]], "\[Rule]", "10.907095124865792`"}], ",", 
       RowBox[{
        SubscriptBox["\[Delta]X", 
         RowBox[{"1", ",", "3"}]], "\[Rule]", "0.8487800727989983`"}]}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Esyn", 
         RowBox[{"1", ",", "4"}]], "\[Rule]", "40.052217491980784`"}], ",", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"1", ",", "4"}]], "\[Rule]", "1.985956177804624`"}], ",", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"1", ",", "4"}]], "\[Rule]", "10.885103410977864`"}], ",", 
       RowBox[{
        SubscriptBox["\[Beta]", 
         RowBox[{"1", ",", "4"}]], "\[Rule]", "3.2633487435311563`"}], ",", 
       RowBox[{
        SubscriptBox["\[Tau]x", 
         RowBox[{"1", ",", "4"}]], "\[Rule]", "8.205311780774334`"}], ",", 
       RowBox[{
        SubscriptBox["\[Delta]X", 
         RowBox[{"1", ",", "4"}]], "\[Rule]", "0.9936113821846625`"}]}], 
      "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Esyn", 
         RowBox[{"2", ",", "1"}]], "\[Rule]", "21.301882293549006`"}], ",", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"2", ",", "1"}]], "\[Rule]", "1.7344787730545073`"}], ",", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"2", ",", "1"}]], "\[Rule]", "8.868876166687278`"}], ",", 
       RowBox[{
        SubscriptBox["\[Beta]", 
         RowBox[{"2", ",", "1"}]], "\[Rule]", "3.1208907375230757`"}], ",", 
       RowBox[{
        SubscriptBox["\[Tau]x", 
         RowBox[{"2", ",", "1"}]], "\[Rule]", "12.569395738798645`"}], ",", 
       RowBox[{
        SubscriptBox["\[Delta]X", 
         RowBox[{"2", ",", "1"}]], "\[Rule]", "0.9023613052978783`"}]}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Esyn", 
         RowBox[{"2", ",", "2"}]], "\[Rule]", "22.13790443613494`"}], ",", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"2", ",", "2"}]], "\[Rule]", "2.429375820456144`"}], ",", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"2", ",", "2"}]], "\[Rule]", "9.337832870715534`"}], ",", 
       RowBox[{
        SubscriptBox["\[Beta]", 
         RowBox[{"2", ",", "2"}]], "\[Rule]", "3.149720290656163`"}], ",", 
       RowBox[{
        SubscriptBox["\[Tau]x", 
         RowBox[{"2", ",", "2"}]], "\[Rule]", "11.377743623954093`"}], ",", 
       RowBox[{
        SubscriptBox["\[Delta]X", 
         RowBox[{"2", ",", "2"}]], "\[Rule]", "0.8565615242404712`"}]}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Esyn", 
         RowBox[{"2", ",", "3"}]], "\[Rule]", "25.447477841604798`"}], ",", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"2", ",", "3"}]], "\[Rule]", "2.192568709572456`"}], ",", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"2", ",", "3"}]], "\[Rule]", "10.306531110391814`"}], ",", 
       RowBox[{
        SubscriptBox["\[Beta]", 
         RowBox[{"2", ",", "3"}]], "\[Rule]", "2.306147391225272`"}], ",", 
       RowBox[{
        SubscriptBox["\[Tau]x", 
         RowBox[{"2", ",", "3"}]], "\[Rule]", "8.84062593785431`"}], ",", 
       RowBox[{
        SubscriptBox["\[Delta]X", 
         RowBox[{"2", ",", "3"}]], "\[Rule]", "0.8128593620658284`"}]}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Esyn", 
         RowBox[{"2", ",", "4"}]], "\[Rule]", "33.88690741012259`"}], ",", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"2", ",", "4"}]], "\[Rule]", "1.8544931166175695`"}], ",", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"2", ",", "4"}]], "\[Rule]", "9.875811561684724`"}], ",", 
       RowBox[{
        SubscriptBox["\[Beta]", 
         RowBox[{"2", ",", "4"}]], "\[Rule]", "2.2996994607946473`"}], ",", 
       RowBox[{
        SubscriptBox["\[Tau]x", 
         RowBox[{"2", ",", "4"}]], "\[Rule]", "14.275396233561299`"}], ",", 
       RowBox[{
        SubscriptBox["\[Delta]X", 
         RowBox[{"2", ",", "4"}]], "\[Rule]", "0.9406808207196345`"}]}], 
      "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Esyn", 
         RowBox[{"3", ",", "1"}]], "\[Rule]", "27.967374828526953`"}], ",", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"3", ",", "1"}]], "\[Rule]", "1.9176503826193307`"}], ",", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"3", ",", "1"}]], "\[Rule]", "11.394838175214334`"}], ",", 
       RowBox[{
        SubscriptBox["\[Beta]", 
         RowBox[{"3", ",", "1"}]], "\[Rule]", "2.9705857802579554`"}], ",", 
       RowBox[{
        SubscriptBox["\[Tau]x", 
         RowBox[{"3", ",", "1"}]], "\[Rule]", "9.990086142014398`"}], ",", 
       RowBox[{
        SubscriptBox["\[Delta]X", 
         RowBox[{"3", ",", "1"}]], "\[Rule]", "1.1184608152129851`"}]}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Esyn", 
         RowBox[{"3", ",", "2"}]], "\[Rule]", "28.55565229051839`"}], ",", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"3", ",", "2"}]], "\[Rule]", "2.006310739665193`"}], ",", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"3", ",", "2"}]], "\[Rule]", "8.46489138373874`"}], ",", 
       RowBox[{
        SubscriptBox["\[Beta]", 
         RowBox[{"3", ",", "2"}]], "\[Rule]", "2.9907840333042746`"}], ",", 
       RowBox[{
        SubscriptBox["\[Tau]x", 
         RowBox[{"3", ",", "2"}]], "\[Rule]", "12.478979139397287`"}], ",", 
       RowBox[{
        SubscriptBox["\[Delta]X", 
         RowBox[{"3", ",", "2"}]], "\[Rule]", "1.1570692977866457`"}]}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Esyn", 
         RowBox[{"3", ",", "3"}]], "\[Rule]", "36.59384063014872`"}], ",", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"3", ",", "3"}]], "\[Rule]", "1.9904350683805025`"}], ",", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"3", ",", "3"}]], "\[Rule]", "10.750671232000023`"}], ",", 
       RowBox[{
        SubscriptBox["\[Beta]", 
         RowBox[{"3", ",", "3"}]], "\[Rule]", "3.4241489829178886`"}], ",", 
       RowBox[{
        SubscriptBox["\[Tau]x", 
         RowBox[{"3", ",", "3"}]], "\[Rule]", "8.768723838964823`"}], ",", 
       RowBox[{
        SubscriptBox["\[Delta]X", 
         RowBox[{"3", ",", "3"}]], "\[Rule]", "1.0250383090101847`"}]}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Esyn", 
         RowBox[{"3", ",", "4"}]], "\[Rule]", "28.696828630793178`"}], ",", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"3", ",", "4"}]], "\[Rule]", "2.2087657097833913`"}], ",", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"3", ",", "4"}]], "\[Rule]", "8.328326994105712`"}], ",", 
       RowBox[{
        SubscriptBox["\[Beta]", 
         RowBox[{"3", ",", "4"}]], "\[Rule]", "2.9909783750350196`"}], ",", 
       RowBox[{
        SubscriptBox["\[Tau]x", 
         RowBox[{"3", ",", "4"}]], "\[Rule]", "8.357688103613532`"}], ",", 
       RowBox[{
        SubscriptBox["\[Delta]X", 
         RowBox[{"3", ",", "4"}]], "\[Rule]", "1.0387020344422315`"}]}], 
      "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Esyn", 
         RowBox[{"4", ",", "1"}]], "\[Rule]", "29.370607559398753`"}], ",", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"4", ",", "1"}]], "\[Rule]", "2.504298822742248`"}], ",", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"4", ",", "1"}]], "\[Rule]", "8.148990392050555`"}], ",", 
       RowBox[{
        SubscriptBox["\[Beta]", 
         RowBox[{"4", ",", "1"}]], "\[Rule]", "4.56151713410561`"}], ",", 
       RowBox[{
        SubscriptBox["\[Tau]x", 
         RowBox[{"4", ",", "1"}]], "\[Rule]", "8.821596584607427`"}], ",", 
       RowBox[{
        SubscriptBox["\[Delta]X", 
         RowBox[{"4", ",", "1"}]], "\[Rule]", "1.144898357798598`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Esyn", 
         RowBox[{"4", ",", "2"}]], "\[Rule]", "29.488541054443967`"}], ",", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"4", ",", "2"}]], "\[Rule]", "2.1428110074606623`"}], ",", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"4", ",", "2"}]], "\[Rule]", "11.12992592023441`"}], ",", 
       RowBox[{
        SubscriptBox["\[Beta]", 
         RowBox[{"4", ",", "2"}]], "\[Rule]", "3.3522741702112997`"}], ",", 
       RowBox[{
        SubscriptBox["\[Tau]x", 
         RowBox[{"4", ",", "2"}]], "\[Rule]", "10.130605464372865`"}], ",", 
       RowBox[{
        SubscriptBox["\[Delta]X", 
         RowBox[{"4", ",", "2"}]], "\[Rule]", "0.8586037108796352`"}]}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Esyn", 
         RowBox[{"4", ",", "3"}]], "\[Rule]", "22.95309167575838`"}], ",", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"4", ",", "3"}]], "\[Rule]", "1.8314915736779669`"}], ",", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"4", ",", "3"}]], "\[Rule]", "10.448145287153071`"}], ",", 
       RowBox[{
        SubscriptBox["\[Beta]", 
         RowBox[{"4", ",", "3"}]], "\[Rule]", "2.1133431093756316`"}], ",", 
       RowBox[{
        SubscriptBox["\[Tau]x", 
         RowBox[{"4", ",", "3"}]], "\[Rule]", "7.4334797107557655`"}], ",", 
       RowBox[{
        SubscriptBox["\[Delta]X", 
         RowBox[{"4", ",", "3"}]], "\[Rule]", "1.0434860989467294`"}]}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Esyn", 
         RowBox[{"4", ",", "4"}]], "\[Rule]", "29.476148915307338`"}], ",", 
       RowBox[{
        SubscriptBox["gsyn", 
         RowBox[{"4", ",", "4"}]], "\[Rule]", "3.1569532222382213`"}], ",", 
       RowBox[{
        SubscriptBox["\[Alpha]", 
         RowBox[{"4", ",", "4"}]], "\[Rule]", "10.361014639994934`"}], ",", 
       RowBox[{
        SubscriptBox["\[Beta]", 
         RowBox[{"4", ",", "4"}]], "\[Rule]", "2.4187826346939345`"}], ",", 
       RowBox[{
        SubscriptBox["\[Tau]x", 
         RowBox[{"4", ",", "4"}]], "\[Rule]", "9.069303066971557`"}], ",", 
       RowBox[{
        SubscriptBox["\[Delta]X", 
         RowBox[{"4", ",", "4"}]], "\[Rule]", "1.0228506736732048`"}]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1., 0.9, 0.93, 0.74]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.819959139325231*^9, 3.819959335383593*^9, {3.8199594597046947`*^9, 
   3.819959463070381*^9}, 3.819961468314001*^9, {3.819961532345852*^9, 
   3.8199615706299877`*^9}, 3.819962562680018*^9, {3.81996483343134*^9, 
   3.819964851448509*^9}, 3.819970660733596*^9, {3.819970924008703*^9, 
   3.8199709439920197`*^9}, 3.819971792815379*^9, 3.8199729600167294`*^9, 
   3.819973208514277*^9, 3.819973396409773*^9, 3.819982286770496*^9, 
   3.819983449205152*^9, 3.819985069741705*^9, 3.820025376408835*^9, 
   3.820038759805971*^9, 3.820040219199891*^9, 3.82004448210898*^9, 
   3.820046176244561*^9, 3.8200462523134193`*^9, 3.820046320190287*^9, 
   3.820046440261445*^9, 3.820046502872409*^9, 3.8201570081205378`*^9, {
   3.820160548809495*^9, 3.8201605599970217`*^9}, 3.820650579845688*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"d07a16d3-b248-4ffa-8da4-4f85c93c1bf6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generating the system of Differential Equations", "Chapter",
 CellChangeTimes->{{3.819962289088431*^9, 
  3.819962311249716*^9}},ExpressionUUID->"874f65b6-6598-4e90-a9aa-\
0821fe0d089f"],

Cell[TextData[{
 StyleBox["Generating necessary equations for ",
  FontSize->14,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", 
    RowBox[{"i", ",", "j"}]], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->14,ExpressionUUID->"9f45ec38-d58f-47cd-8ebd-72d73c195dc9"],
 StyleBox[" and ",
  FontSize->14,
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", 
    RowBox[{"i", ",", "j"}]], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->14,ExpressionUUID->"89ff8461-55b2-42cb-a734-64ea4d9b5f29"],
 StyleBox[" based on adjacency matrix",
  FontSize->14,
  FontWeight->"Regular"]
}], "SideNote",
 CellChangeTimes->{{3.820031588292698*^9, 
  3.820031623381365*^9}},ExpressionUUID->"63095d5f-0698-4dac-86f8-\
6ddb2d44c1f3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"EquationsForS", "=", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Pick", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["S", 
             RowBox[{"i", ",", "j"}]], "'"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Alpha]", 
             RowBox[{"i", ",", "j"}]], "*", 
            RowBox[{
             SubscriptBox["X", 
              RowBox[{"i", ",", "j"}]], "[", "t", "]"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               SubscriptBox["S", 
                RowBox[{"i", ",", "j"}]], "[", "t", "]"}]}], ")"}]}], "-", 
           RowBox[{
            SubscriptBox["\[Beta]", 
             RowBox[{"i", ",", "j"}]], "*", 
            RowBox[{
             SubscriptBox["S", 
              RowBox[{"i", ",", "j"}]], "[", "t", "]"}]}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Total", "@", 
            RowBox[{"NeuronTypes", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Total", "@", 
            RowBox[{"NeuronTypes", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], 
          "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       "NetworkAdjacencyMatrix", ",", "1"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EquationsForX", "=", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Pick", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["X", 
             RowBox[{"i", ",", "j"}]], "'"}], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{"-", 
            RowBox[{
             SubscriptBox["X", 
              RowBox[{"i", ",", "j"}]], "[", "t", "]"}]}], 
           SubscriptBox["\[Tau]x", 
            RowBox[{"i", ",", "j"}]]]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Total", "@", 
            RowBox[{"NeuronTypes", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Total", "@", 
            RowBox[{"NeuronTypes", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], 
          "}"}]}], "]"}], ",", "NetworkAdjacencyMatrix", ",", "1"}], 
      "]"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InitialConditionsX", " ", "=", " ", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Pick", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["X", 
            RowBox[{"i", ",", "j"}]], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Total", "@", 
            RowBox[{"NeuronTypes", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Total", "@", 
            RowBox[{"NeuronTypes", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], 
          "}"}]}], "]"}], ",", "NetworkAdjacencyMatrix", ",", "1"}], 
      "]"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitialConditionsS", "=", " ", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Pick", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["S", 
           RowBox[{"i", ",", "j"}]], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Total", "@", 
           RowBox[{"NeuronTypes", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Total", "@", 
           RowBox[{"NeuronTypes", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], 
         "}"}]}], "]"}], ",", "NetworkAdjacencyMatrix", ",", "1"}], "]"}]}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.819962312456414*^9, 3.819962323299914*^9}, {
   3.8199623801453257`*^9, 3.819962456509398*^9}, {3.8199624933322983`*^9, 
   3.8199625350338497`*^9}, {3.81996257307999*^9, 3.8199625969640427`*^9}, {
   3.819962681807352*^9, 3.819962762425556*^9}, {3.819963052758691*^9, 
   3.8199631757087517`*^9}, {3.8199633747373123`*^9, 3.819963389282201*^9}, {
   3.819964900046282*^9, 3.8199649022154207`*^9}, {3.819964934729979*^9, 
   3.819964938399727*^9}, {3.819967032953787*^9, 3.819967061610598*^9}, {
   3.819970672009413*^9, 3.819970685421232*^9}, {3.819970803040419*^9, 
   3.81997080396841*^9}, {3.8199715128443937`*^9, 3.819971514175063*^9}, 
   3.819971639018302*^9, {3.8199719747657337`*^9, 3.819972053857739*^9}, {
   3.819972299135749*^9, 3.819972303581572*^9}, {3.819973453855431*^9, 
   3.819973503634912*^9}, {3.819974550713455*^9, 3.819974613617455*^9}, {
   3.819975215963277*^9, 3.819975217057062*^9}, {3.819975733639001*^9, 
   3.8199757345830193`*^9}, {3.819975786450938*^9, 3.81997578936576*^9}, {
   3.819976668463565*^9, 3.819976677820881*^9}, {3.819977102643002*^9, 
   3.819977161945496*^9}, {3.8199773189556*^9, 3.819977387733844*^9}, {
   3.819979016304385*^9, 3.819979131140251*^9}, {3.8199792321036367`*^9, 
   3.8199792589905853`*^9}, {3.8199795771108418`*^9, 
   3.8199796221457367`*^9}, {3.8199799812628613`*^9, 3.819980059781019*^9}, {
   3.819980111372916*^9, 3.819980113467189*^9}, {3.819980201058358*^9, 
   3.8199802397913513`*^9}, {3.8199806440847483`*^9, 3.819980682476667*^9}, {
   3.8199807235769033`*^9, 3.819980749397148*^9}, {3.8199811066664753`*^9, 
   3.8199811319329443`*^9}, {3.819981181753916*^9, 3.819981194110314*^9}, {
   3.819982038335743*^9, 3.819982038749523*^9}, {3.8199850603546267`*^9, 
   3.819985060626409*^9}, {3.81998520046873*^9, 3.819985200653974*^9}, {
   3.8200256947104883`*^9, 3.820025696595015*^9}, 3.8200316764181433`*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"acbefce8-0ada-4098-bd1d-9b44168ab110"],

Cell[TextData[StyleBox["Generating equations for synaptic actions of each \
neuron (also based on the connectivity)",
 FontSize->16,
 FontWeight->"Regular"]], "SideNote",
 CellChangeTimes->{{3.820031680734334*^9, 
  3.820031705451654*^9}},ExpressionUUID->"60c94d82-6082-4162-b765-\
8cf5f0e4b7e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EventRules", " ", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"num", "=", "num"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         SubscriptBox["event", "num"], "\[Rule]", " ", 
         RowBox[{"action", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["V", "num"], "[", "t", "]"}], ">", 
            RowBox[{"-", "20"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Hold", "@", 
               RowBox[{"Sow", "[", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "num"}], "}"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{
                SubscriptBox["V", "num"], "[", "t", "]"}], "\[Rule]", " ", 
               SubscriptBox["Vreset", "num"]}], ",", 
              RowBox[{
               RowBox[{
                SubscriptBox["gA", "num"], "[", "t", "]"}], "\[Rule]", " ", 
               RowBox[{
                RowBox[{
                 SubscriptBox["gA", "num"], "[", "t", "]"}], " ", "+", 
                SubscriptBox["\[Delta]ga", "num"]}]}]}], "}"}], 
            "\[IndentingNewLine]", "~", "Join", "~", "\[IndentingNewLine]", 
            " ", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["X", 
                 RowBox[{"num", ",", "j"}]], "[", "t", "]"}], "\[Rule]", " ", 
               
               RowBox[{
                RowBox[{
                 SubscriptBox["X", 
                  RowBox[{"num", ",", "j"}]], "[", "t", "]"}], "+", 
                SubscriptBox["\[Delta]X", 
                 RowBox[{"num", ",", "j"}]]}]}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", 
                RowBox[{"Pick", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"Total", "@", 
                    RowBox[{"NeuronTypes", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}], 
                   "]"}], ",", 
                  RowBox[{"NetworkAdjacencyMatrix", "[", 
                   RowBox[{"[", "num", "]"}], "]"}], ",", "1"}], "]"}]}], 
               "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"num", ",", 
        RowBox[{"Total", "@", 
         RowBox[{"NeuronTypes", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.819962312456414*^9, 3.819962323299914*^9}, {
   3.8199623801453257`*^9, 3.819962456509398*^9}, {3.8199624933322983`*^9, 
   3.8199625350338497`*^9}, {3.81996257307999*^9, 3.8199625969640427`*^9}, {
   3.819962681807352*^9, 3.819962762425556*^9}, {3.819963052758691*^9, 
   3.8199631757087517`*^9}, {3.8199633747373123`*^9, 3.819963389282201*^9}, {
   3.819964900046282*^9, 3.8199649022154207`*^9}, {3.819964934729979*^9, 
   3.819964938399727*^9}, {3.819967032953787*^9, 3.819967061610598*^9}, {
   3.819970672009413*^9, 3.819970685421232*^9}, {3.819970803040419*^9, 
   3.81997080396841*^9}, {3.8199715128443937`*^9, 3.819971514175063*^9}, 
   3.819971639018302*^9, {3.8199719747657337`*^9, 3.819972053857739*^9}, {
   3.819972299135749*^9, 3.819972303581572*^9}, {3.819973453855431*^9, 
   3.819973503634912*^9}, {3.819974550713455*^9, 3.819974613617455*^9}, {
   3.819975215963277*^9, 3.819975217057062*^9}, {3.819975733639001*^9, 
   3.8199757345830193`*^9}, {3.819975786450938*^9, 3.81997578936576*^9}, {
   3.819976668463565*^9, 3.819976677820881*^9}, {3.819977102643002*^9, 
   3.819977161945496*^9}, {3.8199773189556*^9, 3.819977387733844*^9}, {
   3.819979016304385*^9, 3.819979131140251*^9}, {3.8199792321036367`*^9, 
   3.8199792589905853`*^9}, {3.8199795771108418`*^9, 
   3.8199796221457367`*^9}, {3.8199799812628613`*^9, 3.819980059781019*^9}, {
   3.819980111372916*^9, 3.819980113467189*^9}, {3.819980201058358*^9, 
   3.8199802397913513`*^9}, {3.8199806440847483`*^9, 3.819980682476667*^9}, {
   3.8199807235769033`*^9, 3.819980749397148*^9}, {3.8199811066664753`*^9, 
   3.8199811319329443`*^9}, {3.819981181753916*^9, 3.819981194110314*^9}, {
   3.819982038335743*^9, 3.819982038749523*^9}, {3.8199850603546267`*^9, 
   3.819985060626409*^9}, {3.81998520046873*^9, 3.819985200653974*^9}, {
   3.8200256947104883`*^9, 3.820025696595015*^9}, 3.8200316764181433`*^9, 
   3.820031728229415*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"6c36a366-fe92-4f7e-93b8-eea384975fa5"],

Cell[TextData[StyleBox["Equations for applied currents",
 FontSize->16,
 FontWeight->"Regular"]], "SideNote",
 CellChangeTimes->{{3.8200317335127974`*^9, 
  3.820031745640408*^9}},ExpressionUUID->"f165e451-83f7-4544-b616-\
fb6c7f6a7e6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AppliedCurrents", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["Iapp", "i"], "\[Rule]", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"20", ",", "250"}], "}"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Total", "@", 
         RowBox[{"NeuronTypes", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.819962312456414*^9, 3.819962323299914*^9}, {
   3.8199623801453257`*^9, 3.819962456509398*^9}, {3.8199624933322983`*^9, 
   3.8199625350338497`*^9}, {3.81996257307999*^9, 3.8199625969640427`*^9}, {
   3.819962681807352*^9, 3.819962762425556*^9}, {3.819963052758691*^9, 
   3.8199631757087517`*^9}, {3.8199633747373123`*^9, 3.819963389282201*^9}, {
   3.819964900046282*^9, 3.8199649022154207`*^9}, {3.819964934729979*^9, 
   3.819964938399727*^9}, {3.819967032953787*^9, 3.819967061610598*^9}, {
   3.819970672009413*^9, 3.819970685421232*^9}, {3.819970803040419*^9, 
   3.81997080396841*^9}, {3.8199715128443937`*^9, 3.819971514175063*^9}, 
   3.819971639018302*^9, {3.8199719747657337`*^9, 3.819972053857739*^9}, {
   3.819972299135749*^9, 3.819972303581572*^9}, {3.819973453855431*^9, 
   3.819973503634912*^9}, {3.819974550713455*^9, 3.819974613617455*^9}, {
   3.819975215963277*^9, 3.819975217057062*^9}, {3.819975733639001*^9, 
   3.8199757345830193`*^9}, {3.819975786450938*^9, 3.81997578936576*^9}, {
   3.819976668463565*^9, 3.819976677820881*^9}, {3.819977102643002*^9, 
   3.819977161945496*^9}, {3.8199773189556*^9, 3.819977387733844*^9}, {
   3.819979016304385*^9, 3.819979131140251*^9}, {3.8199792321036367`*^9, 
   3.8199792589905853`*^9}, {3.8199795771108418`*^9, 
   3.8199796221457367`*^9}, {3.8199799812628613`*^9, 3.819980059781019*^9}, {
   3.819980111372916*^9, 3.819980113467189*^9}, {3.819980201058358*^9, 
   3.8199802397913513`*^9}, {3.8199806440847483`*^9, 3.819980682476667*^9}, {
   3.8199807235769033`*^9, 3.819980749397148*^9}, {3.8199811066664753`*^9, 
   3.8199811319329443`*^9}, {3.819981181753916*^9, 3.819981194110314*^9}, {
   3.819982038335743*^9, 3.819982038749523*^9}, {3.8199850603546267`*^9, 
   3.819985060626409*^9}, {3.81998520046873*^9, 3.819985200653974*^9}, {
   3.8200256947104883`*^9, 3.820025696595015*^9}, 3.8200316764181433`*^9, 
   3.820031728229415*^9, {3.820046433449444*^9, 3.820046435631935*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"8aa08ebb-a10e-4c84-9a35-0632760af99f"],

Cell[TextData[StyleBox["Constructing and solving the main DE system",
 FontSize->15,
 FontWeight->"Regular"]], "SideNote",
 CellChangeTimes->{{3.820038835003769*^9, 
  3.820038862822137*^9}},ExpressionUUID->"da57ad96-83ed-41e3-8ba7-\
4008c53802a7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MainDESystem", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "@", 
             RowBox[{"Table", "[", 
              RowBox[{"GenericNeuronEquation", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Total", "@", 
                  RowBox[{"NeuronTypes", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], 
                "}"}]}], "]"}]}], "/.", 
            RowBox[{"Dispatch", "@", "EventRules"}]}], "/.", 
           RowBox[{"Dispatch", "@", "SymbolicSynapticCurrentRules"}]}], ",", 
          "\[IndentingNewLine]", "EquationsForS", ",", "EquationsForX", ",", 
          "InitialConditionsS", ",", "InitialConditionsX"}], "]"}], "/.", 
        RowBox[{"Dispatch", "[", "AppliedCurrents", "]"}]}], "/.", 
       RowBox[{"Dispatch", "[", 
        RowBox[{"Flatten", "@", "SynapticParameterValues"}], "]"}]}], "/.", 
      RowBox[{"Dispatch", "[", 
       RowBox[{"Flatten", "@", "NeuronParameterValues"}], "]"}]}], "/.", 
     RowBox[{"action", "\[Rule]", "WhenEvent"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VariablesToSolveFor", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     SubscriptBox["V", "i"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Total", "@", 
        RowBox[{"NeuronTypes", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reportTime", "=", 
   RowBox[{"AbsoluteTiming", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"voltages", ",", "spikes"}], "}"}], " ", "=", 
      RowBox[{"Reap", "@", " ", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"Simplify", "@", "MainDESystem"}], ",", 
         "VariablesToSolveFor", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "SimulationTime"}], "}"}]}], "]"}]}]}], 
     ";"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spikes", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"spikes", ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8199706869432983`*^9, 3.819970775660123*^9}, {
   3.819971019513091*^9, 3.819971156680161*^9}, {3.819971198608876*^9, 
   3.819971229754797*^9}, {3.819971274766446*^9, 3.819971328968512*^9}, {
   3.819971369081956*^9, 3.819971420483322*^9}, {3.819971517706809*^9, 
   3.8199715903698177`*^9}, {3.819971714734943*^9, 3.819971716292655*^9}, {
   3.8199718099179773`*^9, 3.8199719144285*^9}, {3.8199720649098263`*^9, 
   3.8199720900744953`*^9}, {3.819972163930766*^9, 3.819972164229024*^9}, 
   3.8199722126522903`*^9, {3.819972263495913*^9, 3.8199722691856337`*^9}, {
   3.819972313421712*^9, 3.819972313754426*^9}, {3.819972377770321*^9, 
   3.819972378735112*^9}, {3.8199726625806847`*^9, 3.819972663126771*^9}, {
   3.819972761328891*^9, 3.819972761806816*^9}, {3.8199731715219727`*^9, 
   3.819973171869513*^9}, {3.8199733788193483`*^9, 3.819973409984961*^9}, {
   3.819973608965547*^9, 3.8199736110183153`*^9}, 3.819974626535081*^9, {
   3.819974676768527*^9, 3.819974881147646*^9}, {3.8199752212798433`*^9, 
   3.819975227933448*^9}, {3.819975498300536*^9, 3.819975517438321*^9}, {
   3.819975565422799*^9, 3.819975568651462*^9}, {3.819975751311647*^9, 
   3.819975752602364*^9}, {3.8199758118974333`*^9, 3.819975821631618*^9}, {
   3.8199760455786333`*^9, 3.819976053535524*^9}, {3.8199774302218924`*^9, 
   3.819977445234182*^9}, {3.81997747821052*^9, 3.819977498123045*^9}, {
   3.819980236208076*^9, 3.819980253428052*^9}, {3.819980322081933*^9, 
   3.8199803255198917`*^9}, {3.8199804201301603`*^9, 3.819980432278537*^9}, {
   3.819980700478691*^9, 3.8199807065125227`*^9}, 3.819980913286058*^9, {
   3.8199811380720873`*^9, 3.8199811417091208`*^9}, 3.819982033806552*^9, {
   3.819982328811366*^9, 3.819982356399987*^9}, {3.819982432636079*^9, 
   3.8199824483914433`*^9}, {3.81998333911532*^9, 3.819983340830512*^9}, {
   3.820025841044484*^9, 3.82002584130455*^9}, {3.820038731771851*^9, 
   3.8200387326470213`*^9}, 3.8200392438155622`*^9, 3.820046300665169*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"a1791867-fe12-40ac-b371-88b524a5b4af"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting results", "Chapter",
 CellChangeTimes->{{3.8200388928831244`*^9, 
  3.820038897463538*^9}},ExpressionUUID->"d93a4249-2942-4059-b87f-\
41323c5eb219"],

Cell[TextData[StyleBox["Helper functions for faster time-series generation",
 FontSize->15,
 FontWeight->"Regular"]], "SideNote",
 CellChangeTimes->{{3.8200389058813868`*^9, 3.820038922059875*^9}, {
  3.820038991949357*^9, 
  3.820039005363427*^9}},ExpressionUUID->"61a78d07-edd9-46de-975d-\
253cc8f87eac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bsearchMax", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"list", ",", "_Complex", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"elem", ",", "_Real"}], "}"}]}], "}"}], ",", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"n0", "=", "1"}], ",", 
          RowBox[{"n1", "=", 
           RowBox[{"Length", "[", "list", "]"}]}], ",", 
          RowBox[{"m", "=", "0"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{"n0", "\[LessEqual]", "n1"}], ",", 
           RowBox[{
            RowBox[{"m", "=", 
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n0", "+", "n1"}], ")"}], "/", "2"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"list", "[", 
                RowBox[{"[", "m", "]"}], "]"}], "\[Equal]", "elem"}], ",", 
              RowBox[{
               RowBox[{"While", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"m", "\[GreaterEqual]", "n0"}], "&&", 
                  RowBox[{
                   RowBox[{"list", "[", 
                    RowBox[{"[", "m", "]"}], "]"}], "\[Equal]", "elem"}]}], 
                 ",", 
                 RowBox[{"m", "--"}]}], "]"}], ";", 
               RowBox[{"Return", "[", 
                RowBox[{"m", "+", "1"}], "]"}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"list", "[", 
                RowBox[{"[", "m", "]"}], "]"}], "<", "elem"}], ",", 
              RowBox[{"n0", "=", 
               RowBox[{"m", "+", "1"}]}], ",", 
              RowBox[{"n1", "=", 
               RowBox[{"m", "-", "1"}]}]}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"list", "[", 
             RowBox[{"[", "m", "]"}], "]"}], ">", "elem"}], ",", "m", ",", 
           RowBox[{"m", "+", "1"}]}], "]"}]}]}], "]"}], ",", 
      RowBox[{"RuntimeAttributes", "\[Rule]", 
       RowBox[{"{", "Listable", "}"}]}], ",", 
      RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"multiInsert2", "[", 
      RowBox[{"list_", ",", "val_", ",", "pos_"}], "]"}], "/;", 
     RowBox[{
      RowBox[{"Length", "@", "val"}], "\[Equal]", 
      RowBox[{"Length", "@", "pos"}]}]}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "new", ",", "start", ",", "end", ",", "offset", ",", "n1", ",", "n2"}],
        "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n1", ",", "n2"}], "}"}], "=", 
        RowBox[{"Length", "/@", 
         RowBox[{"{", 
          RowBox[{"list", ",", "val"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"new", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"n1", "+", "n2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"start", "=", 
        RowBox[{"Prepend", "[", 
         RowBox[{"pos", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"end", "=", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"pos", "-", "1"}], ",", "n1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"offset", "=", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "n2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"new", "[", 
             RowBox[{"[", 
              RowBox[{"#", ";;", "#2"}], "]"}], "]"}], "=", 
            RowBox[{"list", "[", 
             RowBox[{"[", 
              RowBox[{"#3", ";;", "#4"}], "]"}], "]"}]}], ";"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"offset", "+", "start"}], ",", 
           RowBox[{"offset", "+", "end"}], ",", "start", ",", "end"}], 
          "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"new", "[", 
         RowBox[{"[", 
          RowBox[{"pos", "+", 
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", 
             RowBox[{"n2", "-", "1"}]}], "]"}]}], "]"}], "]"}], "=", "val"}], 
       ";", "\[IndentingNewLine]", "new"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectSpikesByNumber", "[", "n_", "]"}], ":=", 
   RowBox[{"First", "/@", 
    RowBox[{"Select", "[", 
     RowBox[{"spikes", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Last", "[", "#1", "]"}], "\[Equal]", "n"}], "&"}]}], 
     "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.820038944475664*^9, 3.820038974116046*^9}, 
   3.820039011371904*^9, {3.820039077264739*^9, 3.820039080514523*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"9fcbf68b-3fd6-49fe-aba4-fdc9aeea5278"],

Cell[TextData[StyleBox["A function to plot equal spikes for selected neurons",
 
 FontSize->15,
 FontWeight->"Regular"]], "SideNote",
 CellChangeTimes->{{3.82003901726468*^9, 
  3.820039031355747*^9}},ExpressionUUID->"cbedb397-8018-42c4-b800-\
30810cc0bf48"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotBeautifulSpikes", "[", 
    RowBox[{"neuronIDs_", ",", "T_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "pos", ",", "spikeTimes"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "@@", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"spikeTimes", "=", 
          RowBox[{"SelectSpikesByNumber", "[", "k", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"data", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"t", ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "T", ",", "2"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"pos", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"bsearchMax", "[", 
             RowBox[{"data", ",", "time"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"time", ",", "spikeTimes"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ListLinePlot", "[", 
          RowBox[{
           RowBox[{"multiInsert2", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"t", ",", 
                 RowBox[{
                  RowBox[{"voltages", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "[", "t", "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "T", ",", "2"}], "}"}]}], "]"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"j", ",", "20"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "spikeTimes"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "pos"}], "]"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "90"}], ",", "20"}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"RandomColor", "[", "]"}]}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"{", "k", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", ",", 
        
        RowBox[{"{", 
         RowBox[{"k", ",", "neuronIDs"}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.820038944475664*^9, 3.820038974116046*^9}, 
   3.820039011371904*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"6d52c9b9-7c52-4e54-9e4c-bb48f3c1f967"],

Cell[BoxData[
 RowBox[{
  RowBox[{"spikePlot", "=", 
   RowBox[{"PlotBeautifulSpikes", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"Total", "@", 
       RowBox[{"NeuronTypes", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}], "]"}], ",", 
     "SimulationTime"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.820039093829842*^9, 3.8200391356900806`*^9}, 
   3.820046310023246*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"6d418ce2-1170-4e4e-83e0-45badf897331"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Report generation", "Chapter",
 CellChangeTimes->{{3.820039160770838*^9, 
  3.82003916758009*^9}},ExpressionUUID->"356949dd-dc81-4d71-b81d-\
23dcc800eebd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"GenerateDocument", "[", 
    RowBox[{
     RowBox[{
     "File", "[", 
      "\"\</Users/artem/Documents/Wolfram Mathematica/reportTemplate.nb\>\"", 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Association", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<Graph\>\"", "\[Rule]", " ", "networkGraph"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Spikes\>\"", "\[Rule]", " ", "spikePlot"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<NumberOfDEs\>\"", "\[Rule]", 
        RowBox[{
         RowBox[{"2", "*", " ", 
          RowBox[{"Total", "@", 
           RowBox[{"NeuronTypes", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "\"\<Number\>\""}], "]"}], "]"}]}]}], " ", 
         "+", " ", 
         RowBox[{"2", "*", 
          RowBox[{"Total", "@", 
           RowBox[{"Total", "@", "NetworkAdjacencyMatrix"}]}]}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<time\>\"", "\[Rule]", 
        RowBox[{"First", "@", " ", "reportTime"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], "]"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"networkGraph", "\[IndentingNewLine]", "spikePlot"}]}]], "Input",
 CellChangeTimes->{{3.81998268263344*^9, 3.819982686025674*^9}, {
   3.819982810334231*^9, 3.819982912020282*^9}, {3.819982942065332*^9, 
   3.819982945684614*^9}, {3.81998315327909*^9, 3.8199831559124823`*^9}, {
   3.819983213076241*^9, 3.819983357913292*^9}, 3.820038723609589*^9, {
   3.820039169120997*^9, 3.820039171348481*^9}, {3.8206506227311363`*^9, 
   3.820650631676746*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"58a736e9-3c01-4824-9a0d-dbe462277e06"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Arrowheads[Medium], 
      Directive[
       Opacity[0.7], 
       Hue[0.6, 0.7, 0.5]], 
      ArrowBox[{{0.40575231125096356`, 0.7960496909078711}, {
       1.094270728988272, 0.29384514736062695`}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{0.40575231125096356`, 0.7960496909078711}, {
        1.0811539290408545`, 0.7098104941805233}, {1.5735211685346324`, 
        0.23951373059537562`}}], 0.030727928214327224`], 
      ArrowBox[{{0.40575231125096356`, 0.7960496909078711}, {
       0.2999244521811044, 1.9123470574969528`}}, 0.030727928214327224`], 
      ArrowBox[{{2.0293055883867313`, 0.7928242809067906}, {1.094270728988272,
        0.29384514736062695`}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{2.0293055883867313`, 0.7928242809067906}, {
        1.4412359647396937`, 0.7438458183762089}, {0.9388925115384313, 
        1.0534840380359767`}}], 0.030727928214327224`], 
      ArrowBox[{{2.0293055883867313`, 0.7928242809067906}, {
       1.4767476364864298`, 1.883102226733518}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{2.0293055883867313`, 0.7928242809067906}, {
        2.532332020012373, 1.0139014095045995`}, {3.0683848369291473`, 
        0.8932446020768352}}], 0.030727928214327224`], 
      ArrowBox[{{2.0293055883867313`, 0.7928242809067906}, {2.344686949904422,
        0.17099830516545433`}}, 0.030727928214327224`], 
      ArrowBox[{{2.450635091300803, 1.06318866671744}, {2.0293055883867313`, 
       0.7928242809067906}}, 0.030727928214327224`], 
      ArrowBox[{{2.450635091300803, 1.06318866671744}, {1.5160257604172076`, 
       0.8121084702530543}}, 0.030727928214327224`], 
      ArrowBox[{{2.450635091300803, 1.06318866671744}, {1.4767476364864298`, 
       1.883102226733518}}, 0.030727928214327224`], 
      ArrowBox[{{2.450635091300803, 1.06318866671744}, {3.0683848369291473`, 
       0.8932446020768352}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{2.450635091300803, 1.06318866671744}, {
        2.1475238518496154`, 0.5071179298320121}, {1.5735211685346324`, 
        0.23951373059537562`}}], 0.030727928214327224`], 
      ArrowBox[{{1.5160257604172076`, 0.8121084702530543}, {
       0.40575231125096356`, 0.7960496909078711}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.5160257604172076`, 0.8121084702530543}, {
        1.1877671572598314`, 0.8378920314746799}, {0.9388925115384313, 
        1.0534840380359767`}}], 0.030727928214327224`], 
      ArrowBox[{{1.5160257604172076`, 0.8121084702530543}, {2.344686949904422,
        0.17099830516545433`}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.094270728988272, 0.29384514736062695`}, {
        0.8916660334913417, 0.6481140825248691}, {0.9388925115384313, 
        1.0534840380359767`}}], 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.094270728988272, 0.29384514736062695`}, {
        1.3428302475298441`, 0.34548773934484056`}, {1.5735211685346324`, 
        0.23951373059537562`}}], 0.030727928214327224`], 
      ArrowBox[{{1.094270728988272, 0.29384514736062695`}, {0., 0.}}, 
       0.030727928214327224`], 
      ArrowBox[{{1.094270728988272, 0.29384514736062695`}, {2.344686949904422,
        0.17099830516545433`}}, 0.030727928214327224`], 
      ArrowBox[{{1.897238198307463, 1.4131337881388748`}, {
       1.5160257604172076`, 0.8121084702530543}}, 0.030727928214327224`], 
      ArrowBox[{{1.897238198307463, 1.4131337881388748`}, {1.094270728988272, 
       0.29384514736062695`}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.897238198307463, 1.4131337881388748`}, {
        1.6097109562019543`, 1.5789722252668859`}, {1.4767476364864298`, 
        1.883102226733518}}], 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{0.9388925115384313, 1.0534840380359767`}, {
        1.5269621351854867`, 1.1024625005665538`}, {2.0293055883867313`, 
        0.7928242809067906}}], 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{0.9388925115384313, 1.0534840380359767`}, {
        1.2671511146957837`, 1.027700476814366}, {1.5160257604172076`, 
        0.8121084702530543}}], 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{0.9388925115384313, 1.0534840380359767`}, {
        1.1414972070353624`, 0.6992151028717357}, {1.094270728988272, 
        0.29384514736062695`}}], 0.030727928214327224`], 
      ArrowBox[{{0.9388925115384313, 1.0534840380359767`}, {1.897238198307463,
        1.4131337881388748`}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{0.9388925115384313, 1.0534840380359767`}, {
        1.071397039186302, 1.5567384310074657`}, {1.4767476364864298`, 
        1.883102226733518}}], 0.030727928214327224`], 
      ArrowBox[{{0.9388925115384313, 1.0534840380359767`}, {
       1.5735211685346324`, 0.23951373059537562`}}, 0.030727928214327224`], 
      ArrowBox[{{0.9388925115384313, 1.0534840380359767`}, {0., 0.}}, 
       0.030727928214327224`], 
      ArrowBox[{{0.9388925115384313, 1.0534840380359767`}, {
       0.2999244521811044, 1.9123470574969528`}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.4767476364864298`, 1.883102226733518}, {
        1.7642748785919495`, 1.7172637896054934`}, {1.897238198307463, 
        1.4131337881388748`}}], 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.4767476364864298`, 1.883102226733518}, {
        1.3442431088385525`, 1.3798478337620148`}, {0.9388925115384313, 
        1.0534840380359767`}}], 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.4767476364864298`, 1.883102226733518}, {
        0.8835270025117778, 1.7042069583856492`}, {0.2999244521811044, 
        1.9123470574969528`}}], 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{3.0683848369291473`, 0.8932446020768352}, {
        2.565358405303508, 0.6721674734790315}, {2.0293055883867313`, 
        0.7928242809067906}}], 0.030727928214327224`], 
      ArrowBox[{{3.0683848369291473`, 0.8932446020768352}, {1.897238198307463,
        1.4131337881388748`}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.5735211685346324`, 0.23951373059537562`}, {
        0.898119550744737, 0.3257529273227222}, {0.40575231125096356`, 
        0.7960496909078711}}], 0.030727928214327224`], 
      ArrowBox[{{1.5735211685346324`, 0.23951373059537562`}, {
       2.0293055883867313`, 0.7928242809067906}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.5735211685346324`, 0.23951373059537562`}, {
        1.8766324079857937`, 0.7955844674807898}, {2.450635091300803, 
        1.06318866671744}}], 0.030727928214327224`], 
      ArrowBox[{{1.5735211685346324`, 0.23951373059537562`}, {
       1.5160257604172076`, 0.8121084702530543}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{1.5735211685346324`, 0.23951373059537562`}, {
        1.3249616499930543`, 0.18787113861116064`}, {1.094270728988272, 
        0.29384514736062695`}}], 0.030727928214327224`], 
      ArrowBox[{{1.5735211685346324`, 0.23951373059537562`}, {
       2.344686949904422, 0.17099830516545433`}}, 0.030727928214327224`], 
      ArrowBox[
       BezierCurveBox[{{0.2999244521811044, 1.9123470574969528`}, {
        0.8931450861557513, 2.091242325844815}, {1.4767476364864298`, 
        1.883102226733518}}], 0.030727928214327224`], 
      ArrowBox[{{2.344686949904422, 0.17099830516545433`}, {2.450635091300803,
        1.06318866671744}}, 0.030727928214327224`], 
      ArrowBox[{{2.344686949904422, 0.17099830516545433`}, {
       3.0683848369291473`, 0.8932446020768352}}, 0.030727928214327224`]}, {
      Directive[
       Hue[0.6, 0.2, 0.8], 
       EdgeForm[
        Directive[
         GrayLevel[0], 
         Opacity[0.7]]]], {
       StyleBox[
        DiskBox[{0.40575231125096356`, 0.7960496909078711}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["1", TraditionalForm], 
        Offset[{2, 2}, {0.4364802394652908, 0.8267776191221984}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{2.0293055883867313`, 0.7928242809067906}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["2", TraditionalForm], 
        Offset[{2, 2}, {2.0600335166010586`, 0.8235522091211178}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{2.450635091300803, 1.06318866671744}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["3", TraditionalForm], 
        Offset[{2, 2}, {2.4813630195151304`, 1.093916594931767}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{1.5160257604172076`, 0.8121084702530543}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["4", TraditionalForm], 
        Offset[{2, 2}, {1.5467536886315347`, 0.8428363984673816}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{1.094270728988272, 0.29384514736062695`}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["5", TraditionalForm], 
        Offset[{2, 2}, {1.1249986572025992`, 0.3245730755749542}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{1.897238198307463, 1.4131337881388748`}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["6", TraditionalForm], 
        Offset[{2, 2}, {1.9279661265217902`, 1.443861716353202}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{0.9388925115384313, 1.0534840380359767`}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["7", TraditionalForm], 
        Offset[{2, 2}, {0.9696204397527586, 1.0842119662503038`}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{1.4767476364864298`, 1.883102226733518}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["8", TraditionalForm], 
        Offset[{2, 2}, {1.507475564700757, 1.9138301549478451`}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{3.0683848369291473`, 0.8932446020768352}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["9", TraditionalForm], 
        Offset[{2, 2}, {3.0991127651434747`, 0.9239725302911624}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{1.5735211685346324`, 0.23951373059537562`}, 
         0.030727928214327224`], {
         RGBColor[0.8200000000000001, 0.19, 0.5]}, StripOnInput -> False], 
       InsetBox[
        FormBox["10", TraditionalForm], 
        Offset[{2, 2}, {1.6042490967489595`, 0.27024165880970286`}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{0., 0.}, 0.030727928214327224`], {
         RGBColor[0.74, 1, 0.58]}, StripOnInput -> False], 
       InsetBox[
        FormBox["11", TraditionalForm], 
        Offset[{2, 2}, {0.030727928214327224`, 0.030727928214327224`}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{0.2999244521811044, 1.9123470574969528`}, 
         0.030727928214327224`], {
         RGBColor[0.74, 1, 0.58]}, StripOnInput -> False], 
       InsetBox[
        FormBox["12", TraditionalForm], 
        Offset[{2, 2}, {0.33065238039543166`, 1.94307498571128}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
       StyleBox[
        DiskBox[{2.344686949904422, 0.17099830516545433`}, 
         0.030727928214327224`], {
         RGBColor[0.74, 1, 0.58]}, StripOnInput -> False], 
       InsetBox[
        FormBox["13", TraditionalForm], 
        Offset[{2, 2}, {2.3754148781187494`, 0.20172623337978157`}], 
        ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}, {
    FormatType -> TraditionalForm, FrameTicks -> None}], 
   FormBox[
    FormBox[
     TemplateBox[{"\" Pyramidal Neuron, 10 \"", "\" Basket Cell, 3 \""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8200000000000001, 0.19, 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8200000000000001, 0.19, 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.74, 1, 0.58]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.74, 1, 0.58]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8200000000000001, 0.19, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.5466666666666667, 0.12666666666666668`, 
                    0.33333333333333337`], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8200000000000001`", ",", "0.19`", ",", "0.5`"}], "]"}],
                    NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8200000000000001, 0.19, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.8200000000000001, 0.19, 0.5], Editable -> False, 
                Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.74, 1, 0.58], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.49333333333333335`, 0.6666666666666666, 
                    0.38666666666666666`], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.74`", ",", "1", ",", "0.58`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.74, 1, 0.58]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.74, 1, 0.58], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.51, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0.34, 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.51`", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.51, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0.51, 1], Editable -> False, Selectable -> 
                False]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.820039183604994*^9, 3.820040373419113*^9, 3.8200444869675198`*^9, 
   3.820046204496999*^9, 3.820046258733239*^9, 3.820046328618483*^9, 
   3.820046450829802*^9, 3.820046526587675*^9, 3.82015702246236*^9, {
   3.820160554232378*^9, 3.82016056383854*^9}, 3.8206505892363586`*^9, 
   3.820650632352466*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"c80a4e9b-aa62-4775-89f1-fa77a6d1fd5b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.472774726434827, 0.39335825512197076`, 0.10103437037617957`]], 
         LineBox[CompressedData["
1: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
n4ErR1xO17HzPwNLmmwG1vzg/wPuvHTQ
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
        
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.29129600362480046`, 0.377756454665954, 0.6913217145155401]], 
         LineBox[CompressedData["
1:eJw9mHlYjPv7xxM5lhDhRAeV5Uho0ZGyvW2pRIkslUw7LUz7IjXTOjM1UycU
skSWlEico7624oREIvtajo5Cyr6Fn991zXv6p+t13dc97+f1medzP59n9D3X
Ovmoq6mpve+kpvb///n3yvREv/YX8yuUiKbuk85PLSNrwftL4ffAZLIO6k7t
rxYvIutBPObVDJEBeQS0/OXSwDf2Sh6NP9S9ztmdI49FQquP5rBNZBMszD0f
1upHNsP+zB6fyyeTzaEtxjqJFnki0kdNOun23zwlT8KIDd8XW50iW6FxaX7J
iE3kKQg2tOk6bA15Gk5fL1w01oYMCO16L3MYTp6B+j+LM2Q/7JQ8Ez11Dxg3
PCDPwtbcNAOnE+TZEP02R+PJVvIcXLtRNeLPdWRrDK8aGCtYQZ6L912/lDqC
bIO/rmsO8RxBtsWEK57lG7uT7ZDWkGXW3Gar5HmwVh//2PU22R5Dd2effXWG
PB+GRcaKnQfIC/Dx293dgRvJDlhgdbzfYhHZEcZuhvmLgpQsckTZsa5XV7my
vhDl775czLRjfSHqftOMu2jFuhPUP83erDmWdSds6wgSLx/K+iKEDWzyKerL
+k9+Jrb4rsH6YryNuC70bLNR1hcj7mbP2Zf+VrKaM05/CLjin8i6M6ItaiZE
OLO+BEMVaU+6j2N9CYrFB76N6cH6UkyNaNE993Kusr4UgtrFL3feULLaMnxx
sX4fXsn6Mkz/HvKsqZT15ZCdDw5LLGB9OXou3/HIeTvrLsg7/W197XrWXRAx
5eH1Kd6suyLwnl+DgyPrrrixps/ygzNYd8PRm5uWtFmw7oZe1q4hh8xYX4En
8aaZ0aasr0CiwWu1RxNYd4dW9ak5/pasu8OgXr8weTLrK1Ey4sbh+kGsr8SJ
Lhvnt3+zVtYFqDSVJN55pmQIUNW8VBF6W8kiAfr+XRGfe1nJFQIE1Q9N0LnA
fg/kf6rdt+M8+z1gcqX2VO0l9nvgzle7dst69nvAwrBlit9j9ntiRdaiA3df
sd8TjYHq/QZ24vV6wqrp6d39A5Rc4YnijgD9EWPp54UOiU6a0Wwlwws9l8qr
/Vew3wuDY17M2xrJfi84LZrnsj6L/d4Y9bTtWUMx+72xOzLWfms1+72x5nJh
l5Qm9nvD2UxTntKJ95cPcq7ErEwcomT4YOXsaOEzY96PPjAt2x5+iFzhgwPZ
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
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.24347414562046144`, 0.10902143321254676`, 0.3249699981297509]], 
         LineBox[CompressedData["
1:eJw91nk4lPv7B/BJTos2UWgTaS8l1ClFbyVKm0JIaexZYuw7D7OZMTMkLVpH
KZUWtJy0aOi0b6O9TqdIQquUpHT8+l3f5+Yf1+u655573jPPZzH2CV/pr8Hh
cL5143D+/z/9XX/xcvqgIUtULBFeW/UEjxaz1kZAWK6OZx7ZAHlPLub5OJON
sD6SueaqSx6NoS8PrTN1JI9HEje33quFPBkTQm8ZVghonhnWatQHCLotZW2O
aGfGcWYQ2RLze9dOm3GZPAPq7lc7JGuWsZ4Jr4KR2iNryVZY1OY2zNx5Oes5
uPPkman+CbINPOyeMXs4TqwB/23v6yomkW1hYT9U460veR7WTm+/7ZZHng/h
4HdaIy6Q7bBfJ/yL8wvyAqzQu11j/J1sj0CX7+J0nRWsHZD0b2fAemvyQqir
hygfeZMXYZBraZs6jeyIgUZnLLhbyYsxcODcf0YVk5cgddinANc75KUI9K96
8OsdeRmSJYc/6mquZL0cTx5VFG/UIzvhjWJZLXcCa8YJ5X3uzu2wo/oKKFtO
HbngSfUVuPBRoJ+3georYWDaTY+XSPWV8F1aeWOngOrOuHr4zjnjHVR3Rsye
wpUuR6nugh4jPhctPE11F5g05j/fWUp1V6yd+HOz4V9Ud0VfTz+Xb+eovgpW
JgsTFJepvgouq2qXP6imuhtmH+uZcOw51d0Q3POb+a8mqrsj74xZg2M71d1x
Qz7ReUQPZ7buAf5Sg8/dtFkzHhhf9nNq9+FUX417sHN4OYHqq9HPpnfiDkuq
eyIpujb212yqe2LBwelB1XOpvga33+zv957MrEFFwcuxXHuqr0XHo4c9JjtR
fS0Yv9cJBauo7oX/jvceuM2D6l6o/xKi/4lL9XVYnPajZZMb1ddhp6DvxYhl
VOfC6uQiG/4S1uDiTrCJzHIpvZ4L68NKz2NkFReRdzzaw5ZTvzeePtn6z0x6
f3jjYmVJfeZa6vfGu7L21hve1O+N9KFFpWm+1O+DPz9brcn2o34fzNLV6by0
gfp9EOt5sXJGNPX7YGHaqKIDcdTvi9ArubOfkeGLaO1sfgG9nvHFZUWfj0/o
/VS+2DGrclNo13w/fImtb13tSv1+4BtXFratoH4/VAbZlkvo+1X54dMfn5yP
Uj6OP2Lr/QvneFG/Pwo6LrTre1K/P1S+7Rq96fUqf0RbOBnn+1N/AD6nP9r1
Jpj6AzA12f3M9VDqD8CioS2fRoRQfwDMf+rLrnT1B8L5huXwE2uoPxD96k1t
6+j3YQJh3XHe1NaF+gPh10edNIs+H2c99LYvdX5OzxfWQ73lyvQCUP96NE8q
3PFuKvWvR6GWg2uCIfUH4WfY/ZiKQdQfhFVr3ee3D6H+IGyrPO1SNoL6g6AZ
lGI9fyT1B+PV+XMhQ+n9EAxjZfuGy139wThcZVvQOpD6g1EVXf+R6VqfIbjS
X69uXRu7fhGCWddnvTj0mtZzCNZf0KvPvsNaFYLy4WNlq07R+g/FonBv5fJ8
6g+Ffair9oOu/SwUWhK3tMoA6g9FS5m+8WmqczbgrqXzlnoJ9W9A/oh3dtZ5
1P/boXlWJ+j9VRtwoFHzjuN26g+D6F8rkcEW6g+Dwyu9GDs59Ych18ZDpsVQ
fximDLN9dCaM+sNhYN1eV+xB/eE48TBEz9GW+sPxelYL898Y6g+HicPQUZa9
qJ+HHj8NPqxoZM8LIx5GHTVT/3WFNXiY3LDixfl9rLk8OO7zDjhG5xPDw6m2
U3furmat5EHLKqV19XTWKh6s1KFNzADWNTx4Hcfj4CY6HyOwTTCm0+oSa6MI
lC0vKe63izUifu+v2kN/xLLmRqCqdPdi3RWsmQi4BjVdWE/ntzICYR1VWj17
sFZFoF+ZU21zJXv+10RgSo+RWdJ4ug9Ewth8d3HjVNZGkRAdqQ3Sa2TvE4jE
Jd21bcMLWHMjccLs6o/unqyZSKwOyK6tHsxaGYmOxtkjZdXsfUUVCYdiQ68/
FaxrImFdarj38WK6z0Th4sH+XJ4Wa6MorKn0kWreYO9HiMKd6IjNW6SsuVF4
sVUjevwS1kwUbL/mys/1Z62MQueI7GNO99j7lioK7xnDrw1bWNdEYaxEdoJZ
Q/exaHgNDfAaYsLaKBpCnTy/428d2fnRcNQQD5h7gjU3Gi+cm7wuJbNmolGW
Oql2ugNrZTSaZydnKnRYq6Ix99HZxEsvFrHzo/Hlqu/Ta8WsOTGY5GgtzElg
bRSD3IXH7vdeyBoxMHf919JYnzX3tysO/H3xzUJ2fgzuD4u7cOM0a2UMYu2l
laPErFUxGPLT/MNeN9Y1MUhxcMofOZ41Jxb71jUf9PvuwM6PxUfZ7ekW11gj
Fv3fpSyy2cqaG4s4vtvYsf6smVjcMnNeETGNtTIWd62jvqf/tGfnx6Lsl4e5
sIp1TSx41+OXuglZc+Kg8bDI23kea6M43CsY4fL92wJ2fhyuC18+mbyHNTcO
gVlvwsUWrJk4VI8clb+20I6dHwe7mIYZnZfns/Pj4HrSJODgRlvV8iOD/B9d
j8P/5lr+739NHAxbbPovX0H38XgULdsffHUaa6N46PLrXMbp0vMYD5Evpzqo
lX1euPFojBs0RPqENROPC+kftvHPs1bGY13ClLcrCuh5jMepbhfUzSJ6HuPh
Vp/155oN9DwmIODCGdMcF3oeE1C+91td5hzWSEDiggWH542h+QmQeDd8KO9P
8xPw/P22P999p+cxAeEnv0+4X0fPYwJE00yYsLusaxLw76vYvmfPseYkQuyd
/FfZQdZGiRhT/iHVdQuth0S0XrkfvUdA6yERplqqCnkUrYdEHDzSe/MIX5qf
iOhBxvOWONP8REjvvDHWt6P5idi5XKMgaTrNT4KaM39O3Dian4TJ4Z/Seg6l
+Uk4+diu58R+ND8JV0cySc85ND8JvU7xNw1vZdeLMgnyPaa6jU2sVUlwuW5z
fc5LWo9JyK56l23wkNZjMq5Yqh0TbtJ6TEbogn5Na6poPSaD+9VpXWU5rcdk
TFjsUFxYyppJxvxvrmrNwzQ/GQf29Hj8ci/NT8aHwkW3LHbS/GTMFnZT/beZ
5qegV/iHSzY5ND8Ft/ccfftZSvNTwJm4x15PRPNT4NLnbOOhdJqfAsPbG18e
TqH5KQiJWTpDP5HmpyBj4d4v72Np/u/3v95gMDGa5qfC4JNlwa0Imp8KL9t9
zL1wmp+KNd+S9s0Ko/mpKOLkfegMpfmp+PtozSwTsjIVca+aPApCaH4qjk2M
GBxPrknF3NYZE/eTOWk4rnVv8VjqN0qDfke1STsZv12+c8Wwrvlp8EytCpbS
52PS8Mk3+Od8+vzKNGh6lYsWRNH8NGy09hXLYmh+Grye83h68TSfAeeky9Ea
+r60GYya9XZfI32fRgxOVi0/OYm+bzMGC415VkUC+nwMmK2Ts90zWTsx6KXR
1staRp+XwdCVZb9W0O/LY9B2Y9ilvDz6/AxWSp6VaOSzzmHwSF5slL+L8jD4
Z1wbz5WepxIG/bfHa04vonwMOvLa7KYfYa1mELIjZp8zPZ81DCR+7vny06yb
GYBz53DNOcqfjqL11v6OlZQ/HcJnT3yvXaH86ehc/GKJ+y3Kn46Ds3s+bKum
/OmY7f7xYuFjyp+OCe9Ov1zzL+VPx4lCdz3DOsqfDomjr9ubRsqfju9PI/af
+Ej502E3crW+4CvlT8f9IPt7rj8ofzp8Aw4MHEfrX5WO0tsiw29/sFanY2Ds
FY/KPrTfpGNK2+Bp4oGsm9PhH/h9or0+7T8Z6BlY/rhjOGvtDHj/tbvh0Cja
jzLgYX9OZ8l41mYZeLuu3OiVKe1PGWDKq9uDLVg7ZSDvx0xp/UzarzIQp6io
drJhzcsAJ2Txu+L5tH9loG794a+tC1nnZODVH+tNpiyj/TQDl+I2qpxpPy3J
wLzcNoMAd8qfgQ8Ldm3yW0v5M5D2b8C+ZT6UPwP5q7MrTQIpfwY+TTnO1IVQ
fj5e5x9MkPMoPx+typZlxjGUnw/LbqIzuxMoPx+PPDZF/JFK+fk4cuOQrWsG
5eej0yKLoxBRfj76/dcz87iU8vPxt7C/qlxB+fng/sKOI7mUn4+Yxdn9M+n8
UfJxUzZnxJLtlJ8Ph3l56u+7KD8fe3RcpisKKD8fSrte/n33U34+/uulnRxF
51szH+mrjuy4VEz5BTht0fdTxzHKL8CXRMXekWWUX4Dzw1Y1TjpF+QWYy/nQ
bnyG8gtgkrtkoAadp04COGQJQm9doPy/37+yxCldRfkFyLAc1N34EuUX4OvU
njeLL1N+AVbarP5mfI3yC3Cy8+k9/g3KL4DcffTx6luUX4Cy5/1f9qHzXS3A
k9v7T5tXU34BCps7Jfb3Kb8Aum8elDg8pPxCBM7x4s94TPmFaE1e76H7lPIL
4eHeJnvxjPILsffjqfhtzym/EA+4KbG2Lyi/EKWbmdqnLym/ECNWnh/sU0v5
hbBa5rvh2SvKL8RtceG8+a8pvxA6WmGfd9ZTfiE21S5+2PCG8gvxcnKr/ehG
yi/EYAvDPSubKL8QxnddZkbRfb5GiJuDP4aI3lF+Iay/jc+Rvaf8Ivw5ev5P
4QfKL4LZ/UbNqI+UX4TzMys0XD5RfhFMm846TGim/CJsW/po7Bey0+/X2//z
pfQz5RfhntejTv8Wyi/ClV0l+QO+UH4RSv501j5OzhHhDy1lmd1Xyi9CsF7Z
LTW5RIQzHwMOObdSfhEMGhSbbpPVImieVt+3+Ub5ReDZuZQWkZtFeBNoFNWr
jfKLcSZT18ubrC1GxXOHU2VkIzEKtl8+10E2E2PW2ddlc+m+CTFS++99mkR2
Ev++HzwIKyVzxfhVYltSQ+aJMXdt55Pe7ZRfjLCKKhNTco4YdatzbziSlWLE
T1Zp+pJLxJiU0613LFklRnBsUj8BWS3G81HvFsjJNWLsLV9fv5HcLIb/urYR
uWROJkabHx6pIGtngmlTDxKRjTJxUxk8I5Fslondf5QUB5ORicxz/ko3slMm
1NMt59qSuZlYtLGgdByZl4lciwFGfbryZ+K1a2Zp1/09JxMnVh2VXe+6z2fC
/7LPo0JySSbO3ttXlkJW/e7fkGznQlZnwmjOw6PjyTWZSMhVDPhJv19zJky2
7pXc7Pr9JdAr05+9vev3l6C5oM02sOv3lyBpjO05867fX4KLY/pe6qDnCRKY
K7ZGXyY7SXAhcsFbGZkrgek1ubUzmSfB5qDhYgMyI8H8TSdfPKfnN0cCVdQy
TyVZKcEZ6Ov6kkskMPAMGDam6/mXIFjnWeYbWh9qCfaZLQkvItdI4G7/rDaQ
3CxB7zFNLePIHCnGCMefbKD1py1F/sj8GUVkIyl2LxNLA8hmUjx4X3BxDBlS
2F3/9Po1rW8nKfz17/UqJHOlMAg1mOXbtf6lyGpuyRhFZqQwrPrRUkv7RY4U
lq2zNheQlVKs1JwS400ukWLxupu7jMmq35/nauqQV7T/qH/XA8xb9pJrpBh0
3mmaH7lZirBpt1+OIXOysC9xWI9G2t+0s9B93Nwjh8lGWegIv/V0Q9f+l4Vk
9avN08jIQuROq4ZW2i+dstAtZ+yDs2RuFkyfZfswZF4WoNm51Z7MZKHIZ0dC
P3JOFpYMm933Ie3HyizI7Ba57CKXZGG24LNrAFmVBRvF50FmZHUWHlTcz/tB
+3tNFqTBp55cJjdn4VCTuG5j1/4vQ3+bh395kbVlGCD65TaZbCRDVEX3Kz/o
/DCTQTrgYvcbZMhQY3taZzvZSYbjq/E1mMyV4VhGxKE5ZJ4M1WUTLAaQGRlS
tXVzX9F5lSPDtNY9V06TlTLwFgypziKXyLBqv7jUm6yS4f2zF4EzyWoZzBJu
fRnQdf7JUOnU4NJI52OzDBrbt0gryRw5oqbp5e0ga8tx+4aMF0s2kqMP02TY
db6ayeFY3G/3FDLkiNQ79r4P2UmOzGX+vd/S+cyVw2bKXy3XyDw5Vg/gFB0k
M3L0ssgbLSHnyJEu2R0UTFbKUbTDInoJuUSObwcC5k3tOv/l2MafeE+HrJaj
7tVK47YGyi9HaFuZ6XNysxyTJTqtlWSOAqKpg2IOkrUVMJzpVpxNNlLAxzdh
cxzZTIGrE/4z45KhwLtOz6RFZCcFukm0Ii3IXAVKHsTpGJJ5CtSpfnn0JjMK
dN/RtqCV7jc5CggMLt6vJSsVuBW+m3O36/6jgEbPF9fPk1UK/PK/OrmYrFbA
lLNr7HZyjQKqcztOSsjNCowO1XyQQOZkw7FcLyOYrJ2N2C19z3uSjbJhJTRJ
W0o2y8bhz9uuzSUjG1ozizeb//b/ASB/Ypw=
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.37554411814076705`, 0.022056343499239572`, 0.38458573970305876`]], 
         LineBox[CompressedData["
1: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
5t34M82L/j93KA3/WRXyZuuRfzpy9l0Uv0fzXC4dkff4ilk65J8Oq4lery20
yT8dLNUJ+6V+I/90rParQ+sK8k/H439uiR3UJP90nJ+SNuKlQf7p6A3IXWGg
Tv7puD3evE2O3je56VCz6Bl8s4z801H1PLeweSn5p2Odn9bA6SXkn47m6L/f
76f3V2s6ZuUIL6Wpkn86gqRf2kUvIv90hLT19bJVyJ8H5WKnHQELyZ8H1/bK
9kB6P7J4ONNqbxOuTP48tJ2/85SzgPx5+OvNzqzd9HvCmgeVujXbjs0nfx4e
G52yuDGP/HlY6H7Wq4/exxwews/OvzCROJeHuh5HA6055M9Dk7vOiKsS+fNQ
tGd/X8Fs8ufhesURyXuzyJ+HJcN2HnLEvTwI1N+P2NJ5YIgHuZIztUWK5J+B
yk2qZe8UyD8DmrNGL68lZmWgz6X708EZ5J+BY4MPrb9OJ/8MXJfQuOFAbJ0B
6RdhJo3y5J+B214Rf2sRszOw8IeL7VE6r3AyULzgyL05xLkZmJAgYXBgKvln
YE97ffJs4uoM3PR3LS6WI/8MvN78Lm0ZcWsGnn97sOSKLPln4K3phDgr4qEM
dK55GvRqCvln4pnJls+pxHKZMJvXKLGYmJUJobp22h0Z8s+EiaxGUDQxMvFa
q6dqMbF1Js52/avdQ+czl0y8lPk+tIeYnQkno+f3rIg5mZBRYDfJEudmItFH
6lrbZPLPRN2Oh2WFxNWZaDlb4+1FLMzEhGHjryuJWzNht2TAWIq4NxPtxl1a
T6XI/6eP3ozzV4jFstDYHHjpALFcFrzL9y6JJWZlwTFcYcSZWDMLl5OdxC2I
kYXPlTdMfiO2zkL3Im7ZAmKXLMyyvSMjT8zOwtjepsCJxJwsGH5KPftjEvln
4ZWUcuMX4uIshH2qzhslrs6CmPb6iSIW/nxefTnZz8StWSj0Xlbwnbg3C+NX
P+KJi/yzUFXl2jZZ5J+NPwaXuimK/LNx8PGJBSoi/2wcfR33Q1vknw3fYZt+
M5F/NpKHJRvsRP7ZOGR7MIUt8s9GBEtdkSfyz0Z56wzvEpF/NgL5LR5XiXOz
0fN44vdO4uJs6E8smvmZuDob71JqTyqI1j8bKn+kleqK1j8b20xOvNkpWv9s
6Hl2hccTD2XjtZq8ZimxGB++s4sn3SKW42Nm2dsP74lZfODq3U4F6k9NPu5I
o2oNMfioUstx8yG25qOrfOsLUb+78HHc13Fpvaj/+Zjg/3T+G1H/8+HQpHFR
kfZPLh//Ocv3ryMu5sO0+Pz+EOJqPhbVmTYWEwv52PdxneNd4lY+tJb2/v6D
uJePQdOth5bTfh7iQ2jyaYmjaP8LMD26YShbtP8FWCUp139VtP8F4Ftqfn9L
rClA+ZZu1bk0TyCAzGR/l03E1gJ4NG04GE/sIsDBKLHmSmK2AFl2ja8eE3ME
uF41c0CG5leuAA05sY2riIsFuO3XFxxAXC3AtxPtLw6J5p8Am7r6lP4WzT8B
pEdvSH4n7hVA2e7J0SU0P4cEiGHdf7OdWCwH2v2mbanEcjngXnDZWkPMygFL
rMCvl1gzB8fNBLIyNK+Rgyt5tob6P/n/Ab+i54M=
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.44456460934490805`, 0.43586833364985234`, 0.989642749495333]], 
         LineBox[CompressedData["
1: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
3t4=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.36010920716905837`, 0.26522800348497655`, 0.5717984608249251]], 
         LineBox[CompressedData["
1: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
8MPFXg==
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.48202634763588814`, 0.026310845049313913`, 0.5067774094095259]], 
         LineBox[CompressedData["
1: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
g1n/POx/aDuPnUfkoai2oiL0F/8fHXDKvQ==
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.03666451766133205, 0.7963484255076188, 0.22042054941698885`]], 
         LineBox[CompressedData["
1:eJw92HlYzOv/BvDJlr2xL5E5ZCchpNCdJFSMyF5ntEqpKe3LNC0z1TQl54jq
WAplT6eQEGN3rNnOQZZB5PSNsmeJ3/ld19zjH9frenrPPfd8nvl8nvrFI8jF
u4VAIPhoIBD8///8t8m7bfN2dyeNjpCe6tAwyZkWYnlxec7zKXRviDoYFBaO
pkVoWDJrctwA2hT3p3f9sqorPQwHzEva+bahR8Et1bpn2DdHnc2xvubZgqy3
9DgcHRSuPPyKtoDMyaT1Uy09ETeVklOdH9CWyGhpO93qDm2FWbEple436Clw
Pj+5XcQVehpq73TbF3eJBp4um/Qw4AJtCxvFg8xp5+np0Ab0D60/R9th282T
BlL9+gycXW4SeUY/bw/X7K+1D/WvPxMmJ1wsj+rzHXDNxWaUs/79zUKUyalV
G27Ts2Hb7BWtvEfPQfR0g2rjx7QjNoYM/exUQztBfCR7fNf/0c4Qz4t45/mO
novCeXE5Vl/pedgzeeCyMC9eDzFGDt2btPixznIx6p3v+1s6OevW5+PsBMWh
fcU6y+fjtmel1KnNXN26CwqHmRUfX6Cz3AVxoR/7b9vE9QUwvzhhz7ZbXF+A
j013nvi2nqdbX4hszz5+7it1li/EKt8xgcuPct0ViUVZue9biHXrrjAqOJc/
ZbDOgkWYF+rsO8OO64tQWny9eKYb1xfDq+uh7fFrub4YA9VGglFKri9BZfSz
3mnZXF8CM/mB4jsFXF+KFbftdjnt4/pSxJ4oGO9LC5bB4ljnpCS+nnwZnOqz
V/fy5Ppy9B3/3MzKluvL8caqtmTDBK6vQEWx4etBk7i+AneDuskVllx3Q1qH
J/77JnPdDdcvRPRLseK6O85dMTZub811d1TMzbgxhBb8iujhRrOiwPVf0V+U
omq9gOsS5Pki1tdLZ0gg3NSmID6UPy/Btvfvx5kn6ayRoKJoynX3LM6vhG/y
kycf/+D8Spz8WqF5Ucj5lSizLQ0cXMz5lahaf/Jx6SHOe8DbJ6nutwrOe2Dm
uFk1VSc47wGzaaefxp3kvAc8Mt1uHaQFnlC13xEur+S8JxLe7XPueJzznmhh
ulsVXM55T3zo9VF0o5TzXqgte91gd4DzXiicXN/tTRHnvbBtbLVb3TbOe+F4
yl8NC3I4743SFT++2vHzgDeqJhwcbB/NeW80WG8/7j6b896YO8P8kb8x530w
+1CByu+Tbr/DBzZfuvf79zu/Dz7Yvr2+n60B530gM+gs3NiS875Ah9vXA1sz
3xdTL/bQXGjDfF/4plRczTXkvC96z97xuIYWrMIStBEX0VgFX4MueKyfX4Uu
Y8LOZ/L1NavwbPHOb8f1+X44vndkvT/fH/xwRj6szKmZ798Pk6rCa1+xn8YP
pzacadY08Pu9Gj/ef6yvq2X/1dh1KdIr7gnnV8P3wOXh6/7m/Gq8P3IzY+I1
zvtDuSKqOfUs5/2RUx1VnFfBeX+MrF3tIzvIeX/YfqlebF/I+QDsUczp/jOP
8wEIsziUXpHF+QAYLHrUM0HJ+QBUltapJLGcX4M/ll+dvzKE82tg/EKjSF/F
+TXwaTu/80t3zq+BTZxZZbgr5wPxfGjg6ulOnA+EQ7+DRs52nA9E4+guT3Ot
OB+I0k3uXiPHcT4IRycOV7YcwfkgTBn+bP+ggZwPgjzqw1/qvpwPwsqCnn42
3TgvRUu7e5XWHXUWSWHRnH0wgfdnSKGOEtYIf+ru3xIpXmw7eulVE+/nUvSN
v5HX9r3O+VJcHJAeGPRaZ40Urcs9JvR7pbP2P29febbTcz4fgiEqaro9/bHO
omCUJA7vfOy+zghGU7v+bUPuMj8Yw1Iwx+8m84PRrrvQZes15gdj5PmYDUaX
mR+M3Jzm+OMXmB+MnwdWy/LPMj8EZR7nPp3QMD8EyRd6zjU6yfwQFOx1+Tf7
OPNDsHna69HzKpgfAqMbzxInlzM/BOfbls9fcJj5IfjztcjwjzLmh2DX5tJu
RqXMX4vG/Q71B0qYvxZPJbntww8yfy1c7u567V3M/LW4NG1U39gDzF+LW/dP
9S3fz/y1QEd/eQ9asxbV4j+eZe9j/lqEb8p4MpEWhGLxqah+n/cyPxS+eaKZ
d2mEwvNbvlEVLQlFouPe8S9peSjedwkL7cnXyw+FY8SlP36lNaH41E0Qo9Hn
h8Lr/NO6SXx/gjCsi6u5co4WhcHQrWcbH/ZDGGr8+6f11fcPQ2HAOKentDwM
i/r0mVvBzys/DGeWCrML+HlqwjBKdt0s90/mh+G8UZj5Nv3nH44At+Ajpbw+
onAsuxBYc+sQ88MxrPv0Fz94PSXhiB10q24Cr7c8HHLFz9ERR5kfDtl21ZvT
3B+acAwf3RTSg/tHGw7vr6Ftg08wPwJmr8tb3KlkfgTGOjw/PvUU8yMQcc5j
wwHuT0kE9o6oeTfwDPMjkHe67Ywt3M/5EbDs6vnV+DzzI1BdMT9zq37/RyDJ
/d9P4QXMj8T2pzs39w1gfiROnA2tGmbN/EgIesyp3dyZ+ZEQP+hVHPSS58FI
NBhVm208o3N+JC419M0U7NBZE4kO8pweuSk6ayNxXhYut5PyfBmFNU47cx+u
0FkUhXYlDpOsnHVGFIoCzTeOtNVZEoX1PVoZRVsyPwpBBha96sYxPwp2oX9F
TjFnfhTu25vsGUNro/DH0X8GJ/DnBdGY5vP29JuJzI/Gp2Vjbk6ayvxozFsS
MNjEnvnRCOg04p7PXOZHw1gy89GDJcyPxtmc5Z4OXsyPxqn+71vL2FcbjZaz
D99bGMf8GBQ97LWwSMX8GLwPiBw+P4f5MWhxuWs7yyLmxyDm8a7FtoeYH4PF
/yS/WKT//GMQ3XXVVu8q5sfgxb72490eMz8GHWWH742pZ34sQqSVX25+YX4s
br6vamllyOsfixY164wk3Xn9Y/FWsuzc1F+4/2IR7iIyuj6a+y8Wz9Mn/eho
xf0Xi7F4ufezPfdfLOa8O/8jfT73Xxys7mTlXVrB/ReH+55KzX5f5sfB8OYZ
S8sQ5sfhZ7DrFP9Y5seha8Nw75lK5sch6Jz9lsvrmB8H04Ybwi85zI/DLdfC
gbf1+1+G9hE2Hsv09z8ZjkT8LzGL9wfIsB5VCyKOMV+GLtdaHRPqv38ySNTV
e93/Yr4M/md/GepZxXwZQmyuTxT9w3wZLqu3vNj0iPnxeHVyCq7yeSiKh/Tj
UpdT/zI/Hj6bOg9a28D8ePw243XZvx+YHw+5S5Rg8FfmxyNwh9f3IXxea+Ih
6Z/w29uWuue5Nh7HNGY7lW35/Jejsnei4Ss+/4Vy1Ew7mdqrC88Dcjxbaf+q
Zw+dzeUYG9WiurY3zwdyhDss7qDup7NYjsebtvZsLdJZIkfnoCfrFg7SWSpH
8/jzzTFDeD6R4+WYsdWxw3XOkmP6mrScJaN0zpfD9tzkXOEYnUvkEEvEk4rG
8jwjR3k7iaavhc5Vcozr3TMyaCL7ytFHu3lToaXOjXKscPvqdJLnKUECPp1M
qjw2hf0TYOE+ouXmaeyfAM9rv4/xBPsnQNVLPqfLdPZPQEjXpS67eF4TJ0Cd
7zp1iD37J2DGistNmTPZPwFPs0r8njmwfwK+/u285pfZ7J8Avw1R95zmsH8C
7pUtifJ2ZP8EtLlY0COA50VNAno+s12z0pn9E1D86MKkmXPZPwFhHmeGGs9j
/wQ80mTVamlBIhy0x/rniNk/Ec+k33xs57N/Ijbc/Oj2iDZPxOQzRpsCXNg/
EZMMp29toMWJiC+U/fBZwP6J+LR+tvVtWpoIkaHZLYuF7J+I5R+32KjprEQc
LunTdJ/OT4RjmWOACc/LJYlYst66wzJak4jSQxOnZNBViRi1YrHXUVqbiJSl
eFlNNybiw5DK/k3683cSVn4P9u60iP2T0Grg7u79aFESMhsGxJnS5kkIvf2h
YQiNJBgOGXNsEC1Ogvx+hakxLUnCq6IPEfrXlyZh58XTn78yX56E1YMsXzyn
s5LwZdmf8kt0fhI+On5vvUffPwmuh8cfVOj7J6Gt6bzD7vr+/7mgk7OFvn8S
6mbY7W2j75+EVH+Tn3f5+QqSYZVlHb2dFiajMvbU7ABalAxv14u542nzZMSo
F/7exOuJZKwPGPzrcVqcjPIe6aax+uufjAtNSYbW+uufjFNXikY2cb/Ik+E/
4n5ZGZ2VjJ3P/zm1hs5Pxsa1eYFD6JJkGNz6+7F+P2qSYRFeOmoDXZWMB09b
r51Na5Px5F3u1Wbu78ZkDDMLdvmTFihw49UVYy/9/lcgI6japictUsC16eyd
i/y+mCtQGnTgTSQNBdLqswqG02IF7uCz4AG/fxIFBBMWmqhoqQIfc+LbW9Fy
Bezs5//9L7+/WQosqqhfn0vnK+Bc5O04my5RYLJ/nvCL/vuvQM41v4bddJUC
R7t9+bCE1irQXFEwqh3dqMCuY7sKKng/ESghnzbv19W0UAmLyrFSY1qkxO+F
kkdXeT8yV8Lny8ODMhpK9Du9q9GcFivRlDpq93PezyT/Wbbu0UZaqoSsVc2m
ObRcib6rpj7+MYv9leghHVBeRucr0en3nsP86BIllu85PHEArVEixuHXV3d5
P61S4sabQtsMWquEwbrXM+3pRiWsFSnfm3k/FqRgXwdTn3JamIJfhENTgmlR
ChpD6j1G0eYpGBm48Hst7+9IQaS61nUnLU7BzOcjQlbq7/8paPaZuWAALU1B
1TPBt0cz2D8F726a+G+hs1JgvnR4oRudnwKPNdhrQpekwPJIbIyWzxtNCrIu
3+2zg65KwYCQGoUPrU3B07yJmhF0YwpW5pr91cDnlyAVB6Pe5R+mhamQ+Z+c
FUuLUhFxcsJJO9o8FalCmxYd9c+/VGzYIO9+15b9U2HkmfRhKy1JxeHNZQV+
tDQVmusS4wm0PBVzoo9JDOisVCy4/1J6nc/b/FQkZNfM2UyXpGK3bNvr1bQm
FeLfGhdb0VWpsMzNS21Pa1MROsFZVm3D/ql4gt2TDtCCNPxYZF0WTwvT8Euj
osGFFqXhiOPnuiG0eRo+/fZ2xzeeD5AGv+VXet+kxWnIsaly2EVL0vAu1GaM
jJam4adIfM2VlqchWDtKZEZnpSF7xtfBhnR+GlbNufNQO5X903DB8sb047Qm
DVfefnHdSFelIaO3W/cQWpuGxwO/x8ylG9NgV31XNZIWqOBRVzOtHS1UoWe0
aGMtz0MiFRzWx2ZeoM1VMD1bN7iIhgr2pcuWKWmxCgulx4b70hIVdnz5tH4W
LVXhQsD3rBG0XIU3dkdMO9FZKlwbKnRstGZ/FXp1+2Rwhy5RIfDEQoejtEaF
va/79NlCV6lQts8iLJHWqvBwa/bSVXSjCsYWY87NpQXp2DXwU+kEWpiOy0FP
B/WnRekwKanr3po2T4cqtnPya54fkQ73pU5Bf9PidDz7XHTnFC1Jx6Zs09I9
tDQdlgY3Wm+g5elQfim7JqOz0uGbUWO4ms5PR//n4aWudEk6Xn1LumKr/3tg
On5oRsw3o6vSsf+82taY1qbDvO2tvLZ0Yzqipgxe/mky+6uhOV4ur6GFanjf
r2x3mxap8Zss5MNp2lyNQmF3mz9pqOEwprY2nxarceCgxessWqLGoI6Ozgm0
VI1VV+LahNByNXb7De7lSWep/3vF/LiFdL4aI66LLWfSJWrM/ppvb0lr1Ch4
/33HCLpKDTu3+/P701o1XvUqdhbSjWqcfNSU3VLfPwPxX6cO/8zfD4QZeBLT
qs3/aFEG1nZ4OOIJbZ6Bl5pFG2/TyMDt650cLtHiDGzO2mZdSUsy0GpEcUgp
Lc1Ay7+e1+2i5RlI61i/fQudlYF8cUzu73R+BroOc7qWRpdkYM+8PlPltCYD
dQ921IbTVRl4OL/8yhpam4HxE0SvvPS//2TA8dB+6xW0IBPXB008v0DfPxMN
rnlJjvr+mXC0Lw+z0/fPxL5twXnW+v6ZuOtS3jhe3z8TLk3hEaP0/TPRb07B
6MH6/pkwrRzb1UTfPxMS06GmvfT9MxG3Ue4h1PfPRJHrjKvt9P0zcTVaLmmp
75+Jvcl2Js2T2D8T4pitrT7T2ky0Ddnf9S3dmIluTSqH/9GCdTCctWT7C1q4
DvZCq4FaWrQO/vVLLzygzdchMLwm4y6NdVCc6xBZ9Z//D/d46kU=
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.6550461913592571, 0.193385975362254, 0.8852297763917139]], 
         LineBox[CompressedData["
1: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
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.8093319752872472, 0.08823466452642692, 0.9763556042371442]], 
         LineBox[CompressedData["
1:eJxVmXlcjOvfx8tWJz9kqUObCZEWOp1IJB8lOgojrULTXjqlfV+mmalppmlB
1nAqSZaOcFqUZRKHIkKOCBVZOrQJ2eLpef3u7zyvp396vV/3fPvM+7q+93Vd
95225zZ7nxFycnKf5OXk/vc3/diX6+WW1a6RMghxS25Cah6xMiom83UbIomn
4qSLoDuZTcxCe27NnBJ94lnQv1S5aIUCsS6O+Y5Jc3xux7ABGjvKop9cIjbC
2geFUU8OEBtDYjXyjVMcsQmcZwkX27oQL0T08TN/1ywkXgS1LM03x1SIF2Pm
qeqvqh9sGTZHfp+21aj7xBZIauyRCy8nBvbMnevvvZt4Oe4fbjj4MJrYEp3P
3SrvuRJboSK0+twGc+IVGDf+856N04mt0bs7wrhrBPFKVKspO8m9Ws3wKgjO
FdTk3yC2wTH/HQo3yoh/wxFN9gsDL+LVmP6bs8MbFWJbVIT9uJ548zeG7WB6
0qnX1J54DSQlPZ/y/rZheC3K9WrSKpYTr0Nt/B+u2y+vYpiNvaKMxy2rGOay
YZf4E7/y9krm+nrYrXm1a4czw9z16PNccprXas1ct8fKDJ3yGY4Mc+0xcLK3
K7BqBXN9A+4oe/gMvbZirm/ABNe7u33iLaXVEWFv+x9twH8/Z8L8dsD6MO1w
1cPM+HEdwDLJseixofF0xBj/ghuGH5nx4Dpi/vGxFq4naHyckDvi47jPfnTd
CQkFLYV79Om6M6b194y5/IEZL64zShLPWCn+TePngm2fDkqG8ui6C34r++G6
KJquu2Lwx3uRvTNdd8UBq0NzRxvR9Y2YFm6yZu0hZry5GyHW95XMHUnj74Y/
Nk8P0Amj8XbDFrXdU9W7aLw3gT9zzNK1njTem5D3N++yegWN92bY/TpTecQQ
M77czTBQVt6gr0njvQVB+2z6PC5YSl1rRk/67L/l/48vdwu8vhSvOPcHjac7
HO0OW12xpPF2xyrn9adHvafx4kBjy2lzrTMMgwPV1pX7pfE0vhzMDHYKPrmO
YSkHvhF/HawwoHoP9CysNW2YSPUeSG5ZsrJriMbPA2FLjl8z6GNY6oFTXQmq
V17ReHqCpX6ra+A5w/BEW9yfk1U6qd4TJzc6qu2kz0s9UR3od/7fbqr3QnPU
25CSj1TvhdMrVd/6ytP390Ko3OLrhe+p3gtQsVo1bR/Ve6P+caDmrgVU740b
LbvnHX1E8+sNDceR9RPTGZZ64+u5myN3LKX59sGyUp+jbV+Y+YYPtE/k2rmW
0Pz74ORql5C8eQxLfVBSFJP87sJKpt4XW3JVPJc4MAxfqFWnpd3qofvNF1Um
63R0xAxLfZHOz+hR0aZ+8cN7LUuV78eZ/oAfPpxS9N6iSv3jh2+sjdZexsz9
KfWDAVsl8fEpSC1DlqjW3PLDf/8O3Z/+cPsnJsioiOkX+GPNt60ar/dS//jj
mXFNqVYuw1J/mHkcf1ZNLBcA4y1XJ9fto/oA/Fxu/2FTIdUH4NKI97NvllJ9
AFJtHd5tq6H6rWiPy98lbaD6reC6VAbYtVL9VvwUcm1U+Vuq34rYU72ik9+p
PhD3NbMXDigz+wUCEXOm2thxJsPcQOg5KhwtWcCwNBBLG1+r3lxF+8vvmKfo
86HIlep/x4W7beFagVT/O1pc+lJ0E6j+d9jcUPxQIaH6INhcK22W0n6HIASW
frmy7CTVB2H72wPi+TVUH4RZl2yLMuupPhjfTr364PKA6oPR3RbE295J9cGw
jvQwXtRP9cGYFO9QtHaI6rchWvvZ6AeKzP6MbRgsPj5wbzLD3G1Qe/Zli40W
w9Jt4JXaxJjq0n4eAouV/QeLfmGYFYLzN4cKrtDnEQIvF67/by1MHicEJd72
ZzP20PcLQdunnsP7NjGcH4LFoeNuJMyh7xuC1rHZ9qafmPlqD0GT8caxtbdo
/kLRINzbN+oEw6xQdHv85N0moX4IhYvZQi/NCIY5obAMH7qbwKH+CEW/oXtH
6XqG80MRN/MK23EV9UsojryxCJywnPJDce6XO7bhFpQfhsHKVjPVZZQfhgSN
BVlZtH4iDOMzIqOiaL/ihKFM4PZPEJvyw6AW4nNefSPlh6HpXtPK+T6UH4aj
D/Z8dw+l/DA0T0q+G5RE+eEQTtx7hUW+rHA8v1sRZLOf8sMxS9Vic00J5YeD
kz3yd6dKyg9HZGbVmG9XKT8cF+Us03Y2U3441M8+ESo+p/xwlMWou63up/wI
PL4fFmf7g/Ij4N5yX0V+HPVjBB6+Rb6nGs1/BPLfdSQF0PxyI7Dfz7tS2YTm
PwLO8rUnHEDzH4EP08a0G9sx3B6BBfXm9cecqX8jkT+oUVTlyTArEpHlu9a7
B1F+JLqfmpsdiqb8SARuXGsUlUL5kSj+ctn7tZjyI7HQsNH2407Kj4SPmebO
Aro/2yPxV/n2KW+LKD8Kmg7qNx/Q/cqKwmEY3/b9i/KjYLW9zjqP7l9OFARC
J+/oy5QfBQ+Wid/QdcqPQo6/f9b825QfhVtb49WU71N+FNpZtb8VPKL8aLhO
MHB60Ub50dj8XhT+lO5/ROPOzhm3srooPxonlCxEn7opPxrHp726qPmO8qOh
NNCUJPeR8qPhUdrWWPiZ8qOBSvWM4/coPwZNg4oF1/IoPwZFOzxTW/wpPwat
NWdsHi6m/BiElvOLL0yk/BhMlg/L2dZN/ReD48/urrjVSP0XgwsWCeP/PEP9
F4M9tc+qWvKo/2KhNTXwz/Ei6r9YfPuP2WHFOOr/WJxZI18QG0z9H4vH/1Zg
oi/1fywC/tboSKT1ID8WMzf0nQreTPmxkItT8N+1ifJjoS5Yc/YoXZeLQzev
XJ9D9aw4hLbe+pHkTflxsJcvtm4IoPw4BF/VGTs+hPLj8PHPG79o0PNFfhxy
bvXp3KT7WxqHglHWiV/SKD8OB9x0henZlB+P3TrFD9xov2XFY/Ds5zubCyg/
HgoGmmbxxyk/Hrfvva07fJby4xGumHOx/jzlx6P12b+nO2g9kMajXCdX+Rmt
t+3xGN/yffDyA8pPwK9No3sT2yk/AWdnaFaP66L8BLwcPUsrmNYLTgJsW2uu
5X2m/AT4LtTQyJWn/kvA1NPXWI4/Uf8lYMmmzsAntD+3J2BE7RF5g6nUf4m4
vUNkjenUf4ko0S/tnjab+m+YHYsHqgyo/xIxrWIoXfNX6r9EbPT9MN7GjPIT
MbO3fpzZMspPRLTaXsP+FZSfiDF7HhqFrqb8JJwxi+g9t47yk3BHPdv+pgPl
J0HuYyv7GJ0POEkYrH/6Zv0Wyk+Cm4GD4TVav/KT0BUwUUfJj/KT0Kg+9ZU6
nSfak/BBPFU8FEz5yUixXDi7LIzykzEr17DZJIrykzEt+uoJSSzlJ2Prd5+6
KjqPcJOx3qB1fnUy5SdD8aVk5A4e5SdjtumotctTKT8ZEzOL1OuFlM+FW3Vn
hB6tn8pcxErub/Gl8w2Li80h5o8Ssxg24qL3Zf3z0Bz6flykudtEWO1gmM3F
gHV58gCtvxwupt2Y85G3i+EQLjTmKdW9203fnwv/t2aNVnsZzuHisV7qYNQ+
8uGirerQ9Mz9DJdxcbUjZbqQ1ispF8dOzL7pQ+t7Exd3zyV9nHuQfLn4S6Qf
2Ezcx4Wxnv47n0Pkn4JWu/vr2oiVUzB9QonV8j/IPwU74rJFEmKjFNiM0H1Y
S4wU1B3rfdFBzE7BV9tz7t3EnBRUGTi/6yQOSUG8bp11PTE3BZutA7/vJ85J
waEh6fmNxPkpCBwap/UTcVkKYpwFNcX0faUpmOIn1jchbkrBZQc3uTMy/xQ8
1TlXz5L5p+BYhMnkFNn7GR4GO0J979F4KvNQz+paNVW2H/BQ29uzmE3jb8RD
XUHBpXiaH/Bw38BvfR7NH5sHjzblwFN0PuTwsLwyil9F8x3Cwwm1h+MqqR+4
PATMb08YfoRi/HkY6quy2E39k89D6ufJl6Kpv8p4CHO96M/eTv487HvRUcCi
fmziQThe6/Zr6td2HsZdPr7hWCb58yD+7pblKTu/87H10pwnUzLIn4/XKt/y
pCLy5+PO4s8zfNPJnw+FXZfqR9P9Az6ybde9+IPuLzYf3SmHrpkIyJ8PtuKy
y1fofgzh4/LzEzPZsvMLH0ftdBY9oPs3h495L7babkwifz6sFnYeeUj3exkf
IwMSsxzjyZ+PSw+dbW/R+tDEh2qmxfQVMeTPh8hP3a6S1pM+PgZ/z5+kG0n+
ApieDS/bHU7+AjzjST1HytYjATBBwyc4hPwFkKtc1PeA1i8IoPUyzhx0XmML
wMvVSzlK6x1HgC+6fu/GbSV/Afrr6+rC6XzBFWD3HTvdh77kL8B6lUlsCx/y
F0CzR23rYS/yF8ApzvyIIq23UgF+UXxsGMwhfwEqfr44r5nW53YBGkbn3l28
mfwFKD7gbFnoRv6p0Kt4UqS0kfxTESNuYUXQ+0lWKtRvDbQ+dSL/VLz7Oejz
akfyT8WR+XMPVG0g/1Tc8f/z5Rx78k+FW8e7T3vZ5J+KBpVn/WNpv+GmQnmU
Xx93DfmnYpZW3aRPtuSfilHNsRGy/aosFb2j3Y26bcg/FbNPrfQIpOfZplTk
Vzpqv7Um/1RcF7PSt9H+15eKlOslJz9Ykn8a5k/vO5K0nPzTsNZ+tViJzu+s
NOSOPRa0z4L80yB4lOilv5T80/CJvThZuoT808DvP3LPRXZeTMPX/Q6h7xeR
fxrMHAP8d5qSfxoGVBTqF9D735w0zFkiLmyVPU+kwd4paUQq7fdlafjjx7KP
vxiTfxoau16JnxmRfxomPVe6uXs++achbVX5lbXzyH+4ntecrGRI/kJEXlVW
aNAnfyF+/rHOK1OP/IXwqQw46DCX/IXofGR6Ybou+QsRaFNY30PnFfYwmwvq
a3XIXwhDl5F1e2eRvxCbao1qwmXvJ4SY4Dum0n4G+QtRKFGqWaBN/kJwjfIb
NFjkL8S87UOvFei8JBXi/fvx0wY1yV+IppU1m/7VIH8hRsf8Vd6hTv5ChKqZ
6jyh5zm5dLwdIz3xeBr5p2Ozufu6djqfsdLBT3cY9fpn8k9HxtUDtwdUyT8d
1t+Uy0YSs9NRUD2r6Gd6f89JR5Z557H5U8g/HXM5AxdtJ5N/OiT7EtsDJ5H/
MJeJxubQ80V+Op4+FZhX0fmxLB13XbK2dU4g/3SMU43Kn0LclI4Y3skGm/Hk
nw7bO3ZdXHqe7RvOd5s7eP4/5C/CdLnrPd/Gkr8IRWGcBhCzRNi14CE/XYn8
RejSbp7STOdbiLD0/NmomcRsEUpEeYVRiuQvguLbrdsbFchfhO+9DUt0ibki
rJGw9qeNIX8RPocfKno9mvxFGD6iblhLXCZCpfGNg5WjyF+EsRP/iZ9F3CRC
f/O1ztyR5C/C62WPbisS94mwcFDdhDuC/MUwjAhT/Ernd2UxXh09YBVLzBJj
gfyvj7/Ikb8YBy1KrycTQ4wJdz1+KBCzxYgqFkbtpPcJHDHKSxfPmkEcIkZP
cNz3s/T+jjtcb27w1YY4RwzxdS3ljiF6nhHj7sKxvyYQl4lxUW6PqxqxVIwX
fo6xNd8Ybhr+e4r1QnfidjEyzvrEjSHuE8PUd8fKsq/0/JMB93+OdWwiVh7m
+UP4DzErA4vn3Xe9+IVhowxcNQjXDidGBmboTs7UI2ZnQDyme3snPR9xMnCm
dIFOAXFIBljVLHOO7PkpA7MfdtzQJs7JgFVcaf0Lel+WnwFhYo3eSeKyDFzo
tu6MIJZmoLUl880y4qYMXKx8sGCc7H1bBm6sDqt6PEj+GdCccdr/T2I5CbJe
vV/CI1aW4NbfRXNciFkSDMwx1TYiNpKg2FJfS4kYEjwuVZ7y8iP5S2D+hvep
jpgjgcInw9rDxCESTBY0eqUScyUIVDb8x584RwK06Y9fS5wvwTavSvkFxGXD
LN9SrEkslcDQ79CAAnGTBD/2Lnk6QP8vbJdg6YnuTR3EfRIkKyn5Nsn+n5iJ
0y/l+6TEyplI717ff4aYlYnoPQc4xcRGmej3yjbJI0bm8PPCJ6/txOxMOL86
/yKdmJOJtq77ZSnEIZlYmOl5Pp6Ym4mfWKIfUcQ5mZimciA0nDg/E04vxiuF
Epdl4ovUUbqNWJo5PB6jJTJuygTH7o13iMw/E68tn1iGyfwz8TGvUjNS5p+F
OfW7umNk/ll4tvrU8USZfxaULM3X8GX+WSict79RJPPPgulmzqz/889C9WO9
1ftk/sOfX1xgWijzz4JcY+mLEzL/LByys19TIfPPwruq7X61Mv8sXHbNM2yU
+WehXK9570OZfxaWri0qfCnzz0KiCn/Fe5n/cN5Mg5gR1B99WejtDjKdSCyX
jSem6gksYuVsKFiZwYiYlQ1t938TQWyUDbMfPvPXEyMbNl+U1nkO8/8A6Gg1
Nw==
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.5452012540447781, 0.32236429715409365`, 0.9261568250764143]], 
         LineBox[CompressedData["
1:eJxVmXlUjevfh5Mps1JJoiJTRCTqHMOnkUpEqRB28zzP896121N7N9FINBlC
TmZSRAqJ0hGdVCKS8RfpZIq3d73P97fW65/WtZ6++7qv+8ke7q3u5L/NVVpK
SmpwhJTU//6kf3Zn0iM991tWMwiOedP7cgviqfAJGTl3yVhiJTy4PetxTt0m
htWQ9KH0r8tCYg1c5gwobLUiXghJ9+jvmsrES/CIf/uY3GsLhrVxQ7kt58lF
4hXA4olmm4TEK2Ey0mKi6R7iVag2evb6oC6xHj490PZdPIX4D1gXTsh+8Nac
4TXQFfmecL1DvA5uXhrKzceIgeetEv9BAbEBZGXl9K56ExvCJcL82ygrYiO0
B7cvvqZLbIyh/LL1zSrEJsjUcTu+dDSxKeQ1tL/c/GjG8AbMXtz5jv0P8UY8
c9e96lBLbIZCWZPYVekbGTZHd4T/D8fIDQxbQHHsn27zxaYMb8Lm3/17dtw0
YdgS33qUkxXkiTfjUPvqk4URxgxvgdeN4tLAV0YMW+F48axdoy0YZlth+ezb
n8eLDJnrW9HbFb918iqDaiVjPZ0u1lbQffm/39+Kfm6vHLuJerfhhGCn9MMC
htnbcPRs2uMVbLpujfOV55TsaX/Z1pCR/WiQvJeu20DevmVwrj1dt8HC94df
lf5J+7MdS/RT1bzMmf1hb0fJtVuVigLaH1vY5HzKj+tj9odti9cc4UPteNov
OxyJeB/pqE3X7cDl2EZ+lqLr9vgzXm6D6Udm/9j2uGp1K+3LAO3nDuxMbZaP
VKD5HbjHaTVSm03zOzHiP07x5yxpficyUoOC7xXS/u+C+n2LAdFkhtm74GFz
Y520gO6HA9aOlDULfcfsP9sBV45b1f28hOpQ0ys7NlU7/P/9l9qNhjOloVMW
0X7txpZIxRr7EbRfexCXs4o1WpP2aw8Ms+6px2XTfu3F4X6P9vp1DLP3wtDD
Svm0Il1noS3ln1in6QyDBSPLp0Hf9On3WdiwJdHvUzjD1SzkzTX/NP0ezTvi
l31iwQEtxg9H6C+5N39SHq3HEa/OGUuPncCst9oRY4vWJYZF0/qdIKst9Uyh
l2E4YaS/9cE1W6jXCVy3mi6ZcoarnXB7j/r7MePp+cAZXdHcx5N2M4xh5vrO
1SxlmD3MG+d/lnxkuNoZweFvTu+xpXkXFP8oS3dIYh4fLsiRNB+Jfc2sh+2C
krUTLyeF0fpdhv//zflLVovW74rtrbrHvMfQ+l0h9jPQHpVP/a4YVX6qY2kR
7Z8r5sWczP/Sb8rMu2Hst+MPS7kMww3BpS/MNM0ZZrthcX+p3ps1DFe7IbrB
c+MVW5p3x+n+rwvvptO8O6xv77sys5fm3SEz+sjeJGvyuyPD72njj/t0/zzw
vn2/1OutdP884DIh9K5UG63fA+eundrVyqJ+D0Sr6Tc6vqB+T1RMln1wy4H2
zxMWBy3VFjXS/fOE2QY1y8X6tP+ekPOMrTuXR/vvhTviA27P++n+eUH4ZvD+
N2Pm9YTthTL7VRa7Uxiu9sKlbPmw2CZ6vfGGYJnL+5YJzOsXvLGrbGZ9Dxhm
e6Pb7AdfO4Dham+wy5Q+a+fR650PTh7pnOx4neZ9cL59xlmdLpr3Qd+2ERny
QzTvA7nCBQ/dFTcz876o9eE/Ei5hGL6wYLdbN65nmO2LBg/u/iQrhqt90b1V
49rnPTTvh6cqmoa23jTvB6NH+7e9CaV5P7w2m2L/LI7m/dB31snLjUfz/phl
i7pjYpr3x7RbJ9fdSad5f3TM2nisN5Pm/ZFhIq0/P5fmA3BvUPVT3gGG1QKw
vuZL9+58erwAtBTsFSceYpgVAFbvebnZh+nxA3BzzR3JWuKCAARkn1/TR79f
HYD5E+5WGBJ3BWBzaecy0ONLBeLD45DIz//1B2LZEh0rpzzyB0J+bJFndg75
A2FoJ5uVk0X+QHRqtbR57yd/ICpzG4WKGeQPxDi/Lbb5qeQPRNVEsfsoCfmD
EFiW4rFFRP4gPFK8k83hkz8IVgqS5nwu+YNwtNSk8CiH/MMcs9LgEN2fgiD0
psmU8aLJHwQtUW2JYwT5g7DKq+S8Nt1fqWAYBRn+ORBI/mDoZbzwK/cjfzD6
KjWdnOnvgxWMQE1jmSke5A/GuvHFeuddyB+MuIZZZ60dyR8M3bS+WR93kz8Y
szUXyXF3kj8EZz+8mqZoR/4QyHQszS2xJn8IYh+oTtCmv19WCNbkjL19eRP5
Q5Bt0KK63oz8IfDO2by3xoT8Ifh+U/22iSH5Q3Cg/ml63TryhyKjuazf5E/y
hyJsu9bMW6vJH4pA1uByg5XkD0X6KsPdVdrkD8X7qN3X9LTIH4puS43gc4vI
HwqbbFaW1nzyhyL/zlwcm0P+MAQ9V+SpqZI/DFFbrkfnziR/GF4GVa6QUyJ/
GCy0flWI5MkfhrJFA3NGypI/DJNKqsKjJ5E/DK/tTGr7x5E/DIkKvoo+Y8gf
jsn754e+lCZ/OP5pT3nr8Juej8Jh2zI6vuUHw6xwvOsw+GPzV3p+Ckdkpsvc
218YLghHT9I4A3yi56tw3O2zyb3ygeGucAS0SK3QeUvPfxGY4u8xtayHYbUI
7HfI0F/QTf4I/Obony18Rv4IZGxoiVNpJ38E9lYXFGe3kj8CegMFGtNayB+B
fvGJ0akPyR8B9WY38wkPyB8J9SX2//LryR+JtJmdE0ffJn8kvGv00hNqyB+J
eFkxT6qa/JHYlfziP3GV5I/EwINlTUOXyR8J44ZtmrEXyB+Jh9XTRwydIX8U
VvzUt4s9Tf4oeAW5Lvt1gvxRWDpPTxx/jPxRKNhjFDCihPxRMHs0sTOxgPxR
+FIwpXVMPvmjEDm/iiXKJX8UHrTFRk3OIn80XP49s2BfBvmjcUX1rJdSKvmj
cbyp0eRQMvmjMVrZ9qqGgPzR6L0ovH+SS/5oZB4ojdPhkD8aS7X7mq7Gkj8a
zy0z6oyjyB+Dxopqxwdh5I/BX+FHSuyDyR+Diz890rv9yR+DOW+0NP19yB8D
Oa9pgT88yB+D3o8rPQSu5I9B0eQTsopO5I+BxQDPv2QP+WNR5N6eqLOL/LFo
brhkVWNH/liwNs1ttbYhfyw2vpyn8sqK/LHYGVgzO9yS/LEYuvHz+Thz8sfC
qajRPd+U/LHI6ll1drkR+ePAD9KsqVtP/jiMND180GEN+ePAYvPRr0f+OGQ6
NZeLdMkfh+O7ff4zZwX543BlyvpfV5eSPw4xZsufbV9M/jg4yy7Y37eA/PEo
KRqhKtYgfzxMww5zFqqTPx7r17ZX1c4ifzwmvUhrcVYmfzxyRPvqpaeTPx79
OZcOFU0jfzzky+5bG00lfzxeHi1+93Ii+dkIE47y4I9jeCob94ov12uOofWw
UZydpNAozbA2Gz8+a5mH/Gbef4GNqa8CvZR/MmzFRqHz5IgbXxlmsTH0virE
c4DhADYOTtJzkvtM7+/Y6PBfblj5keE0Np7oOii6v2O4gI12E/cuuV6Gy9nQ
nfO78PpLej/IRr/qfQff5ww3sTGjN1xOpZPhLjYu7yy+da+N4T421vzRFxLz
hN4/clD/+KfG0kcMT+WgSdvlcRe9v1Tj4O7ta6L99xnW5mCJYpGRWT31c9C8
v0D6N52XWHHgMt387oUa6ufgpcfiXN9q6ufgWMCD4PlV1M/BT4uKnV1XqJ+D
Ff8GbTlwkfo50Pon0truHPVzUCtl6SFfTv0cvFLxSG0+Rf0cyGw0qk8vpX4O
7gTYKG87Sv0c/HVzEmdaMfUnIOTUs98th6k/ATOu6ubkHqT+BDQ6R1nsyaX+
BLBkFGZqZFF/AmqNPWTeZVB/AsxUHsufS6X+BCznVRrEiKk/ARuTQ9NM6TyJ
nYDfmTul5XjUnwDXZdU5nQnUnwDHd4M2p+KpPwGRntv0omOoPwH7niobW0RS
/7AvJC9SJYz6E9Bdr9T2MYj6E7Dg/RO3m/7Un4iSMiX1bB/qT8Q15xnjfT2p
PxGHdKfNNXaj/kSkpKzzVXGm/kTUOzS9GdhL/YmQUv6W2+RA/YnwPN0bd2oH
9Sfiem59rtCW+hPh01L3zt2a+hPBLR4VtoHO1woSkbngqP5CS+pPxMqh+tXj
zak/Edr70gM/mFL/8Po75HofGlF/Ik4vdzt4CdQ/vN6BgtRDa6mfiyc6f9/k
/UH9XLwcPXF1wGrq50K93e7DzpXUz4XW2aoe0+XUPzzfaaSxcin1cyF4/PHo
nMXUz4Vcd6W/3ELq5+LLhJPxI+dRPxc7Qy88GVCnfi7e2zdHvJlN/Vy4Jw04
d86kfi5aguXyHilRPxd6Z6erNChQPxcOI/ve3pKj/mH/r6Sx16dQPxf/llUH
VUyk/iREKSRoXRpH/Un48vdJvQtjqD8Jds6zMs+PpP4k1PmXG12Qov4kXD+1
1uTSEPP51SoJD2fl51V8Z5iVhGhJgfH1QYYDkvCxW9G49gudTySBPbYxt+ET
w2nD12OzTFvovKIgCeb1OhbP3jFcngTxKu/jb3vp83QSAieO2Dv4iuGmJHTM
u+w/upvhriT8FbvpqXwXw31J4ElHFM3roM/fPHwo+lK7uo3hqTxE3IsytXjC
sBoP3isrNViPGNbmYUmFh2PYQ/q8zoOqvvaQ5AH18/DkW/XXo/eon4fWmzdt
btyhfh5mnn4q21FL/TwEtZzR/n6T+nkYgzdnlKqpn4elLLUsvSrq5+Fiy5eO
HRXUz8MfwpGimEvUz8P1yy/zCs5TPw8vapbK1p2h/uH1nw3/8P409fNRLdiq
rXCK+vk4ctqibR2dH6nxIWQNvPM8Sv18GFa1uWYVUz8ft9K5G28VUD8fptHR
+/vzqZ8Pnbcm5hoHqJ8P6UQ3L9sc6ufDVrB3QJhJ/XzM6j7z7loG9fNxTNRm
OZBK/Xz4XN+uoiWh/mHuOmTnJqJ+PpKfaEkV8ql/2F8RqdjBpX4+tBd8zVNO
oH4BKtVVUnbEU78A11PDPufGUL8AStN9bz2NpH4BWrJtxqiGU78Ag0b5l51D
qF+Anp/nnpYGUr8AMRNGBXzyo34BVqgNhv7hQ/0CbPMZ+MD1pH4Bwk+6tTa5
Ub8AI26U6852oX4BFp3UG+PrSP0C6KY6mVfR9wdNAnTFpktPcaB+ARRKFixz
2kH9AlhxeE0X/3v+J4TP48mvJ9pQvxC7TqgFu2ylfiGe+M4MrdpM/UKcUN/z
Yfom6hfC3GNDe7AZ9QvxIlPX8KEp9Qthdpinqm1M/UI8Ds8JSTOgfiFYp+4Y
fF5H/UJYTw/lb19D/UKkpv8wqaDzs3IhNNQrYtVWU78QPfpTlglWUr8QHWU7
dn5aTv1CLGz5+nvXMuoXQuX4JrU7S6hfhEVPL1zV1aR+ETKGMptLFlC/CH+X
bHFVmEf9Ikj7m4bw51C/CBbrn/3+rkr9ImgGsGUCZlH/8ONdS0/pUaZ+EZJz
YzL2KFG/CDeWnpJvVaB+EdYWSBSsp1G/CNPU0jIbp1K/CIkq8zItJ1O/COUh
1fL3J1C/CDX7WuU3j6N+EVqP9WQ2jaF+ETyPuOXYjKL+ZDTcfaLSNoL6kzEh
rnKu42/m/FItGZ/5eWVvfjKsnQyb1B8Vwd/pvDMZg4M+m34PMmyVDK/pbCfx
AMOsYb5cP6Tcz3BAMoznvZ59so/OR5Ox1Tekbs1HhtOSsWOa4kDjO4YLknHz
auhJlzcMlydjnarB2+89dB6ejJUsrbMZLxluSoZvYP/IJS8Y7kpGRI9NV90z
hvuS8X3G9I3OHfR9jBh5AzJrRjxleKoYbMlQZUEr9YsRMab5nsFj6hejNt3D
8+Xf1C/GZl5ZluAh9Ysxr3CfzVI6/2UNP1749JKWBuoXY+jOWl5cPfWL8TZV
/udC+v4uTYyKb+fGtNRSvxguAWuOJdRQvxirjds7l9+gfjHk+HWnX1yjfjGW
/7NeKbOS+sX4pbNPxayC+sVIN5lR9esS9UsQ/VDvx4UL1C9Bd9HeVr9z1C+B
x/aptovOUL8E/I1/h746Tf0SdI4y1i8+Rf0SyC+eUOR0gvolMNvXfmbuceqX
oOBRglfPEeqXoKq54f6JYuofZqUjHQGF1C/Bc9lxB/UOU78Ej+//O146n/ol
eFObuOR+HvVLsLChVzovh/olMCh0TPPIon4J3H4sf6K3n/pT4BxX/8/4DOpP
wVf+ybzOVOpPwQFXW5XzEupPwdpcH8fkZOpPgSTqko+LkPpTcKZV2mA9n/pT
4Lpw/vOZ9P1KQApkuMusvidQfwqyZNamt9H3h2kp0PH3O1YZR/0piH05Masg
hvpTcKdMwuJFUX8Kjup4jPeLoP4UqJprZNuFUX8KLowXjTcKof4UBG4I9NAO
ov5UOOVfPK8aQP2p2NTh3T/Vj/pT4Xnx2sJRPtSfinR+v/03T+pPRUNtpKDP
3bz6fwAsWB42
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.4616178638520334, 0.41275541156631257`, 0.002015126853272653]], 
         LineBox[CompressedData["
1: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
HweO9j4LygIYruFgF299/kL6vqvj4KfrCbUqb4ZbOEjiG2Wt8iB/LhaHso0e
uJI/F/umzrq/fhX5c7Fj+5sddfbkz0Vcg2p48DLy52LD6LfuDfR+deXirH61
S/hC8ufC5E2rT7MF+XNh9TE0cets8ufixZOlxZ9nkD8XpTcjayNNyJ+LlKC/
p3yaTP5cnJ82Pyl0Ivlz4e/LevxOl/y5iP6lxSZgDPlzcUab+9uL4eTf5/Mt
z8hzCPnz4Pp8Z9FdDfLnQS74oLdCjfx5aJh/f9/FXub7wpwH3sU8vTk/6fuE
B9kZ7D38lWFXHkzm/Ril+4W+V3iwNq0QSz8xzOYBNQHt3R/o+4UHtsUzj8g3
DOfyYJpUe+zlK/qe4eESS6/V6TnDZTy4+9hMPfeIzgM8VDRW2U+5x3ANDyuz
jdfm/sVwHQ9qonvLO/9kuIWH9l1D9ALpvKDCh/3CsY9uVTKszYc4xjBy9gX6
HuMjrv/C1wVnyJ8Pw5IQs58nyZ+PE9FFbn6l5M8Ht/isg/Io+fMRY8kfOqmY
/PlYHnhRwSkifz7MIgZ01e4hfz6S73VPsC4gfz4k7Okqu/LIn4+Dvj0HvkjJ
n49m08YeJzH581ErshtZzCd/PrzneD3vTCf/vudHIte6JpO/AGn/nE8ojiN/
AYzttth9Y5O/AJrhx047hJO/AJ1Fe2/sCiF/Qd/70SP+fQD5C8At6bk0j75f
WQLInS/t4XiTvwC/BBzTuO1O/gIkxrSqjqL7wlwB3EvrxT5O5C/A5DHntx+g
81+ZAAF51w3e2ZK/AMefK2ZMW0z+AtRI60+Fzid/AYIsjE4dm0v+AngejzZu
mEX+QgSWqA2dOp38hVCv1Aryn0L+QoSZmxnvNSB/IQwDij3ujyd/IYzr8z5p
6pC/EN4Zok82I8hfiCwDW4/oIeTflxcpNSrWIH8h6qSWPg9UyV+IkpbuH/17
6TwhxBrDA6rmnQyXCfHitxPJPh10vhDipVeFv7CF4Rohdj3pvFjaROcNIaZc
r97+4B3DLULo7TL89KOezh+ZCJxbW633kmHtTPg75C/HE4YNMjFqdvgG//sM
m2cipL6/IfcundczUTmz45eimwy7ZuLt+da2i1UMszKxOsZm+tNKhtmZSNaM
8Ws/T+enTORPNDk6lM7/uZlY+XHEFJOT5J+JFGufn6D7q7JMdOxrcfE+Qv6Z
OJH3YmXUQfLPRJVx+0TJPvLPRLdKrdqBXeSfiexA49nntpO/CKGZ8Y1/y8lf
BMfte1KaJOQvQnN1irm6kPxFWFCYEmzIIX8R4i4N7NukyV+EcKvmBlY8+fc9
f9CuI4gifxFcEt7mHwsnfxHUFJpND0LIX4S3F0efUg0kfxG0nr4+YEX342Ui
vNTvjIzyJn8RzNY1vzjpTv59rNpe88OF/EV4fSLDYiXdJ7WIwK6GevEK8hcj
0Om9n8ZS8hfD7m1TbOJi8hdjaf07/w46z5uLEXtwlZgzj/zF+Mre5TzenPzF
ONh/9awbpuQvhqXU53ch3c+xxdigGMX1mkz+YjTtGbDSdiL5izHp/cpbtuPJ
X4xN1wIf+tD9UZkYEw2i7PPo7wNKMa48tFJ9M4z8xaixdm/xGEz+YowKLe74
oEH+YqR/7te+n87vKhKIZuleSepP/hKo5npOTeml+wAJXtg6Vhd3MWwuQXzZ
LOfvP+h+QIK1EovhCd8YdpUgkp3obdhB9wUSrNi/zPbnF4bZEhwXhh7s30r3
YxIknb80Z8FnhnMlMJlq6l70iWGFBI/DuLMtPjJcJsHNd0tKOxvpPlCCmvud
AZ8bGK6R4DNv5vERxHUSdG5buTvwA8MtEpT8zeqpe0/3H1l4Xc4LkxBrZ0G6
RcPSh9ggC1HhOYnuxOZZ0B3fPimGGFl4aO7Z+juxaxamfevg61AeKwtnzW57
7yJmZ+G0i+eLedQ/Thbil/Tf1Eicm4UkMRzPkJ8iC9Fa/R7vaCL/LGTGDgvO
pPFQZmHvKV93IY1XTRYmv9cZk9tM/n3PY3zMi2l8W7IQUCmyrWwh/2wIlgWr
v6L50M5G9xRL735t5J+NRb6PLYzayT8bq3x1Ly2n+UU2Up+5zQn6Sv7ZKJAd
7E6jemBlY4gguTTvO/lnY+rG9LZ9VD+cbBwyqj92oJP8s5Fkfu3GXrrfVmSj
rjthazbVX1k2es7HPNnaTf7Z+FhovNmB7rtrsqHe4JM/iuq3LhsHk5Sd94lb
spFy9r1jpgrVvxQfSuvXmPaj+pdi25DkL1eIDaT4w67KeDWtD3Mpei6bd90k
hhRhq07mLlCl9S9FbPnnkYXELCmcFvldayVmS6FhN7l1oRqtfym+6l37nECc
K4Vv6FGjEmKFFMMbPLruEpdJ8cnqwccGYqUUmkovdidxjRTfZ1sM6kfru06K
Kr/EpT30vEWK2ozrB78Qq8jQq5t7rpZYW4bv1l46V4kNZEgdu8dZQWwuw8HD
/VvjiSHDqm3+2+yJXWXosU6/OoKYJYPhlwVjnv7rL8PpyOSxe4k5MoR3T/Dy
Js6VodPTY+MoYoUMAws1T96h8S6TQSsqtIZHrJTh1eI2WBHXyBB98VlCI81f
nQxFpRHvC4lb+vrPCldzIVaR99WfxsJ+/86/HA65le9PUX0YyDEi71BECLG5
HOM53OkTiCHH4/wfYfeovlzlSNEdlpZFzJJj0ZmrJXbEbDnYEQ/M+xFz5MDC
Knsl1W+uHONG7jTiESvk+Dlx3fcVxGVy7PZivxn679935Ii1OKnxjNZDjRwT
gpKER4nr5EgbtzkimbhFjvdrWm67EKvkYP15/q8mxNo58NHXGj2A2CAHX0/n
q779d//PwcUxjjF/EiMHluot3if6+H8A9Dwegg==
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.9567483199951017, 0.36126113688340666`, 0.22936708881817003`]], 
         LineBox[CompressedData["
1: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
          
          "]]}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1000.}, {-90, 20}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"1"}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.472774726434827, 0.39335825512197076`, 
                    0.10103437037617957`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.472774726434827, 0.39335825512197076`, 
                    0.10103437037617957`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.472774726434827, 0.39335825512197076`, 
                    0.10103437037617957`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.31518315095655136`, 0.26223883674798054`, 
                    0.06735624691745305], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.472774726434827`", ",", "0.39335825512197076`",
                     ",", "0.10103437037617957`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.472774726434827, 0.39335825512197076`, 
                    0.10103437037617957`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.472774726434827, 0.39335825512197076`, 
                    0.10103437037617957`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"2"}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.29129600362480046`, 0.377756454665954, 
                    0.6913217145155401]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.29129600362480046`, 0.377756454665954, 
                    0.6913217145155401]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.29129600362480046`, 0.377756454665954, 
                    0.6913217145155401], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.19419733574986697`, 0.25183763644396934`, 
                    0.4608811430103601], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.29129600362480046`", ",", "0.377756454665954`",
                     ",", "0.6913217145155401`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.29129600362480046`, 0.377756454665954, 
                    0.6913217145155401]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.29129600362480046`, 0.377756454665954, 
                    0.6913217145155401], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"3"}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.24347414562046144`, 0.10902143321254676`, 
                    0.3249699981297509]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.24347414562046144`, 0.10902143321254676`, 
                    0.3249699981297509]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.24347414562046144`, 0.10902143321254676`, 
                    0.3249699981297509], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.16231609708030764`, 0.07268095547503117, 
                    0.21664666541983396`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.24347414562046144`", ",", 
                    "0.10902143321254676`", ",", "0.3249699981297509`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.24347414562046144`, 0.10902143321254676`, 
                    0.3249699981297509]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.24347414562046144`, 0.10902143321254676`, 
                    0.3249699981297509], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"4"}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.37554411814076705`, 0.022056343499239572`, 
                    0.38458573970305876`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.37554411814076705`, 0.022056343499239572`, 
                    0.38458573970305876`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.37554411814076705`, 0.022056343499239572`, 
                    0.38458573970305876`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25036274542717807`, 0.014704228999493049`, 
                    0.25639049313537254`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.37554411814076705`", ",", 
                    "0.022056343499239572`", ",", "0.38458573970305876`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.37554411814076705`, 0.022056343499239572`, 
                    0.38458573970305876`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.37554411814076705`, 0.022056343499239572`, 
                    0.38458573970305876`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"5"}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.44456460934490805`, 0.43586833364985234`, 
                    0.989642749495333]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.44456460934490805`, 0.43586833364985234`, 
                    0.989642749495333]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.44456460934490805`, 0.43586833364985234`, 
                    0.989642749495333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2963764062299387, 0.2905788890999016, 
                    0.6597618329968887], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.44456460934490805`", ",", 
                    "0.43586833364985234`", ",", "0.989642749495333`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.44456460934490805`, 0.43586833364985234`, 
                    0.989642749495333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.44456460934490805`, 0.43586833364985234`, 
                    0.989642749495333], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"6"}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.36010920716905837`, 0.26522800348497655`, 
                    0.5717984608249251]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.36010920716905837`, 0.26522800348497655`, 
                    0.5717984608249251]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.36010920716905837`, 0.26522800348497655`, 
                    0.5717984608249251], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24007280477937226`, 0.17681866898998438`, 
                    0.38119897388328344`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.36010920716905837`", ",", 
                    "0.26522800348497655`", ",", "0.5717984608249251`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.36010920716905837`, 0.26522800348497655`, 
                    0.5717984608249251]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.36010920716905837`, 0.26522800348497655`, 
                    0.5717984608249251], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"7"}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.48202634763588814`, 0.026310845049313913`, 
                    0.5067774094095259]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.48202634763588814`, 0.026310845049313913`, 
                    0.5067774094095259]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.48202634763588814`, 0.026310845049313913`, 
                    0.5067774094095259], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.32135089842392545`, 0.017540563366209277`, 
                    0.33785160627301725`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.48202634763588814`", ",", 
                    "0.026310845049313913`", ",", "0.5067774094095259`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.48202634763588814`, 0.026310845049313913`, 
                    0.5067774094095259]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.48202634763588814`, 0.026310845049313913`, 
                    0.5067774094095259], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"8"}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.03666451766133205, 0.7963484255076188, 
                    0.22042054941698885`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.03666451766133205, 0.7963484255076188, 
                    0.22042054941698885`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.03666451766133205, 0.7963484255076188, 
                    0.22042054941698885`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.024443011774221368`, 0.5308989503384125, 
                    0.14694703294465924`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.03666451766133205`", ",", 
                    "0.7963484255076188`", ",", "0.22042054941698885`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.03666451766133205, 0.7963484255076188, 
                    0.22042054941698885`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.03666451766133205, 0.7963484255076188, 
                    0.22042054941698885`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"9"}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6550461913592571, 0.193385975362254, 
                    0.8852297763917139]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6550461913592571, 0.193385975362254, 
                    0.8852297763917139]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6550461913592571, 0.193385975362254, 
                    0.8852297763917139], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.43669746090617145`, 0.128923983574836, 
                    0.5901531842611426], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.6550461913592571`", ",", "0.193385975362254`", 
                    ",", "0.8852297763917139`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6550461913592571, 0.193385975362254, 
                    0.8852297763917139]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6550461913592571, 0.193385975362254, 
                    0.8852297763917139], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"10"}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8093319752872472, 0.08823466452642692, 
                    0.9763556042371442]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8093319752872472, 0.08823466452642692, 
                    0.9763556042371442]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8093319752872472, 0.08823466452642692, 
                    0.9763556042371442], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5395546501914982, 0.058823109684284614`, 
                    0.6509037361580962], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.8093319752872472`", ",", 
                    "0.08823466452642692`", ",", "0.9763556042371442`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8093319752872472, 0.08823466452642692, 
                    0.9763556042371442]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8093319752872472, 0.08823466452642692, 
                    0.9763556042371442], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"11"}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5452012540447781, 0.32236429715409365`, 
                    0.9261568250764143]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5452012540447781, 0.32236429715409365`, 
                    0.9261568250764143]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5452012540447781, 0.32236429715409365`, 
                    0.9261568250764143], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3634675026965188, 0.21490953143606245`, 
                    0.6174378833842762], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.5452012540447781`", ",", 
                    "0.32236429715409365`", ",", "0.9261568250764143`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5452012540447781, 0.32236429715409365`, 
                    0.9261568250764143]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5452012540447781, 0.32236429715409365`, 
                    0.9261568250764143], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"12"}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.4616178638520334, 0.41275541156631257`, 
                    0.002015126853272653]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.4616178638520334, 0.41275541156631257`, 
                    0.002015126853272653]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4616178638520334, 0.41275541156631257`, 
                    0.002015126853272653], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.30774524256802227`, 0.2751702743775417, 
                    0.0013434179021817687`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.4616178638520334`", ",", 
                    "0.41275541156631257`", ",", "0.002015126853272653`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4616178638520334, 0.41275541156631257`, 
                    0.002015126853272653]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4616178638520334, 0.41275541156631257`, 
                    0.002015126853272653], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"13"}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9567483199951017, 0.36126113688340666`, 
                    0.22936708881817003`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9567483199951017, 0.36126113688340666`, 
                    0.22936708881817003`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9567483199951017, 0.36126113688340666`, 
                    0.22936708881817003`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6378322133300678, 0.2408407579222711, 
                    0.1529113925454467], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.9567483199951017`", ",", 
                    "0.36126113688340666`", ",", "0.22936708881817003`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9567483199951017, 0.36126113688340666`, 
                    0.22936708881817003`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9567483199951017, 0.36126113688340666`, 
                    0.22936708881817003`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.820039183604994*^9, 3.820040373419113*^9, 3.8200444869675198`*^9, 
   3.820046204496999*^9, 3.820046258733239*^9, 3.820046328618483*^9, 
   3.820046450829802*^9, 3.820046526587675*^9, 3.82015702246236*^9, {
   3.820160554232378*^9, 3.82016056383854*^9}, 3.8206505892363586`*^9, 
   3.820650632518792*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"41c10720-0834-4f60-b866-31f3a99021f7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1366, 751},
WindowMargins->{{1, Automatic}, {Automatic, 0}},
TaggingRules->{"TryRealOnly" -> False},
Magnification:>0.75 Inherited,
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"34526e73-ec5c-4213-980e-d345e0bd8113"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2785, 74, 86, "Input",ExpressionUUID->"ef810b2a-82e0-48fc-b104-f7c531fbc20e"],
Cell[CellGroupData[{
Cell[3368, 98, 325, 5, 96, "Title",ExpressionUUID->"8bc44782-d938-4f31-9860-4aca125fcec8"],
Cell[CellGroupData[{
Cell[3718, 107, 215, 4, 51, "Chapter",ExpressionUUID->"ed5cdab5-28ff-4806-ae64-c5e150b8b158"],
Cell[CellGroupData[{
Cell[3958, 115, 289, 8, 51, "Section",ExpressionUUID->"97dfadf9-f2cd-47ee-9875-e3209dcf0337"],
Cell[4250, 125, 339, 8, 21, "Author",ExpressionUUID->"cceea9b6-bc9a-4e66-9215-00273ef9e303"],
Cell[4592, 135, 1930, 60, 90, "DisplayFormula",ExpressionUUID->"299c1745-397f-467e-94da-9647caaf6563"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6571, 201, 161, 3, 51, "Chapter",ExpressionUUID->"994986a8-ac87-4f02-b78a-f166998cd872"],
Cell[6735, 206, 1086, 36, 66, "SideNote",ExpressionUUID->"6dd47a1a-7649-4282-985e-2d9565993e7c"],
Cell[7824, 244, 15905, 301, 839, "Input",ExpressionUUID->"ca724389-9eac-4dde-8e08-359e77c07a54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23766, 550, 170, 3, 51, "Chapter",ExpressionUUID->"08145c2f-bcf1-4c27-8694-4dce89e50161"],
Cell[23939, 555, 1173, 40, 56, "SideNote",ExpressionUUID->"c2361805-c572-41ed-af1a-3a62e2d2361c"],
Cell[25115, 597, 4277, 75, 117, "Input",ExpressionUUID->"56f26081-3395-4b15-8081-3868e2c70a80"],
Cell[29395, 674, 412, 12, 38, "SideNote",ExpressionUUID->"f35f8c17-5414-44ae-8b58-63c621ec8249"],
Cell[29810, 688, 11375, 248, 165, "Input",ExpressionUUID->"8addf692-000a-47d6-a4a2-b670dd27ac5a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41222, 941, 168, 3, 51, "Chapter",ExpressionUUID->"441a0f87-7bbc-423d-90f9-156f6096122e"],
Cell[CellGroupData[{
Cell[41415, 948, 3810, 62, 117, "Input",ExpressionUUID->"e405567a-4a05-4662-895c-4443213812a9"],
Cell[45228, 1012, 25278, 502, 200, "Output",ExpressionUUID->"498e7bbc-de93-4689-926f-e7eaf6e90645"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70555, 1520, 507, 8, 51, "Chapter",ExpressionUUID->"0b08caf5-80c4-4b13-82b4-b0e204aa17e6"],
Cell[71065, 1530, 338, 7, 38, "SideNote",ExpressionUUID->"95338c21-a0ce-4a79-802e-eccbecc43787"],
Cell[71406, 1539, 3364, 85, 228, "Input",ExpressionUUID->"e0d6aef7-e5e5-47bb-a7ee-f6fc09f110b7"],
Cell[74773, 1626, 469, 13, 38, "SideNote",ExpressionUUID->"335f6107-820f-45c7-872e-06e665347abf"],
Cell[CellGroupData[{
Cell[75267, 1643, 4658, 114, 156, "Input",ExpressionUUID->"3158e1b1-1cc5-4f99-a085-687d5cf3f7e2"],
Cell[79928, 1759, 4512, 125, 192, "Output",ExpressionUUID->"79e1ffb1-72d1-46d9-82d9-54301322ac12"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[84489, 1890, 163, 3, 51, "Chapter",ExpressionUUID->"8bbcbaa5-5562-4d64-a919-28f60d08177a"],
Cell[CellGroupData[{
Cell[84677, 1897, 174, 3, 50, "Section",ExpressionUUID->"dadf6088-4f96-4ca6-a1d8-2a99efdf9841"],
Cell[84854, 1902, 722, 22, 40, "SideNote",ExpressionUUID->"d3fde073-ab9d-45a0-a49b-00662f3ae77d"],
Cell[CellGroupData[{
Cell[85601, 1928, 4563, 116, 121, "Input",ExpressionUUID->"7b9a3cfe-2b22-4783-876a-5bc58466aa3e"],
Cell[90167, 2046, 4841, 134, 77, "Output",ExpressionUUID->"d49d44fd-4326-4034-82f7-4124fd27082d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[95057, 2186, 183, 3, 50, "Section",ExpressionUUID->"c6e6870c-55c6-4698-b6a2-ff478683f613"],
Cell[95243, 2191, 842, 24, 52, "SideNote",ExpressionUUID->"eb49201a-7680-4567-8f3e-edacd1b393ce"],
Cell[CellGroupData[{
Cell[96110, 2219, 6007, 139, 429, "Input",ExpressionUUID->"c82f1e38-9746-43ac-8e3d-5238f85189c4"],
Cell[102120, 2360, 13921, 358, 233, "Output",ExpressionUUID->"d07a16d3-b248-4ffa-8da4-4f85c93c1bf6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[116102, 2725, 192, 3, 51, "Chapter",ExpressionUUID->"874f65b6-6598-4e90-a9aa-0821fe0d089f"],
Cell[116297, 2730, 794, 25, 41, "SideNote",ExpressionUUID->"63095d5f-0698-4dac-86f8-6ddb2d44c1f3"],
Cell[117094, 2757, 6773, 163, 230, "Input",ExpressionUUID->"acbefce8-0ada-4098-bd1d-9b44168ab110"],
Cell[123870, 2922, 296, 6, 40, "SideNote",ExpressionUUID->"60c94d82-6082-4162-b765-8cf5f0e4b7e0"],
Cell[124169, 2930, 4780, 99, 141, "Input",ExpressionUUID->"6c36a366-fe92-4f7e-93b8-eea384975fa5"],
Cell[128952, 3031, 237, 5, 40, "SideNote",ExpressionUUID->"f165e451-83f7-4544-b616-fb6c7f6a7e6d"],
Cell[129192, 3038, 2644, 45, 39, "Input",ExpressionUUID->"8aa08ebb-a10e-4c84-9a35-0632760af99f"],
Cell[131839, 3085, 248, 5, 39, "SideNote",ExpressionUUID->"da57ad96-83ed-41e3-8ba7-4008c53802a7"],
Cell[132090, 3092, 4547, 92, 165, "Input",ExpressionUUID->"a1791867-fe12-40ac-b371-88b524a5b4af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136674, 3189, 163, 3, 51, "Chapter",ExpressionUUID->"d93a4249-2942-4059-b87f-41323c5eb219"],
Cell[136840, 3194, 306, 6, 39, "SideNote",ExpressionUUID->"61a78d07-edd9-46de-975d-253cc8f87eac"],
Cell[137149, 3202, 5308, 143, 243, "Input",ExpressionUUID->"9fcbf68b-3fd6-49fe-aba4-fdc9aeea5278"],
Cell[142460, 3347, 258, 6, 39, "SideNote",ExpressionUUID->"cbedb397-8018-42c4-b800-30810cc0bf48"],
Cell[142721, 3355, 2705, 67, 212, "Input",ExpressionUUID->"6d52c9b9-7c52-4e54-9e4c-bb48f3c1f967"],
Cell[145429, 3424, 522, 13, 22, "Input",ExpressionUUID->"6d418ce2-1170-4e4e-83e0-45badf897331"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145988, 3442, 161, 3, 51, "Chapter",ExpressionUUID->"356949dd-dc81-4d71-b81d-23dcc800eebd"],
Cell[CellGroupData[{
Cell[146174, 3449, 1723, 37, 169, "Input",ExpressionUUID->"58a736e9-3c01-4824-9a0d-dbe462277e06"],
Cell[147900, 3488, 24268, 488, 321, "Output",ExpressionUUID->"c80a4e9b-aa62-4775-89f1-fa77a6d1fd5b"],
Cell[172171, 3978, 167152, 3133, 352, "Output",ExpressionUUID->"41c10720-0834-4f60-b866-31f3a99021f7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

